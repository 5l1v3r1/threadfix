////////////////////////////////////////////////////////////////////////
//
//     Copyright (c) 2009-2014 Denim Group, Ltd.
//
//     The contents of this file are subject to the Mozilla Public License
//     Version 2.0 (the "License"); you may not use this file except in
//     compliance with the License. You may obtain a copy of the License at
//     http://www.mozilla.org/MPL/
//
//     Software distributed under the License is distributed on an "AS IS"
//     basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
//     License for the specific language governing rights and limitations
//     under the License.
//
//     The Original Code is ThreadFix.
//
//     The Initial Developer of the Original Code is Denim Group, Ltd.
//     Portions created by Denim Group, Ltd. are Copyright (C)
//     Denim Group, Ltd. All Rights Reserved.
//
//     Contributor(s): Denim Group, Ltd.
//
////////////////////////////////////////////////////////////////////////
package com.denimgroup.threadfix.webapp.controller;

import com.denimgroup.threadfix.data.entities.Vulnerability;
import com.denimgroup.threadfix.data.entities.VulnerabilitySearchParameters;
import com.denimgroup.threadfix.remote.response.RestResponse;
import com.denimgroup.threadfix.service.ChannelTypeService;
import com.denimgroup.threadfix.service.GenericVulnerabilityService;
import com.denimgroup.threadfix.service.OrganizationService;
import com.denimgroup.threadfix.service.VulnerabilitySearchService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("/reports/")
@PreAuthorize("hasRole('ROLE_CAN_GENERATE_REPORTS')")
public class VulnerabilitySearchController {

    @Autowired
    public VulnerabilitySearchService vulnerabilitySearchService;
    @Autowired
    public OrganizationService organizationService;
    @Autowired
    public ChannelTypeService channelTypeService;
    @Autowired
    private GenericVulnerabilityService genericVulnerabilityService;


    @RequestMapping(value="search", method = RequestMethod.POST)
    public @ResponseBody RestResponse<List<Vulnerability>> searchVulnerabilities(@ModelAttribute VulnerabilitySearchParameters parameters) {
        return RestResponse.success(vulnerabilitySearchService.performLookup(parameters));
    }

    @RequestMapping(value="parameters", method = RequestMethod.GET)
    public @ResponseBody RestResponse<Map<String, Object>> getParameters() {

        Map<String, Object> responseObject = new HashMap<>();

        responseObject.put("teams", organizationService.loadAllActive());
        responseObject.put("scanners", channelTypeService.loadAll());
        responseObject.put("vulnTypes", genericVulnerabilityService.loadAll());

        return RestResponse.success(responseObject);
    }
}
