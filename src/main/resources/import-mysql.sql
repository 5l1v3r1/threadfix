-- ----------------------------------------------------------------------
--  Complete Report of all Data
--	Date: July 15, 2011
--
-- 	Runtime: Command Line mysql source [file]
-- 	Contains Mappings for: 	Cat.NET, AppScan, Netsparker, Sentinel
--                          Skipfish, w3af, WebInspect, Veracode, BurpSuite
--
--							Generic Mappings to CWEs
--							Vulnerability and Severity Maps to Generics
--							Sample Organizations and Applications
--							WAF Types
--							Defect Tracker Types
--							OpenSAMM
--
-- 	NOTES: 	Pulling data sections from this to create smaller inserts for 
--			testing is advised for shorter import time. Generic Mappings
--			will need to match those found in each ChannelType.
-- ----------------------------------------------------------------------

-- ------------------------------------
-- ROLES -------------------
-- ------------------------------------
INSERT INTO Role (id, displayname, name) VALUES (1, 'Administrator', 'ROLE_ADMIN');
INSERT INTO Role (id, displayname, name) VALUES (2, 'User', 'ROLE_USER');

-- ------------------------------------
-- SAMPLE ORGS/APPS -------------------
-- ------------------------------------
insert into organization (name, createdDate, modifiedDate, active) values ('SRS', now(), now(), 1);
insert into organization (name, createdDate, modifiedDate, active) values ('Procurement', now(), now(), 1);
insert into organization (name, createdDate, modifiedDate, active) values ('Denim Group', now(), now(), 1);

insert into application (name, url, organizationId, createdDate, modifiedDate, active) values ('Order Review', 'http://srs/OrderReview', 1, now(), now(), 1);
insert into application (name, url, organizationId, createdDate, modifiedDate, active) values ('Store Walk', 'http://srs/handheld/storewalk', 1, now(), now(), 1);
insert into application (name, url, organizationId, createdDate, modifiedDate, active) values ('Central Inventory', 'http://srs/ci', 1, now(), now(), 1);
insert into application (name, url, organizationId, createdDate, modifiedDate, active) values ('CMIS', 'http://cmis/index.htm', 2, now(), now(), 1);
insert into application (name, url, organizationId, createdDate, modifiedDate, active) values ('DCC', 'http://intranet.heb.com/dcc', 2, now(), now(), 1);

-- ------------------------------------
-- INSERT CHANNELS --------------------
-- ------------------------------------
INSERT INTO ChannelType (name, url, version) VALUES ('Microsoft CAT.NET', 'http://msdn.microsoft.com/en-us/security/default.aspx', '1 CTP');
INSERT INTO ChannelType (name, url, version) VALUES ('IBM Rational AppScan', 'http://www-01.ibm.com/software/awdtools/appscan/', '-');
INSERT INTO ChannelType (name, url, version) VALUES ('Mavituna Security Netsparker', 'http://www.mavitunasecurity.com/', '-');
INSERT INTO ChannelType (name, url, version) VALUES ('WhiteHat Sentinel', 'http://www.whitehatsec.com/home/services/services.html', '-');
INSERT INTO ChannelType (name, url, version) VALUES ('Manual', '-', '-');
INSERT INTO ChannelType (name, url, version) VALUES ('Skipfish', 'http://code.google.com/p/skipfish/', '1.92b');
INSERT INTO ChannelType (name, url, version) VALUES ('w3af', 'http://w3af.sourceforge.net/', '1.0-rc6');
INSERT INTO ChannelType (name, url, version) VALUES ('WebInspect', 'https://www.fortify.com/products/web_inspect.html', '9.00');
INSERT INTO ChannelType (name, url, version) VALUES ('Veracode', 'http://www.veracode.com/', '-');
INSERT INTO ChannelType (name, url, version) VALUES ('Burp Suite', 'http://portswigger.net/burp/', '1.4');

SET @cat_net_channel_id := (SELECT id FROM ChannelType WHERE name = 'Microsoft CAT.NET');
SET @appscan_channel_id := (SELECT id FROM ChannelType WHERE name = 'IBM Rational AppScan');
SET @netsparker_net_channel_id := (SELECT id FROM ChannelType WHERE name = 'Mavituna Security Netsparker');
SET @sentinel_channel_id := (SELECT id FROM ChannelType WHERE name = 'WhiteHat Sentinel');
SET @manual_channel_id := (SELECT id FROM ChannelType WHERE name = 'Manual');
SET @skipfish_channel_id := (SELECT id FROM ChannelType WHERE name = 'Skipfish');
SET @w3af_channel_id := (SELECT id FROM ChannelType WHERE name = 'w3af');
SET @webinspect_channel_id := (SELECT id FROM ChannelType WHERE name = 'WebInspect');
SET @veracode_channel_id := (SELECT id FROM ChannelType WHERE name = 'Veracode');
SET @burp_suite_channel_id := (SELECT id FROM ChannelType WHERE name = 'Burp Suite');

-- ------------------------------------
-- INSERT WAFTYPES --------------------
-- ------------------------------------
INSERT INTO WafType (name, initialID) VALUES ('Snort', 100000);
INSERT INTO WafType (name, initialID) VALUES ('mod_security', 100000);

SET @snort_waf_type_id := (SELECT id FROM WafType WHERE name = 'Snort');
SET @mod_security_waf_type_id := (SELECT id FROM WafType WHERE name = 'mod_security');

INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('alert', @snort_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('log', @snort_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('pass', @snort_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('activate', @snort_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('dynamic', @snort_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('drop', @snort_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('reject', @snort_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('sdrop', @snort_waf_type_id);

INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('deny', @mod_security_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('drop', @mod_security_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('pass', @mod_security_waf_type_id);
INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('allow', @mod_security_waf_type_id);

-- These require additional data, which we can't handle right now.
-- INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('proxy', @mod_security_waf_type_id);
-- INSERT INTO WafRuleDirective (directive, wafTypeId) VALUES ('redirect', @mod_security_waf_type_id);

-- ------------------------------------
-- INSERT DEFECTTRACKERTYPES ----------
-- ------------------------------------
INSERT INTO DefectTrackerType (name) VALUES ('Bugzilla');
INSERT INTO DefectTrackerType (name) VALUES ('Jira');

SET @jira_defect_tracker_id := (SELECT id FROM DefectTrackerType WHERE name = 'Jira');
SET @bugzilla_defect_tracker_id := (SELECT id FROM DefectTrackerType WHERE name = 'Bugzilla');

-- ------------------------------------
-- INSERT GENERIC MAPPINGS ------------
-- ------------------------------------
INSERT INTO GenericVulnerability (name, id) VALUES ('Location', '1');
INSERT INTO GenericVulnerability (name, id) VALUES ('Environment', '2');
INSERT INTO GenericVulnerability (name, id) VALUES ('Technology-specific Environment Issues', '3');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Environment Issues', '4');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Misconfiguration: Data Transmission Without Encryption', '5');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Misconfiguration: Insufficient Session-ID Length', '6');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Misconfiguration: Missing Custom Error Page', '7');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Misconfiguration: Entity Bean Declared Remote', '8');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Misconfiguration: Weak Access Permissions for EJB Methods', '9');
INSERT INTO GenericVulnerability (name, id) VALUES ('ASP.NET Environment Issues', '10');
INSERT INTO GenericVulnerability (name, id) VALUES ('ASP.NET Misconfiguration: Creating Debug Binary', '11');
INSERT INTO GenericVulnerability (name, id) VALUES ('ASP.NET Misconfiguration: Missing Custom Error Page', '12');
INSERT INTO GenericVulnerability (name, id) VALUES ('ASP.NET Misconfiguration: Password in Configuration File', '13');
INSERT INTO GenericVulnerability (name, id) VALUES ('Compiler Removal of Code to Clear Buffers', '14');
INSERT INTO GenericVulnerability (name, id) VALUES ('External Control of System or Configuration Setting', '15');
INSERT INTO GenericVulnerability (name, id) VALUES ('Configuration', '16');
INSERT INTO GenericVulnerability (name, id) VALUES ('Code', '17');
INSERT INTO GenericVulnerability (name, id) VALUES ('Source Code', '18');
INSERT INTO GenericVulnerability (name, id) VALUES ('Data Handling', '19');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Input Validation', '20');
INSERT INTO GenericVulnerability (name, id) VALUES ('Pathname Traversal and Equivalence Errors', '21');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Limitation of a Pathname to a Restricted Directory (''Path Traversal'')', '22');
INSERT INTO GenericVulnerability (name, id) VALUES ('Relative Path Traversal', '23');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''../filedir''', '24');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''/../filedir''', '25');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''/dir/../filename''', '26');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''dir/../../filename''', '27');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''..\filedir''', '28');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''\..\filename''', '29');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''\dir\..\filename''', '30');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''dir\..\..\filename''', '31');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''...'' (Triple Dot)', '32');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''....'' (Multiple Dot)', '33');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''....//''', '34');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''.../...//''', '35');
INSERT INTO GenericVulnerability (name, id) VALUES ('Absolute Path Traversal', '36');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''/absolute/pathname/here''', '37');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''\absolute\pathname\here''', '38');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''C:dirname''', '39');
-- INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''\\UNC\share\name\'' (Windows UNC Share)', '40');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Traversal: ''UNC share name'' (Windows UNC Share)', '40');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Resolution of Path Equivalence', '41');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''filename.'' (Trailing Dot)', '42');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''filename....'' (Multiple Trailing Dot)', '43');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''file.name'' (Internal Dot)', '44');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''file...name'' (Multiple Internal Dot)', '45');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''filename '' (Trailing Space)', '46');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: '' filename (Leading Space)', '47');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''file name'' (Internal Whitespace)', '48');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''filename/'' (Trailing Slash)', '49');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''//multiple/leading/slash''', '50');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''/multiple//internal/slash''', '51');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''/multiple/trailing/slash//''', '52');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''\multiple\\internal\backslash''', '53');
-- INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''filedir\'' (Trailing Backslash)', '54');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''filedir'' (Trailing Backslash)', '54');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''/./'' (Single Dot Directory)', '55');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''filedir*'' (Wildcard)', '56');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: ''fakedir/../realdir/filename''', '57');
INSERT INTO GenericVulnerability (name, id) VALUES ('Path Equivalence: Windows 8.3 Filename', '58');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Link Resolution Before File Access (''Link Following'')', '59');
INSERT INTO GenericVulnerability (name, id) VALUES ('UNIX Path Link Problems', '60');
INSERT INTO GenericVulnerability (name, id) VALUES ('UNIX Symbolic Link (Symlink) Following', '61');
INSERT INTO GenericVulnerability (name, id) VALUES ('UNIX Hard Link', '62');
INSERT INTO GenericVulnerability (name, id) VALUES ('Windows Path Link Problems', '63');
INSERT INTO GenericVulnerability (name, id) VALUES ('Windows Shortcut Following (.LNK)', '64');
INSERT INTO GenericVulnerability (name, id) VALUES ('Windows Hard Link', '65');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of File Names that Identify Virtual Resources', '66');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Windows Device Names', '67');
INSERT INTO GenericVulnerability (name, id) VALUES ('Windows Virtual File Problems', '68');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Handle Windows ::DATA Alternate Data Stream', '69');
INSERT INTO GenericVulnerability (name, id) VALUES ('Mac Virtual File Problems', '70');
INSERT INTO GenericVulnerability (name, id) VALUES ('Apple ''.DS_Store''', '71');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Apple HFS+ Alternate Data Stream Path', '72');
INSERT INTO GenericVulnerability (name, id) VALUES ('External Control of File Name or Path', '73');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Data into a Different Plane (''Injection'')', '74');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)', '75');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Resolve Equivalent Special Elements into a Different Plane', '76');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Special Elements used in a Command (''Command Injection'')', '77');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Special Elements used in an OS Command (''OS Command Injection'')', '78');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Preserve Web Page Structure (''Cross-site Scripting'')', '79');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Script-Related HTML Tags in a Web Page (Basic XSS)', '80');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Script in an Error Message Web Page', '81');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Script in Attributes of IMG Tags in a Web Page', '82');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Script in Attributes in a Web Page', '83');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Resolve Encoded URI Schemes in a Web Page', '84');
INSERT INTO GenericVulnerability (name, id) VALUES ('Doubled Character XSS Manipulations', '85');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Invalid Characters in Identifiers in Web Pages', '86');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Alternate XSS Syntax', '87');
INSERT INTO GenericVulnerability (name, id) VALUES ('Argument Injection or Modification', '88');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Special Elements used in an SQL Command (''SQL Injection'')', '89');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Data into LDAP Queries (''LDAP Injection'')', '90');
INSERT INTO GenericVulnerability (name, id) VALUES ('XML Injection (aka Blind XPath Injection)', '91');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED: Improper Sanitization of Custom Special Characters', '92');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize CRLF Sequences (''CRLF Injection'')', '93');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Control Generation of Code (''Code Injection'')', '94');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Directives in Dynamically Evaluated Code (''Eval Injection'')', '95');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Directives in Statically Saved Code (''Static Code Injection'')', '96');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Server-Side Includes (SSI) Within a Web Page', '97');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Control of Filename for Include/Require Statement in PHP Program (''PHP File Inclusion'')', '98');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Control of Resource Identifiers (''Resource Injection'')', '99');
INSERT INTO GenericVulnerability (name, id) VALUES ('Technology-Specific Input Validation Problems', '100');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts Validation Problems', '101');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Duplicate Validation Forms', '102');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Incomplete validate() Method Definition', '103');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Form Bean Does Not Extend Validation Class', '104');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Form Field Without Validator', '105');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Plug-in Framework not in Use', '106');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Unused Validation Form', '107');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Unvalidated Action Form', '108');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Validator Turned Off', '109');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Validator Without Form Field', '110');
INSERT INTO GenericVulnerability (name, id) VALUES ('Direct Use of Unsafe JNI', '111');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing XML Validation', '112');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize CRLF Sequences in HTTP Headers (''HTTP Response Splitting'')', '113');
INSERT INTO GenericVulnerability (name, id) VALUES ('Process Control', '114');
INSERT INTO GenericVulnerability (name, id) VALUES ('Misinterpretation of Input', '115');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Encoding or Escaping of Output', '116');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Output Sanitization for Logs', '117');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Access of Indexable Resource (''Range Error'')', '118');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Constrain Operations within the Bounds of a Memory Buffer', '119');
INSERT INTO GenericVulnerability (name, id) VALUES ('Buffer Copy without Checking Size of Input (''Classic Buffer Overflow'')', '120');
INSERT INTO GenericVulnerability (name, id) VALUES ('Stack-based Buffer Overflow', '121');
INSERT INTO GenericVulnerability (name, id) VALUES ('Heap-based Buffer Overflow', '122');
INSERT INTO GenericVulnerability (name, id) VALUES ('Write-what-where Condition', '123');
INSERT INTO GenericVulnerability (name, id) VALUES ('Buffer Underwrite (''Buffer Underflow'')', '124');
INSERT INTO GenericVulnerability (name, id) VALUES ('Out-of-bounds Read', '125');
INSERT INTO GenericVulnerability (name, id) VALUES ('Buffer Over-read', '126');
INSERT INTO GenericVulnerability (name, id) VALUES ('Buffer Under-read', '127');
INSERT INTO GenericVulnerability (name, id) VALUES ('Wrap-around Error', '128');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Validation of Array Index', '129');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Length Parameter Inconsistency ', '130');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Calculation of Buffer Size', '131');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED (Duplicate): Miscalculated Null Termination', '132');
INSERT INTO GenericVulnerability (name, id) VALUES ('String Errors', '133');
INSERT INTO GenericVulnerability (name, id) VALUES ('Uncontrolled Format String', '134');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Calculation of Multi-Byte String Length', '135');
INSERT INTO GenericVulnerability (name, id) VALUES ('Type Errors', '136');
INSERT INTO GenericVulnerability (name, id) VALUES ('Representation Errors', '137');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Special Elements', '138');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED: General Special Element Problems', '139');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Delimiters', '140');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Parameter/Argument Delimiters', '141');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Value Delimiters', '142');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Record Delimiters', '143');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Line Delimiters', '144');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Section Delimiters', '145');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Expression/Command Delimiters', '146');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Input Terminators', '147');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Input Leaders', '148');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Quoting Syntax', '149');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Escape, Meta, or Control Sequences', '150');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Comment Delimiters', '151');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Macro Symbols', '152');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Substitution Characters', '153');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Variable Name Delimiters', '154');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Wildcards or Matching Symbols', '155');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Whitespace', '156');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Paired Delimiters', '157');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Null Byte or NUL Character', '158');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Special Element', '159');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Leading Special Elements', '160');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Multiple Leading Special Elements', '161');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Trailing Special Elements', '162');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Multiple Trailing Special Elements', '163');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Internal Special Elements', '164');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of Multiple Internal Special Elements', '165');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Missing Special Element', '166');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Additional Special Element', '167');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Resolve Inconsistent Special Elements', '168');
INSERT INTO GenericVulnerability (name, id) VALUES ('Technology-Specific Special Elements', '169');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Null Termination', '170');
INSERT INTO GenericVulnerability (name, id) VALUES ('Cleansing, Canonicalization, and Comparison Errors', '171');
INSERT INTO GenericVulnerability (name, id) VALUES ('Encoding Error', '172');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Handle Alternate Encoding', '173');
INSERT INTO GenericVulnerability (name, id) VALUES ('Double Decoding of the Same Data', '174');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Handle Mixed Encoding', '175');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Handle Unicode Encoding', '176');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Handle URL Encoding (Hex Encoding)', '177');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Resolve Case Sensitivity', '178');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Behavior Order: Early Validation', '179');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Behavior Order: Validate Before Canonicalize', '180');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Behavior Order: Validate Before Filter', '181');
INSERT INTO GenericVulnerability (name, id) VALUES ('Collapse of Data Into Unsafe Value', '182');
INSERT INTO GenericVulnerability (name, id) VALUES ('Permissive Whitelist', '183');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incomplete Blacklist', '184');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Regular Expression', '185');
INSERT INTO GenericVulnerability (name, id) VALUES ('Overly Restrictive Regular Expression', '186');
INSERT INTO GenericVulnerability (name, id) VALUES ('Partial Comparison', '187');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on Data/Memory Layout', '188');
INSERT INTO GenericVulnerability (name, id) VALUES ('Numeric Errors', '189');
INSERT INTO GenericVulnerability (name, id) VALUES ('Integer Overflow or Wraparound', '190');
INSERT INTO GenericVulnerability (name, id) VALUES ('Integer Underflow (Wrap or Wraparound)', '191');
INSERT INTO GenericVulnerability (name, id) VALUES ('Integer Coercion Error', '192');
INSERT INTO GenericVulnerability (name, id) VALUES ('Off-by-one Error', '193');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unexpected Sign Extension', '194');
INSERT INTO GenericVulnerability (name, id) VALUES ('Signed to Unsigned Conversion Error', '195');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unsigned to Signed Conversion Error', '196');
INSERT INTO GenericVulnerability (name, id) VALUES ('Numeric Truncation Error', '197');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Incorrect Byte Ordering', '198');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Management Errors', '199');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Exposure', '200');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Sent Data', '201');
INSERT INTO GenericVulnerability (name, id) VALUES ('Privacy Leak through Data Queries', '202');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Exposure Through Discrepancy', '203');
INSERT INTO GenericVulnerability (name, id) VALUES ('Response Discrepancy Information Leak', '204');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Exposure Through Behavioral Discrepancy', '205');
INSERT INTO GenericVulnerability (name, id) VALUES ('Internal Behavioral Inconsistency Information Leak', '206');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Exposure Through an External Behavioral Inconsistency', '207');
INSERT INTO GenericVulnerability (name, id) VALUES ('Timing Discrepancy Information Leak', '208');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Exposure Through an Error Message', '209');
INSERT INTO GenericVulnerability (name, id) VALUES ('Product-Generated Error Message Information Leak', '210');
INSERT INTO GenericVulnerability (name, id) VALUES ('Product-External Error Message Information Leak', '211');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Cross-boundary Removal of Sensitive Data', '212');
INSERT INTO GenericVulnerability (name, id) VALUES ('Intended Information Leak', '213');
INSERT INTO GenericVulnerability (name, id) VALUES ('Process Environment Information Leak', '214');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Debug Information', '215');
INSERT INTO GenericVulnerability (name, id) VALUES ('Containment Errors (Container Errors)', '216');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED: Failure to Protect Stored Data from Modification', '217');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED (Duplicate): Failure to provide confidentiality for stored data', '218');
INSERT INTO GenericVulnerability (name, id) VALUES ('Sensitive Data Under Web Root', '219');
INSERT INTO GenericVulnerability (name, id) VALUES ('Sensitive Data Under FTP Root', '220');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Loss or Omission', '221');
INSERT INTO GenericVulnerability (name, id) VALUES ('Truncation of Security-relevant Information', '222');
INSERT INTO GenericVulnerability (name, id) VALUES ('Omission of Security-relevant Information', '223');
INSERT INTO GenericVulnerability (name, id) VALUES ('Obscured Security-relevant Information by Alternate Name', '224');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED (Duplicate): General Information Management Problems', '225');
INSERT INTO GenericVulnerability (name, id) VALUES ('Sensitive Information Uncleared Before Release', '226');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Fulfill API Contract (''API Abuse'')', '227');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Syntactically Invalid Structure', '228');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Values', '229');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Missing Values', '230');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Extra Values', '231');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Undefined Values', '232');
INSERT INTO GenericVulnerability (name, id) VALUES ('Parameter Problems', '233');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Handle Missing Parameter', '234');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Extra Parameters', '235');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Undefined Parameters', '236');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Structural Elements', '237');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Incomplete Structural Elements', '238');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Handle Incomplete Element', '239');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Inconsistent Structural Elements', '240');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Unexpected Data Type', '241');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Inherently Dangerous Function', '242');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Change Working Directory in chroot Jail', '243');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Clear Heap Memory Before Release (''Heap Inspection'')', '244');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Bad Practices: Direct Management of Connections', '245');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Bad Practices: Direct Use of Sockets', '246');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on DNS Lookups in a Security Decision', '247');
INSERT INTO GenericVulnerability (name, id) VALUES ('Uncaught Exception', '248');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED: Often Misused: Path Manipulation', '249');
INSERT INTO GenericVulnerability (name, id) VALUES ('Execution with Unnecessary Privileges', '250');
INSERT INTO GenericVulnerability (name, id) VALUES ('Often Misused: String Management', '251');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unchecked Return Value', '252');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Check of Function Return Value', '253');
INSERT INTO GenericVulnerability (name, id) VALUES ('Security Features', '254');
INSERT INTO GenericVulnerability (name, id) VALUES ('Credentials Management', '255');
INSERT INTO GenericVulnerability (name, id) VALUES ('Plaintext Storage of a Password', '256');
INSERT INTO GenericVulnerability (name, id) VALUES ('Storing Passwords in a Recoverable Format', '257');
INSERT INTO GenericVulnerability (name, id) VALUES ('Empty Password in Configuration File', '258');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Hard-coded Password', '259');
INSERT INTO GenericVulnerability (name, id) VALUES ('Password in Configuration File', '260');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weak Cryptography for Passwords', '261');
INSERT INTO GenericVulnerability (name, id) VALUES ('Not Using Password Aging', '262');
INSERT INTO GenericVulnerability (name, id) VALUES ('Password Aging with Long Expiration', '263');
INSERT INTO GenericVulnerability (name, id) VALUES ('Permissions, Privileges, and Access Controls', '264');
INSERT INTO GenericVulnerability (name, id) VALUES ('Privilege / Sandbox Issues', '265');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Privilege Assignment', '266');
INSERT INTO GenericVulnerability (name, id) VALUES ('Privilege Defined With Unsafe Actions', '267');
INSERT INTO GenericVulnerability (name, id) VALUES ('Privilege Chaining', '268');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Privilege Management', '269');
INSERT INTO GenericVulnerability (name, id) VALUES ('Privilege Context Switching Error', '270');
INSERT INTO GenericVulnerability (name, id) VALUES ('Privilege Dropping / Lowering Errors', '271');
INSERT INTO GenericVulnerability (name, id) VALUES ('Least Privilege Violation', '272');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Check for Dropped Privileges', '273');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Insufficient Privileges', '274');
INSERT INTO GenericVulnerability (name, id) VALUES ('Permission Issues', '275');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Default Permissions', '276');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insecure Inherited Permissions', '277');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insecure Preserved Inherited Permissions', '278');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Execution-Assigned Permissions', '279');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Insufficient Permissions or Privileges ', '280');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Preservation of Permissions', '281');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Ownership Management', '282');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unverified Ownership', '283');
INSERT INTO GenericVulnerability (name, id) VALUES ('Access Control (Authorization) Issues', '284');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Access Control (Authorization)', '285');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect User Management', '286');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Authentication', '287');
INSERT INTO GenericVulnerability (name, id) VALUES ('Authentication Bypass Using an Alternate Path or Channel', '288');
INSERT INTO GenericVulnerability (name, id) VALUES ('Authentication Bypass by Alternate Name', '289');
INSERT INTO GenericVulnerability (name, id) VALUES ('Authentication Bypass by Spoofing', '290');
INSERT INTO GenericVulnerability (name, id) VALUES ('Trusting Self-reported IP Address', '291');
INSERT INTO GenericVulnerability (name, id) VALUES ('Trusting Self-reported DNS Name', '292');
INSERT INTO GenericVulnerability (name, id) VALUES ('Using Referer Field for Authentication', '293');
INSERT INTO GenericVulnerability (name, id) VALUES ('Authentication Bypass by Capture-replay', '294');
INSERT INTO GenericVulnerability (name, id) VALUES ('Certificate Issues', '295');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Following of Chain of Trust for Certificate Validation', '296');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Validation of Host-specific Certificate Data', '297');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Validation of Certificate Expiration', '298');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Check for Certificate Revocation', '299');
INSERT INTO GenericVulnerability (name, id) VALUES ('Channel Accessible by Non-Endpoint (''Man-in-the-Middle'')', '300');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reflection Attack in an Authentication Protocol', '301');
INSERT INTO GenericVulnerability (name, id) VALUES ('Authentication Bypass by Assumed-Immutable Data', '302');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Implementation of Authentication Algorithm', '303');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Critical Step in Authentication', '304');
INSERT INTO GenericVulnerability (name, id) VALUES ('Authentication Bypass by Primary Weakness', '305');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Authentication for Critical Function', '306');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Restriction of Excessive Authentication Attempts', '307');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Single-factor Authentication', '308');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Password System for Primary Authentication', '309');
INSERT INTO GenericVulnerability (name, id) VALUES ('Cryptographic Issues', '310');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Encryption of Sensitive Data', '311');
INSERT INTO GenericVulnerability (name, id) VALUES ('Cleartext Storage of Sensitive Information', '312');
INSERT INTO GenericVulnerability (name, id) VALUES ('Plaintext Storage in a File or on Disk', '313');
INSERT INTO GenericVulnerability (name, id) VALUES ('Plaintext Storage in the Registry', '314');
INSERT INTO GenericVulnerability (name, id) VALUES ('Plaintext Storage in a Cookie', '315');
INSERT INTO GenericVulnerability (name, id) VALUES ('Plaintext Storage in Memory', '316');
INSERT INTO GenericVulnerability (name, id) VALUES ('Plaintext Storage in GUI', '317');
INSERT INTO GenericVulnerability (name, id) VALUES ('Plaintext Storage in Executable', '318');
INSERT INTO GenericVulnerability (name, id) VALUES ('Cleartext Transmission of Sensitive Information', '319');
INSERT INTO GenericVulnerability (name, id) VALUES ('Key Management Errors', '320');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Hard-coded Cryptographic Key', '321');
INSERT INTO GenericVulnerability (name, id) VALUES ('Key Exchange without Entity Authentication', '322');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reusing a Nonce, Key Pair in Encryption', '323');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of a Key Past its Expiration Date', '324');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Required Cryptographic Step', '325');
INSERT INTO GenericVulnerability (name, id) VALUES ('Inadequate Encryption Strength', '326');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of a Broken or Risky Cryptographic Algorithm', '327');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reversible One-Way Hash', '328');
INSERT INTO GenericVulnerability (name, id) VALUES ('Not Using a Random IV with CBC Mode', '329');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Insufficiently Random Values', '330');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Entropy', '331');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Entropy in PRNG', '332');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Insufficient Entropy in TRNG', '333');
INSERT INTO GenericVulnerability (name, id) VALUES ('Small Space of Random Values', '334');
INSERT INTO GenericVulnerability (name, id) VALUES ('PRNG Seed Error', '335');
INSERT INTO GenericVulnerability (name, id) VALUES ('Same Seed in PRNG', '336');
INSERT INTO GenericVulnerability (name, id) VALUES ('Predictable Seed in PRNG', '337');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Cryptographically Weak PRNG', '338');
INSERT INTO GenericVulnerability (name, id) VALUES ('Small Seed Space in PRNG', '339');
INSERT INTO GenericVulnerability (name, id) VALUES ('Predictability Problems', '340');
INSERT INTO GenericVulnerability (name, id) VALUES ('Predictable from Observable State', '341');
INSERT INTO GenericVulnerability (name, id) VALUES ('Predictable Exact Value from Previous Values', '342');
INSERT INTO GenericVulnerability (name, id) VALUES ('Predictable Value Range from Previous Values', '343');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Invariant Value in Dynamically Changing Context', '344');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Verification of Data Authenticity', '345');
INSERT INTO GenericVulnerability (name, id) VALUES ('Origin Validation Error', '346');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Verification of Cryptographic Signature', '347');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Less Trusted Source', '348');
INSERT INTO GenericVulnerability (name, id) VALUES ('Acceptance of Extraneous Untrusted Data With Trusted Data', '349');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improperly Trusted Reverse DNS', '350');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Type Distinction', '351');
INSERT INTO GenericVulnerability (name, id) VALUES ('Cross-Site Request Forgery (CSRF)', '352');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Add Integrity Check Value', '353');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Validation of Integrity Check Value', '354');
INSERT INTO GenericVulnerability (name, id) VALUES ('User Interface Security Issues', '355');
INSERT INTO GenericVulnerability (name, id) VALUES ('Product UI does not Warn User of Unsafe Actions', '356');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient UI Warning of Dangerous Operations', '357');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improperly Implemented Security Check for Standard', '358');
INSERT INTO GenericVulnerability (name, id) VALUES ('Privacy Violation', '359');
INSERT INTO GenericVulnerability (name, id) VALUES ('Trust of System Event Data', '360');
INSERT INTO GenericVulnerability (name, id) VALUES ('Time and State', '361');
INSERT INTO GenericVulnerability (name, id) VALUES ('Race Condition', '362');
INSERT INTO GenericVulnerability (name, id) VALUES ('Race Condition Enabling Link Following', '363');
INSERT INTO GenericVulnerability (name, id) VALUES ('Signal Handler Race Condition', '364');
INSERT INTO GenericVulnerability (name, id) VALUES ('Race Condition in Switch', '365');
INSERT INTO GenericVulnerability (name, id) VALUES ('Race Condition within a Thread', '366');
INSERT INTO GenericVulnerability (name, id) VALUES ('Time-of-check Time-of-use (TOCTOU) Race Condition', '367');
INSERT INTO GenericVulnerability (name, id) VALUES ('Context Switching Race Condition', '368');
INSERT INTO GenericVulnerability (name, id) VALUES ('Divide By Zero', '369');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Check for Certificate Revocation after Initial Check', '370');
INSERT INTO GenericVulnerability (name, id) VALUES ('State Issues', '371');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incomplete Internal State Distinction', '372');
INSERT INTO GenericVulnerability (name, id) VALUES ('State Synchronization Error', '373');
INSERT INTO GenericVulnerability (name, id) VALUES ('Mutable Objects Passed by Reference', '374');
INSERT INTO GenericVulnerability (name, id) VALUES ('Passing Mutable Objects to an Untrusted Method', '375');
INSERT INTO GenericVulnerability (name, id) VALUES ('Temporary File Issues', '376');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insecure Temporary File', '377');
INSERT INTO GenericVulnerability (name, id) VALUES ('Creation of Temporary File With Insecure Permissions', '378');
INSERT INTO GenericVulnerability (name, id) VALUES ('Creation of Temporary File in Directory with Incorrect Permissions', '379');
INSERT INTO GenericVulnerability (name, id) VALUES ('Technology-Specific Time and State Issues', '380');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Time and State Issues', '381');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Bad Practices: Use of System.exit()', '382');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Bad Practices: Direct Use of Threads', '383');
INSERT INTO GenericVulnerability (name, id) VALUES ('Session Fixation', '384');
INSERT INTO GenericVulnerability (name, id) VALUES ('Covert Timing Channel', '385');
INSERT INTO GenericVulnerability (name, id) VALUES ('Symbolic Name not Mapping to Correct Object', '386');
INSERT INTO GenericVulnerability (name, id) VALUES ('Signal Errors', '387');
INSERT INTO GenericVulnerability (name, id) VALUES ('Error Handling', '388');
INSERT INTO GenericVulnerability (name, id) VALUES ('Error Conditions, Return Values, Status Codes', '389');
INSERT INTO GenericVulnerability (name, id) VALUES ('Detection of Error Condition Without Action', '390');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unchecked Error Condition', '391');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Report Error in Status Code', '392');
INSERT INTO GenericVulnerability (name, id) VALUES ('Return of Wrong Status Code', '393');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unexpected Status Code or Return Value', '394');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of NullPointerException Catch to Detect NULL Pointer Dereference', '395');
INSERT INTO GenericVulnerability (name, id) VALUES ('Declaration of Catch for Generic Exception', '396');
INSERT INTO GenericVulnerability (name, id) VALUES ('Declaration of Throws for Generic Exception', '397');
INSERT INTO GenericVulnerability (name, id) VALUES ('Indicator of Poor Code Quality', '398');
INSERT INTO GenericVulnerability (name, id) VALUES ('Resource Management Errors', '399');
INSERT INTO GenericVulnerability (name, id) VALUES ('Uncontrolled Resource Consumption (''Resource Exhaustion'')', '400');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Release Memory Before Removing Last Reference (''Memory Leak'')', '401');
INSERT INTO GenericVulnerability (name, id) VALUES ('Transmission of Private Resources into a New Sphere (''Resource Leak'')', '402');
INSERT INTO GenericVulnerability (name, id) VALUES ('UNIX File Descriptor Leak', '403');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Resource Shutdown or Release', '404');
INSERT INTO GenericVulnerability (name, id) VALUES ('Asymmetric Resource Consumption (Amplification)', '405');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Control of Network Message Volume (Network Amplification)', '406');
INSERT INTO GenericVulnerability (name, id) VALUES ('Algorithmic Complexity', '407');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Behavior Order: Early Amplification', '408');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Highly Compressed Data (Data Amplification)', '409');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Resource Pool', '410');
INSERT INTO GenericVulnerability (name, id) VALUES ('Resource Locking Problems', '411');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unrestricted Externally Accessible Lock', '412');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Resource Locking', '413');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Lock Check', '414');
INSERT INTO GenericVulnerability (name, id) VALUES ('Double Free', '415');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use After Free', '416');
INSERT INTO GenericVulnerability (name, id) VALUES ('Channel and Path Errors', '417');
INSERT INTO GenericVulnerability (name, id) VALUES ('Channel Errors', '418');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unprotected Primary Channel', '419');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unprotected Alternate Channel', '420');
INSERT INTO GenericVulnerability (name, id) VALUES ('Race Condition During Access to Alternate Channel', '421');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unprotected Windows Messaging Channel (''Shatter'')', '422');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED (Duplicate): Proxied Trusted Channel', '423');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Protect Alternate Path', '424');
INSERT INTO GenericVulnerability (name, id) VALUES ('Direct Request (''Forced Browsing'')', '425');
INSERT INTO GenericVulnerability (name, id) VALUES ('Untrusted Search Path', '426');
INSERT INTO GenericVulnerability (name, id) VALUES ('Uncontrolled Search Path Element', '427');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unquoted Search Path or Element', '428');
INSERT INTO GenericVulnerability (name, id) VALUES ('Handler Errors', '429');
INSERT INTO GenericVulnerability (name, id) VALUES ('Deployment of Wrong Handler', '430');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Handler', '431');
INSERT INTO GenericVulnerability (name, id) VALUES ('Dangerous Handler not Disabled During Sensitive Operations', '432');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unparsed Raw Web Content Delivery', '433');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unrestricted Upload of File with Dangerous Type', '434');
INSERT INTO GenericVulnerability (name, id) VALUES ('Interaction Error', '435');
INSERT INTO GenericVulnerability (name, id) VALUES ('Interpretation Conflict', '436');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incomplete Model of Endpoint Features', '437');
INSERT INTO GenericVulnerability (name, id) VALUES ('Behavioral Problems', '438');
INSERT INTO GenericVulnerability (name, id) VALUES ('Behavioral Change in New Version or Environment', '439');
INSERT INTO GenericVulnerability (name, id) VALUES ('Expected Behavior Violation', '440');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unintended Proxy/Intermediary', '441');
INSERT INTO GenericVulnerability (name, id) VALUES ('Web Problems', '442');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED (Duplicate): HTTP response splitting', '443');
INSERT INTO GenericVulnerability (name, id) VALUES ('Inconsistent Interpretation of HTTP Requests (''HTTP Request Smuggling'')', '444');
INSERT INTO GenericVulnerability (name, id) VALUES ('User Interface Errors', '445');
INSERT INTO GenericVulnerability (name, id) VALUES ('UI Discrepancy for Security Feature', '446');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unimplemented or Unsupported Feature in UI', '447');
INSERT INTO GenericVulnerability (name, id) VALUES ('Obsolete Feature in UI', '448');
INSERT INTO GenericVulnerability (name, id) VALUES ('The UI Performs the Wrong Action', '449');
INSERT INTO GenericVulnerability (name, id) VALUES ('Multiple Interpretations of UI Input', '450');
INSERT INTO GenericVulnerability (name, id) VALUES ('UI Misrepresentation of Critical Information', '451');
INSERT INTO GenericVulnerability (name, id) VALUES ('Initialization and Cleanup Errors', '452');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insecure Default Variable Initialization', '453');
INSERT INTO GenericVulnerability (name, id) VALUES ('External Initialization of Trusted Variables or Data Stores', '454');
INSERT INTO GenericVulnerability (name, id) VALUES ('Non-exit on Failed Initialization', '455');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Initialization', '456');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Uninitialized Variable', '457');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED: Incorrect Initialization', '458');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incomplete Cleanup', '459');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Cleanup on Thrown Exception', '460');
INSERT INTO GenericVulnerability (name, id) VALUES ('Data Structure Issues', '461');
INSERT INTO GenericVulnerability (name, id) VALUES ('Duplicate Key in Associative List (Alist)', '462');
INSERT INTO GenericVulnerability (name, id) VALUES ('Deletion of Data Structure Sentinel', '463');
INSERT INTO GenericVulnerability (name, id) VALUES ('Addition of Data Structure Sentinel', '464');
INSERT INTO GenericVulnerability (name, id) VALUES ('Pointer Issues', '465');
INSERT INTO GenericVulnerability (name, id) VALUES ('Return of Pointer Value Outside of Expected Range', '466');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of sizeof() on a Pointer Type', '467');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Pointer Scaling', '468');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Pointer Subtraction to Determine Size', '469');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Externally-Controlled Input to Select Classes or Code (''Unsafe Reflection'')', '470');
INSERT INTO GenericVulnerability (name, id) VALUES ('Modification of Assumed-Immutable Data (MAID)', '471');
INSERT INTO GenericVulnerability (name, id) VALUES ('External Control of Assumed-Immutable Web Parameter', '472');
INSERT INTO GenericVulnerability (name, id) VALUES ('PHP External Variable Modification', '473');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Function with Inconsistent Implementations', '474');
INSERT INTO GenericVulnerability (name, id) VALUES ('Undefined Behavior for Input to API', '475');
INSERT INTO GenericVulnerability (name, id) VALUES ('NULL Pointer Dereference', '476');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Obsolete Functions', '477');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Default Case in Switch Statement', '478');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unsafe Function Call from a Signal Handler', '479');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Incorrect Operator', '480');
INSERT INTO GenericVulnerability (name, id) VALUES ('Assigning instead of Comparing', '481');
INSERT INTO GenericVulnerability (name, id) VALUES ('Comparing instead of Assigning', '482');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Block Delimitation', '483');
INSERT INTO GenericVulnerability (name, id) VALUES ('Omitted Break Statement in Switch', '484');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Encapsulation', '485');
INSERT INTO GenericVulnerability (name, id) VALUES ('Comparison of Classes by Name', '486');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on Package-level Scope', '487');
INSERT INTO GenericVulnerability (name, id) VALUES ('Data Leak Between Sessions', '488');
INSERT INTO GenericVulnerability (name, id) VALUES ('Leftover Debug Code', '489');
INSERT INTO GenericVulnerability (name, id) VALUES ('Mobile Code Issues', '490');
INSERT INTO GenericVulnerability (name, id) VALUES ('Public cloneable() Method Without Final (''Object Hijack'')', '491');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Inner Class Containing Sensitive Data', '492');
INSERT INTO GenericVulnerability (name, id) VALUES ('Critical Public Variable Without Final Modifier', '493');
INSERT INTO GenericVulnerability (name, id) VALUES ('Download of Code Without Integrity Check', '494');
INSERT INTO GenericVulnerability (name, id) VALUES ('Private Array-Typed Field Returned From A Public Method', '495');
INSERT INTO GenericVulnerability (name, id) VALUES ('Public Data Assigned to Private Array-Typed Field', '496');
INSERT INTO GenericVulnerability (name, id) VALUES ('Exposure of System Data to an Unauthorized Control Sphere', '497');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak through Class Cloning', '498');
INSERT INTO GenericVulnerability (name, id) VALUES ('Serializable Class Containing Sensitive Data', '499');
INSERT INTO GenericVulnerability (name, id) VALUES ('Public Static Field Not Marked Final', '500');
INSERT INTO GenericVulnerability (name, id) VALUES ('Trust Boundary Violation', '501');
INSERT INTO GenericVulnerability (name, id) VALUES ('Deserialization of Untrusted Data', '502');
INSERT INTO GenericVulnerability (name, id) VALUES ('Byte/Object Code', '503');
INSERT INTO GenericVulnerability (name, id) VALUES ('Motivation/Intent', '504');
INSERT INTO GenericVulnerability (name, id) VALUES ('Intentionally Introduced Weakness', '505');
INSERT INTO GenericVulnerability (name, id) VALUES ('Embedded Malicious Code', '506');
INSERT INTO GenericVulnerability (name, id) VALUES ('Trojan Horse', '507');
INSERT INTO GenericVulnerability (name, id) VALUES ('Non-Replicating Malicious Code', '508');
INSERT INTO GenericVulnerability (name, id) VALUES ('Replicating Malicious Code (Virus or Worm)', '509');
INSERT INTO GenericVulnerability (name, id) VALUES ('Trapdoor', '510');
INSERT INTO GenericVulnerability (name, id) VALUES ('Logic/Time Bomb', '511');
INSERT INTO GenericVulnerability (name, id) VALUES ('Spyware', '512');
INSERT INTO GenericVulnerability (name, id) VALUES ('Intentionally Introduced Nonmalicious Weakness', '513');
INSERT INTO GenericVulnerability (name, id) VALUES ('Covert Channel', '514');
INSERT INTO GenericVulnerability (name, id) VALUES ('Covert Storage Channel', '515');
INSERT INTO GenericVulnerability (name, id) VALUES ('DEPRECATED (Duplicate): Covert Timing Channel', '516');
INSERT INTO GenericVulnerability (name, id) VALUES ('Other Intentional, Nonmalicious Weakness', '517');
INSERT INTO GenericVulnerability (name, id) VALUES ('Inadvertently Introduced Weakness', '518');
INSERT INTO GenericVulnerability (name, id) VALUES ('.NET Environment Issues', '519');
INSERT INTO GenericVulnerability (name, id) VALUES ('.NET Misconfiguration: Use of Impersonation', '520');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weak Password Requirements', '521');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficiently Protected Credentials', '522');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unprotected Transport of Credentials', '523');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Caching', '524');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Browser Caching', '525');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Environmental Variables', '526');
INSERT INTO GenericVulnerability (name, id) VALUES ('Exposure of CVS Repository to an Unauthorized Control Sphere', '527');
INSERT INTO GenericVulnerability (name, id) VALUES ('Exposure of Core Dump File to an Unauthorized Control Sphere', '528');
INSERT INTO GenericVulnerability (name, id) VALUES ('Exposure of Access Control List Files to an Unauthorized Control Sphere', '529');
INSERT INTO GenericVulnerability (name, id) VALUES ('Exposure of Backup File to an Unauthorized Control Sphere', '530');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Test Code', '531');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Log Files', '532');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Server Log Files', '533');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Debug Log Files', '534');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Shell Error Message', '535');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Servlet Runtime Error Message', '536');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Java Runtime Error Message', '537');
INSERT INTO GenericVulnerability (name, id) VALUES ('File and Directory Information Exposure', '538');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Persistent Cookies', '539');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Source Code', '540');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Include Source Code', '541');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Cleanup Log Files', '542');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Singleton Pattern in a Non-thread-safe Manner', '543');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Use a Standardized Error Handling Mechanism', '544');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Dynamic Class Loading', '545');
INSERT INTO GenericVulnerability (name, id) VALUES ('Suspicious Comment', '546');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Hard-coded, Security-relevant Constants', '547');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Directory Listing', '548');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Password Field Masking', '549');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Server Error Message', '550');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Behavior Order: Authorization Before Parsing and Canonicalization', '551');
INSERT INTO GenericVulnerability (name, id) VALUES ('Files or Directories Accessible to External Parties', '552');
INSERT INTO GenericVulnerability (name, id) VALUES ('Command Shell in Externally Accessible Directory', '553');
INSERT INTO GenericVulnerability (name, id) VALUES ('ASP.NET Misconfiguration: Not Using Input Validation Framework', '554');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Misconfiguration: Plaintext Password in Configuration File', '555');
INSERT INTO GenericVulnerability (name, id) VALUES ('ASP.NET Misconfiguration: Use of Identity Impersonation', '556');
INSERT INTO GenericVulnerability (name, id) VALUES ('Concurrency Issues', '557');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of getlogin() in Multithreaded Application', '558');
INSERT INTO GenericVulnerability (name, id) VALUES ('Often Misused: Arguments and Parameters', '559');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of umask() with chmod-style Argument', '560');
INSERT INTO GenericVulnerability (name, id) VALUES ('Dead Code', '561');
INSERT INTO GenericVulnerability (name, id) VALUES ('Return of Stack Variable Address', '562');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unused Variable', '563');
INSERT INTO GenericVulnerability (name, id) VALUES ('SQL Injection: Hibernate', '564');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on Cookies without Validation and Integrity Checking', '565');
INSERT INTO GenericVulnerability (name, id) VALUES ('Access Control Bypass Through User-Controlled SQL Primary Key', '566');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unsynchronized Access to Shared Data', '567');
INSERT INTO GenericVulnerability (name, id) VALUES ('finalize() Method Without super.finalize()', '568');
INSERT INTO GenericVulnerability (name, id) VALUES ('Expression Issues', '569');
INSERT INTO GenericVulnerability (name, id) VALUES ('Expression is Always False', '570');
INSERT INTO GenericVulnerability (name, id) VALUES ('Expression is Always True', '571');
INSERT INTO GenericVulnerability (name, id) VALUES ('Call to Thread run() instead of start()', '572');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Follow Specification', '573');
INSERT INTO GenericVulnerability (name, id) VALUES ('EJB Bad Practices: Use of Synchronization Primitives', '574');
INSERT INTO GenericVulnerability (name, id) VALUES ('EJB Bad Practices: Use of AWT Swing', '575');
INSERT INTO GenericVulnerability (name, id) VALUES ('EJB Bad Practices: Use of Java I/O', '576');
INSERT INTO GenericVulnerability (name, id) VALUES ('EJB Bad Practices: Use of Sockets', '577');
INSERT INTO GenericVulnerability (name, id) VALUES ('EJB Bad Practices: Use of Class Loader', '578');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Bad Practices: Non-serializable Object Stored in Session', '579');
INSERT INTO GenericVulnerability (name, id) VALUES ('clone() Method Without super.clone()', '580');
INSERT INTO GenericVulnerability (name, id) VALUES ('Object Model Violation: Just One of Equals and Hashcode Defined', '581');
INSERT INTO GenericVulnerability (name, id) VALUES ('Array Declared Public, Final, and Static', '582');
INSERT INTO GenericVulnerability (name, id) VALUES ('finalize() Method Declared Public', '583');
INSERT INTO GenericVulnerability (name, id) VALUES ('Return Inside Finally Block', '584');
INSERT INTO GenericVulnerability (name, id) VALUES ('Empty Synchronized Block', '585');
INSERT INTO GenericVulnerability (name, id) VALUES ('Explicit Call to Finalize()', '586');
INSERT INTO GenericVulnerability (name, id) VALUES ('Assignment of a Fixed Address to a Pointer', '587');
INSERT INTO GenericVulnerability (name, id) VALUES ('Attempt to Access Child of a Non-structure Pointer', '588');
INSERT INTO GenericVulnerability (name, id) VALUES ('Call to Non-ubiquitous API', '589');
INSERT INTO GenericVulnerability (name, id) VALUES ('Free of Memory not on the Heap', '590');
INSERT INTO GenericVulnerability (name, id) VALUES ('Sensitive Data Storage in Improperly Locked Memory', '591');
INSERT INTO GenericVulnerability (name, id) VALUES ('Authentication Bypass Issues', '592');
INSERT INTO GenericVulnerability (name, id) VALUES ('Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created', '593');
INSERT INTO GenericVulnerability (name, id) VALUES ('J2EE Framework: Saving Unserializable Objects to Disk', '594');
INSERT INTO GenericVulnerability (name, id) VALUES ('Comparison of Object References Instead of Object Contents', '595');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Semantic Object Comparison', '596');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Wrong Operator in String Comparison', '597');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Query Strings in GET Request', '598');
INSERT INTO GenericVulnerability (name, id) VALUES ('Trust of OpenSSL Certificate Without Validation', '599');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Catch All Exceptions in Servlet ', '600');
INSERT INTO GenericVulnerability (name, id) VALUES ('URL Redirection to Untrusted Site (''Open Redirect'')', '601');
INSERT INTO GenericVulnerability (name, id) VALUES ('Client-Side Enforcement of Server-Side Security', '602');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Client-Side Authentication', '603');
INSERT INTO GenericVulnerability (name, id) VALUES ('Deprecated Entries', '604');
INSERT INTO GenericVulnerability (name, id) VALUES ('Multiple Binds to the Same Port', '605');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unchecked Input for Loop Condition', '606');
INSERT INTO GenericVulnerability (name, id) VALUES ('Public Static Final Field References Mutable Object', '607');
INSERT INTO GenericVulnerability (name, id) VALUES ('Struts: Non-private Field in ActionForm Class', '608');
INSERT INTO GenericVulnerability (name, id) VALUES ('Double-Checked Locking', '609');
INSERT INTO GenericVulnerability (name, id) VALUES ('Externally Controlled Reference to a Resource in Another Sphere', '610');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through XML External Entity File Disclosure', '611');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Indexing of Private Data', '612');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Session Expiration', '613');
INSERT INTO GenericVulnerability (name, id) VALUES ('Sensitive Cookie in HTTPS Session Without ''Secure'' Attribute', '614');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak Through Comments', '615');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incomplete Identification of Uploaded File Variables (PHP)', '616');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reachable Assertion', '617');
INSERT INTO GenericVulnerability (name, id) VALUES ('Exposed Unsafe ActiveX Method', '618');
INSERT INTO GenericVulnerability (name, id) VALUES ('Dangling Database Cursor (''Cursor Injection'')', '619');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unverified Password Change', '620');
INSERT INTO GenericVulnerability (name, id) VALUES ('Variable Extraction Error', '621');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unvalidated Function Hook Arguments', '622');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unsafe ActiveX Control Marked Safe For Scripting', '623');
INSERT INTO GenericVulnerability (name, id) VALUES ('Executable Regular Expression Error', '624');
INSERT INTO GenericVulnerability (name, id) VALUES ('Permissive Regular Expression', '625');
INSERT INTO GenericVulnerability (name, id) VALUES ('Null Byte Interaction Error (Poison Null Byte)', '626');
INSERT INTO GenericVulnerability (name, id) VALUES ('Dynamic Variable Evaluation', '627');
INSERT INTO GenericVulnerability (name, id) VALUES ('Function Call with Incorrectly Specified Arguments', '628');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses in OWASP Top Ten (2007)', '629');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses Examined by SAMATE', '630');
INSERT INTO GenericVulnerability (name, id) VALUES ('Resource-specific Weaknesses', '631');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses that Affect Files or Directories', '632');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses that Affect Memory', '633');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses that Affect System Processes', '634');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses Used by NVD', '635');
INSERT INTO GenericVulnerability (name, id) VALUES ('Not Failing Securely (''Failing Open'')', '636');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Use Economy of Mechanism', '637');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Use Complete Mediation', '638');
INSERT INTO GenericVulnerability (name, id) VALUES ('Access Control Bypass Through User-Controlled Key', '639');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weak Password Recovery Mechanism for Forgotten Password', '640');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Filtering of File and Other Resource Names for Executable Content', '641');
INSERT INTO GenericVulnerability (name, id) VALUES ('External Control of Critical State Data', '642');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Data within XPath Expressions (''XPath injection'')', '643');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Sanitization of HTTP Headers for Scripting Syntax', '644');
INSERT INTO GenericVulnerability (name, id) VALUES ('Overly Restrictive Account Lockout Mechanism', '645');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on File Name or Extension of Externally-Supplied File', '646');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Non-Canonical URL Paths for Authorization Decisions', '647');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Use of Privileged APIs', '648');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking', '649');
INSERT INTO GenericVulnerability (name, id) VALUES ('Trusting HTTP Permission Methods on the Server Side', '650');
INSERT INTO GenericVulnerability (name, id) VALUES ('Information Leak through WSDL File', '651');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Sanitize Data within XQuery Expressions (''XQuery Injection'')', '652');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Compartmentalization', '653');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on a Single Factor in a Security Decision', '654');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Psychological Acceptability', '655');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on Security through Obscurity', '656');
INSERT INTO GenericVulnerability (name, id) VALUES ('Violation of Secure Design Principles', '657');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses in Software Written in C', '658');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses in Software Written in C++', '659');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses in Software Written in Java', '660');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses in Software Written in PHP', '661');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Synchronization', '662');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of a Non-reentrant Function in an Unsynchronized Context', '663');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Control of a Resource Through its Lifetime', '664');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Initialization', '665');
INSERT INTO GenericVulnerability (name, id) VALUES ('Operation on Resource in Wrong Phase of Lifetime', '666');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Locking', '667');
INSERT INTO GenericVulnerability (name, id) VALUES ('Exposure of Resource to Wrong Sphere', '668');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Resource Transfer Between Spheres', '669');
INSERT INTO GenericVulnerability (name, id) VALUES ('Always-Incorrect Control Flow Implementation', '670');
INSERT INTO GenericVulnerability (name, id) VALUES ('Lack of Administrator Control over Security', '671');
INSERT INTO GenericVulnerability (name, id) VALUES ('Operation on a Resource after Expiration or Release', '672');
INSERT INTO GenericVulnerability (name, id) VALUES ('External Influence of Sphere Definition', '673');
INSERT INTO GenericVulnerability (name, id) VALUES ('Uncontrolled Recursion', '674');
INSERT INTO GenericVulnerability (name, id) VALUES ('Duplicate Operations on Resource', '675');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Potentially Dangerous Function', '676');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weakness Base Elements', '677');
INSERT INTO GenericVulnerability (name, id) VALUES ('Composites', '678');
INSERT INTO GenericVulnerability (name, id) VALUES ('Chain Elements', '679');
INSERT INTO GenericVulnerability (name, id) VALUES ('Integer Overflow to Buffer Overflow', '680');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Conversion between Numeric Types', '681');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Calculation', '682');
INSERT INTO GenericVulnerability (name, id) VALUES ('Function Call With Incorrect Order of Arguments', '683');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Provide Specified Functionality', '684');
INSERT INTO GenericVulnerability (name, id) VALUES ('Function Call With Incorrect Number of Arguments', '685');
INSERT INTO GenericVulnerability (name, id) VALUES ('Function Call With Incorrect Argument Type', '686');
INSERT INTO GenericVulnerability (name, id) VALUES ('Function Call With Incorrectly Specified Argument Value', '687');
INSERT INTO GenericVulnerability (name, id) VALUES ('Function Call With Incorrect Variable or Reference as Argument', '688');
INSERT INTO GenericVulnerability (name, id) VALUES ('Permission Race Condition During Resource Copy', '689');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unchecked Return Value to NULL Pointer Dereference', '690');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Control Flow Management', '691');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incomplete Blacklist to Cross-Site Scripting', '692');
INSERT INTO GenericVulnerability (name, id) VALUES ('Protection Mechanism Failure', '693');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Multiple Resources with Duplicate Identifier', '694');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Low-Level Functionality', '695');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Behavior Order', '696');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Comparison', '697');
INSERT INTO GenericVulnerability (name, id) VALUES ('Redirect Without Exit', '698');
INSERT INTO GenericVulnerability (name, id) VALUES ('Development Concepts', '699');
INSERT INTO GenericVulnerability (name, id) VALUES ('Seven Pernicious Kingdoms', '700');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses Introduced During Design', '701');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses Introduced During Implementation', '702');
INSERT INTO GenericVulnerability (name, id) VALUES ('Failure to Handle Exceptional Conditions', '703');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Type Conversion or Cast', '704');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Control Flow Scoping', '705');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Incorrectly-Resolved Name or Reference', '706');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Enforcement of Message or Data Structure', '707');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Ownership Assignment', '708');
INSERT INTO GenericVulnerability (name, id) VALUES ('Named Chains', '709');
INSERT INTO GenericVulnerability (name, id) VALUES ('Coding Standards Violation', '710');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses in OWASP Top Ten (2004)', '711');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A1 - Cross Site Scripting (XSS)', '712');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A2 - Injection Flaws', '713');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A3 - Malicious File Execution', '714');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A4 - Insecure Direct Object Reference', '715');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A5 - Cross Site Request Forgery (CSRF)', '716');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A6 - Information Leakage and Improper Error Handling', '717');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A7 - Broken Authentication and Session Management', '718');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A8 - Insecure Cryptographic Storage', '719');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A9 - Insecure Communications', '720');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2007 Category A10 - Failure to Restrict URL Access', '721');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A1 - Unvalidated Input', '722');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A2 - Broken Access Control', '723');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A3 - Broken Authentication and Session Management', '724');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A4 - Cross-Site Scripting (XSS) Flaws', '725');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A5 - Buffer Overflows', '726');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A6 - Injection Flaws', '727');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A7 - Improper Error Handling', '728');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A8 - Insecure Storage', '729');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A9 - Denial of Service', '730');
INSERT INTO GenericVulnerability (name, id) VALUES ('OWASP Top Ten 2004 Category A10 - Insecure Configuration Management', '731');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Permission Assignment for Critical Resource', '732');
INSERT INTO GenericVulnerability (name, id) VALUES ('Compiler Optimization Removal or Modification of Security-critical Code', '733');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses Addressed by the CERT C Secure Coding Standard', '734');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 01 - Preprocessor (PRE)', '735');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 02 - Declarations and Initialization (DCL)', '736');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 03 - Expressions (EXP)', '737');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 04 - Integers (INT)', '738');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 05 - Floating Point (FLP)', '739');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 06 - Arrays (ARR)', '740');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 07 - Characters and Strings (STR)', '741');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 08 - Memory Management (MEM)', '742');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 09 - Input Output (FIO)', '743');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 10 - Environment (ENV)', '744');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 11 - Signals (SIG)', '745');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 12 - Error Handling (ERR)', '746');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 49 - Miscellaneous (MSC)', '747');
INSERT INTO GenericVulnerability (name, id) VALUES ('CERT C Secure Coding Section 50 - POSIX (POS)', '748');
INSERT INTO GenericVulnerability (name, id) VALUES ('Exposed Dangerous Method or Function', '749');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses in the 2009 CWE/SANS Top 25 Most Dangerous Programming Errors', '750');
INSERT INTO GenericVulnerability (name, id) VALUES ('2009 Top 25 - Insecure Interaction Between Components', '751');
INSERT INTO GenericVulnerability (name, id) VALUES ('2009 Top 25 - Risky Resource Management', '752');
INSERT INTO GenericVulnerability (name, id) VALUES ('2009 Top 25 - Porous Defenses', '753');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Check for Unusual or Exceptional Conditions', '754');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Handling of Exceptional Conditions', '755');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Custom Error Page', '756');
INSERT INTO GenericVulnerability (name, id) VALUES ('Selection of Less-Secure Algorithm During Negotiation (''Algorithm Downgrade'')', '757');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on Undefined, Unspecified, or Implementation-Defined Behavior', '758');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of a One-Way Hash without a Salt', '759');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of a One-Way Hash with a Predictable Salt', '760');
INSERT INTO GenericVulnerability (name, id) VALUES ('Free of Pointer not at Start of Buffer', '761');
INSERT INTO GenericVulnerability (name, id) VALUES ('Mismatched Memory Management Routines', '762');
INSERT INTO GenericVulnerability (name, id) VALUES ('Release of Invalid Pointer or Reference', '763');
INSERT INTO GenericVulnerability (name, id) VALUES ('Multiple Locks of a Critical Resource', '764');
INSERT INTO GenericVulnerability (name, id) VALUES ('Multiple Unlocks of a Critical Resource', '765');
INSERT INTO GenericVulnerability (name, id) VALUES ('Critical Variable Declared Public', '766');
INSERT INTO GenericVulnerability (name, id) VALUES ('Access to Critical Private Variable via Public Method', '767');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incorrect Short Circuit Evaluation', '768');
INSERT INTO GenericVulnerability (name, id) VALUES ('File Descriptor Exhaustion', '769');
INSERT INTO GenericVulnerability (name, id) VALUES ('Allocation of Resources Without Limits or Throttling', '770');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Reference to Active Allocated Resource', '771');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Release of Resource after Effective Lifetime', '772');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Reference to Active File Descriptor or Handle', '773');
INSERT INTO GenericVulnerability (name, id) VALUES ('Allocation of File Descriptors or Handles Without Limits or Throttling', '774');
INSERT INTO GenericVulnerability (name, id) VALUES ('Missing Release of File Descriptor or Handle after Effective Lifetime', '775');
INSERT INTO GenericVulnerability (name, id) VALUES ('Unrestricted Recursive Entity References in DTDs (''XML Bomb'')', '776');
INSERT INTO GenericVulnerability (name, id) VALUES ('Regular Expression without Anchors', '777');
INSERT INTO GenericVulnerability (name, id) VALUES ('Insufficient Logging', '778');
INSERT INTO GenericVulnerability (name, id) VALUES ('Logging of Excessive Data', '779');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of RSA Algorithm without OAEP', '780');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code', '781');
INSERT INTO GenericVulnerability (name, id) VALUES ('Exposed IOCTL with Insufficient Access Control', '782');
INSERT INTO GenericVulnerability (name, id) VALUES ('Operator Precedence Logic Error', '783');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on Cookies without Validation and Integrity Checking in a Security Decision', '784');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Path Manipulation Function without Maximum-sized Buffer', '785');
INSERT INTO GenericVulnerability (name, id) VALUES ('Access of Memory Location Before Start of Buffer', '786');
INSERT INTO GenericVulnerability (name, id) VALUES ('Out-of-bounds Write', '787');
INSERT INTO GenericVulnerability (name, id) VALUES ('Access of Memory Location After End of Buffer', '788');
INSERT INTO GenericVulnerability (name, id) VALUES ('Uncontrolled Memory Allocation', '789');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Filtering of Special Elements', '790');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incomplete Filtering of Special Elements', '791');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incomplete Filtering of One or More Instances of Special Elements', '792');
INSERT INTO GenericVulnerability (name, id) VALUES ('Only Filtering One Instance of a Special Element', '793');
INSERT INTO GenericVulnerability (name, id) VALUES ('Incomplete Filtering of Multiple Instances of Special Elements', '794');
INSERT INTO GenericVulnerability (name, id) VALUES ('Only Filtering Special Elements at a Specified Location', '795');
INSERT INTO GenericVulnerability (name, id) VALUES ('Only Filtering Special Elements Relative to a Marker', '796');
INSERT INTO GenericVulnerability (name, id) VALUES ('Only Filtering Special Elements at an Absolute Position', '797');
INSERT INTO GenericVulnerability (name, id) VALUES ('Use of Hard-coded Credentials', '798');
INSERT INTO GenericVulnerability (name, id) VALUES ('Improper Control of Interaction Frequency', '799');
INSERT INTO GenericVulnerability (name, id) VALUES ('Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors', '800');
INSERT INTO GenericVulnerability (name, id) VALUES ('2010 Top 25 - Insecure Interaction Between Components', '801');
INSERT INTO GenericVulnerability (name, id) VALUES ('2010 Top 25 - Risky Resource Management', '802');
INSERT INTO GenericVulnerability (name, id) VALUES ('2010 Top 25 - Porous Defenses', '803');
INSERT INTO GenericVulnerability (name, id) VALUES ('Guessable CAPTCHA', '804');
INSERT INTO GenericVulnerability (name, id) VALUES ('Buffer Access with Incorrect Length Value', '805');
INSERT INTO GenericVulnerability (name, id) VALUES ('Buffer Access Using Size of Source Buffer', '806');
INSERT INTO GenericVulnerability (name, id) VALUES ('Reliance on Untrusted Inputs in a Security Decision', '807');
INSERT INTO GenericVulnerability (name, id) VALUES ('2010 Top 25 - Weaknesses On the Cusp', '808');
INSERT INTO GenericVulnerability (name, id) VALUES ('Research Concepts', '1000');
INSERT INTO GenericVulnerability (name, id) VALUES ('Comprehensive CWE Dictionary', '2000');

SET @generic_vulnerability_location_id := (SELECT id FROM GenericVulnerability WHERE name = 'Location');
SET @generic_vulnerability_environment_id := (SELECT id FROM GenericVulnerability WHERE name = 'Environment');
SET @generic_vulnerability_technology_specific_environment_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Technology-specific Environment Issues');
SET @generic_vulnerability_j2ee_environment_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Environment Issues');
SET @generic_vulnerability_j2ee_misconfiguration_data_transmission_without_encryption_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Misconfiguration: Data Transmission Without Encryption');
SET @generic_vulnerability_j2ee_misconfiguration_insufficient_session_id_length_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Misconfiguration: Insufficient Session-ID Length');
SET @generic_vulnerability_j2ee_misconfiguration_missing_custom_error_page_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Misconfiguration: Missing Custom Error Page');
SET @generic_vulnerability_j2ee_misconfiguration_entity_bean_declared_remote_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Misconfiguration: Entity Bean Declared Remote');
SET @generic_vulnerability_j2ee_misconfiguration_weak_access_permissions_for_ejb_methods_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Misconfiguration: Weak Access Permissions for EJB Methods');
SET @generic_vulnerability_asp_net_environment_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'ASP.NET Environment Issues');
SET @generic_vulnerability_asp_net_misconfiguration_creating_debug_binary_id := (SELECT id FROM GenericVulnerability WHERE name = 'ASP.NET Misconfiguration: Creating Debug Binary');
SET @generic_vulnerability_asp_net_misconfiguration_missing_custom_error_page_id := (SELECT id FROM GenericVulnerability WHERE name = 'ASP.NET Misconfiguration: Missing Custom Error Page');
SET @generic_vulnerability_asp_net_misconfiguration_password_in_configuration_file_id := (SELECT id FROM GenericVulnerability WHERE name = 'ASP.NET Misconfiguration: Password in Configuration File');
SET @generic_vulnerability_compiler_removal_of_code_to_clear_buffers_id := (SELECT id FROM GenericVulnerability WHERE name = 'Compiler Removal of Code to Clear Buffers');
SET @generic_vulnerability_external_control_of_system_or_configuration_setting_id := (SELECT id FROM GenericVulnerability WHERE name = 'External Control of System or Configuration Setting');
SET @generic_vulnerability_configuration_id := (SELECT id FROM GenericVulnerability WHERE name = 'Configuration');
SET @generic_vulnerability_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Code');
SET @generic_vulnerability_source_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Source Code');
SET @generic_vulnerability_data_handling_id := (SELECT id FROM GenericVulnerability WHERE name = 'Data Handling');
SET @generic_vulnerability_improper_input_validation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Input Validation');
SET @generic_vulnerability_pathname_traversal_and_equivalence_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Pathname Traversal and Equivalence Errors');
SET @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Limitation of a Pathname to a Restricted Directory (''Path Traversal'')');
SET @generic_vulnerability_relative_path_traversal_id := (SELECT id FROM GenericVulnerability WHERE name = 'Relative Path Traversal');
SET @generic_vulnerability_path_traversal_filedir_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''../filedir''');
SET @generic_vulnerability_path_traversal_filedir_25_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''/../filedir''');
SET @generic_vulnerability_path_traversal_dir_filename_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''/dir/../filename''');
SET @generic_vulnerability_path_traversal_dir_filename_27_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''dir/../../filename''');
SET @generic_vulnerability_path_traversal_filedir_28_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''..\filedir''');
SET @generic_vulnerability_path_traversal_filename_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''\..\filename''');
SET @generic_vulnerability_path_traversal_dir_filename_30_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''\dir\..\filename''');
SET @generic_vulnerability_path_traversal_dir_filename_31_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''dir\..\..\filename''');
SET @generic_vulnerability_path_traversal_triple_dot_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''...'' (Triple Dot)');
SET @generic_vulnerability_path_traversal_multiple_dot_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''....'' (Multiple Dot)');
SET @generic_vulnerability_path_traversal_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''....//''');
SET @generic_vulnerability_path_traversal_35_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''.../...//''');
SET @generic_vulnerability_absolute_path_traversal_id := (SELECT id FROM GenericVulnerability WHERE name = 'Absolute Path Traversal');
SET @generic_vulnerability_path_traversal_absolute_pathname_here_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''/absolute/pathname/here''');
SET @generic_vulnerability_path_traversal_absolute_pathname_here_38_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''\absolute\pathname\here''');
SET @generic_vulnerability_path_traversal_c_dirname_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''C:dirname''');
-- SET @generic_vulnerability_path_traversal_unc_share_name_windows_unc_share_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''\\UNC\share\name\'' (Windows UNC Share)');
SET @generic_vulnerability_path_traversal_unc_share_name_windows_unc_share_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Traversal: ''UNC share name'' (Windows UNC Share)');
SET @generic_vulnerability_improper_resolution_of_path_equivalence_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Resolution of Path Equivalence');
SET @generic_vulnerability_path_equivalence_filename_trailing_dot_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''filename.'' (Trailing Dot)');
SET @generic_vulnerability_path_equivalence_filename_multiple_trailing_dot_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''filename....'' (Multiple Trailing Dot)');
SET @generic_vulnerability_path_equivalence_file_name_internal_dot_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''file.name'' (Internal Dot)');
SET @generic_vulnerability_path_equivalence_file_name_multiple_internal_dot_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''file...name'' (Multiple Internal Dot)');
SET @generic_vulnerability_path_equivalence_filename_trailing_space_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''filename '' (Trailing Space)');
SET @generic_vulnerability_path_equivalence_filename_leading_space_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: '' filename (Leading Space)');
SET @generic_vulnerability_path_equivalence_file_name_internal_whitespace_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''file name'' (Internal Whitespace)');
SET @generic_vulnerability_path_equivalence_filename_trailing_slash_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''filename/'' (Trailing Slash)');
SET @generic_vulnerability_path_equivalence_multiple_leading_slash_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''//multiple/leading/slash''');
SET @generic_vulnerability_path_equivalence_multiple_internal_slash_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''/multiple//internal/slash''');
SET @generic_vulnerability_path_equivalence_multiple_trailing_slash_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''/multiple/trailing/slash//''');
SET @generic_vulnerability_path_equivalence_multiple_internal_backslash_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''\multiple\\internal\backslash''');
-- SET @generic_vulnerability_path_equivalence_filedir_trailing_backslash_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''filedir\'' (Trailing Backslash)');
SET @generic_vulnerability_path_equivalence_filedir_trailing_backslash_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''filedir'' (Trailing Backslash)');
SET @generic_vulnerability_path_equivalence_single_dot_directory_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''/./'' (Single Dot Directory)');
SET @generic_vulnerability_path_equivalence_filedir_wildcard_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''filedir*'' (Wildcard)');
SET @generic_vulnerability_path_equivalence_fakedir_realdir_filename_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: ''fakedir/../realdir/filename''');
SET @generic_vulnerability_path_equivalence_windows_8_3_filename_id := (SELECT id FROM GenericVulnerability WHERE name = 'Path Equivalence: Windows 8.3 Filename');
SET @generic_vulnerability_improper_link_resolution_before_file_access_link_following_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Link Resolution Before File Access (''Link Following'')');
SET @generic_vulnerability_unix_path_link_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'UNIX Path Link Problems');
SET @generic_vulnerability_unix_symbolic_link_symlink_following_id := (SELECT id FROM GenericVulnerability WHERE name = 'UNIX Symbolic Link (Symlink) Following');
SET @generic_vulnerability_unix_hard_link_id := (SELECT id FROM GenericVulnerability WHERE name = 'UNIX Hard Link');
SET @generic_vulnerability_windows_path_link_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Windows Path Link Problems');
SET @generic_vulnerability_windows_shortcut_following_lnk_id := (SELECT id FROM GenericVulnerability WHERE name = 'Windows Shortcut Following (.LNK)');
SET @generic_vulnerability_windows_hard_link_id := (SELECT id FROM GenericVulnerability WHERE name = 'Windows Hard Link');
SET @generic_vulnerability_improper_handling_of_file_names_that_identify_virtual_resources_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of File Names that Identify Virtual Resources');
SET @generic_vulnerability_improper_handling_of_windows_device_names_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Windows Device Names');
SET @generic_vulnerability_windows_virtual_file_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Windows Virtual File Problems');
SET @generic_vulnerability_failure_to_handle_windows_data_alternate_data_stream_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Handle Windows ::DATA Alternate Data Stream');
SET @generic_vulnerability_mac_virtual_file_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Mac Virtual File Problems');
SET @generic_vulnerability_apple_ds_store_id := (SELECT id FROM GenericVulnerability WHERE name = 'Apple ''.DS_Store''');
SET @generic_vulnerability_improper_handling_of_apple_hfs_alternate_data_stream_path_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Apple HFS+ Alternate Data Stream Path');
SET @generic_vulnerability_external_control_of_file_name_or_path_id := (SELECT id FROM GenericVulnerability WHERE name = 'External Control of File Name or Path');
SET @generic_vulnerability_failure_to_sanitize_data_into_a_different_plane_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Data into a Different Plane (''Injection'')');
SET @generic_vulnerability_failure_to_sanitize_special_elements_into_a_different_plane_special_element_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)');
SET @generic_vulnerability_failure_to_resolve_equivalent_special_elements_into_a_different_plane_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Resolve Equivalent Special Elements into a Different Plane');
SET @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Special Elements used in a Command (''Command Injection'')');
SET @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Special Elements used in an OS Command (''OS Command Injection'')');
SET @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Preserve Web Page Structure (''Cross-site Scripting'')');
SET @generic_vulnerability_improper_sanitization_of_script_related_html_tags_in_a_web_page_basic_xss_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Script-Related HTML Tags in a Web Page (Basic XSS)');
SET @generic_vulnerability_improper_sanitization_of_script_in_an_error_message_web_page_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Script in an Error Message Web Page');
SET @generic_vulnerability_improper_sanitization_of_script_in_attributes_of_img_tags_in_a_web_page_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Script in Attributes of IMG Tags in a Web Page');
SET @generic_vulnerability_failure_to_sanitize_script_in_attributes_in_a_web_page_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Script in Attributes in a Web Page');
SET @generic_vulnerability_failure_to_resolve_encoded_uri_schemes_in_a_web_page_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Resolve Encoded URI Schemes in a Web Page');
SET @generic_vulnerability_doubled_character_xss_manipulations_id := (SELECT id FROM GenericVulnerability WHERE name = 'Doubled Character XSS Manipulations');
SET @generic_vulnerability_failure_to_sanitize_invalid_characters_in_identifiers_in_web_pages_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Invalid Characters in Identifiers in Web Pages');
SET @generic_vulnerability_failure_to_sanitize_alternate_xss_syntax_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Alternate XSS Syntax');
SET @generic_vulnerability_argument_injection_or_modification_id := (SELECT id FROM GenericVulnerability WHERE name = 'Argument Injection or Modification');
SET @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Special Elements used in an SQL Command (''SQL Injection'')');
SET @generic_vulnerability_failure_to_sanitize_data_into_ldap_queries_ldap_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Data into LDAP Queries (''LDAP Injection'')');
SET @generic_vulnerability_xml_injection_aka_blind_xpath_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'XML Injection (aka Blind XPath Injection)');
SET @generic_vulnerability_deprecated_improper_sanitization_of_custom_special_characters_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED: Improper Sanitization of Custom Special Characters');
SET @generic_vulnerability_failure_to_sanitize_crlf_sequences_crlf_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize CRLF Sequences (''CRLF Injection'')');
SET @generic_vulnerability_failure_to_control_generation_of_code_code_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Control Generation of Code (''Code Injection'')');
SET @generic_vulnerability_improper_sanitization_of_directives_in_dynamically_evaluated_code_eval_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Directives in Dynamically Evaluated Code (''Eval Injection'')');
SET @generic_vulnerability_improper_sanitization_of_directives_in_statically_saved_code_static_code_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Directives in Statically Saved Code (''Static Code Injection'')');
SET @generic_vulnerability_failure_to_sanitize_server_side_includes_ssi_within_a_web_page_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Server-Side Includes (SSI) Within a Web Page');
SET @generic_vulnerability_improper_control_of_filename_for_include_require_statement_in_php_program_php_file_inclusion_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Control of Filename for Include/Require Statement in PHP Program (''PHP File Inclusion'')');
SET @generic_vulnerability_improper_control_of_resource_identifiers_resource_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Control of Resource Identifiers (''Resource Injection'')');
SET @generic_vulnerability_technology_specific_input_validation_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Technology-Specific Input Validation Problems');
SET @generic_vulnerability_struts_validation_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts Validation Problems');
SET @generic_vulnerability_struts_duplicate_validation_forms_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Duplicate Validation Forms');
SET @generic_vulnerability_struts_incomplete_validate_method_definition_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Incomplete validate() Method Definition');
SET @generic_vulnerability_struts_form_bean_does_not_extend_validation_class_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Form Bean Does Not Extend Validation Class');
SET @generic_vulnerability_struts_form_field_without_validator_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Form Field Without Validator');
SET @generic_vulnerability_struts_plug_in_framework_not_in_use_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Plug-in Framework not in Use');
SET @generic_vulnerability_struts_unused_validation_form_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Unused Validation Form');
SET @generic_vulnerability_struts_unvalidated_action_form_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Unvalidated Action Form');
SET @generic_vulnerability_struts_validator_turned_off_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Validator Turned Off');
SET @generic_vulnerability_struts_validator_without_form_field_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Validator Without Form Field');
SET @generic_vulnerability_direct_use_of_unsafe_jni_id := (SELECT id FROM GenericVulnerability WHERE name = 'Direct Use of Unsafe JNI');
SET @generic_vulnerability_missing_xml_validation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing XML Validation');
SET @generic_vulnerability_failure_to_sanitize_crlf_sequences_in_http_headers_http_response_splitting_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize CRLF Sequences in HTTP Headers (''HTTP Response Splitting'')');
SET @generic_vulnerability_process_control_id := (SELECT id FROM GenericVulnerability WHERE name = 'Process Control');
SET @generic_vulnerability_misinterpretation_of_input_id := (SELECT id FROM GenericVulnerability WHERE name = 'Misinterpretation of Input');
SET @generic_vulnerability_improper_encoding_or_escaping_of_output_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Encoding or Escaping of Output');
SET @generic_vulnerability_improper_output_sanitization_for_logs_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Output Sanitization for Logs');
SET @generic_vulnerability_improper_access_of_indexable_resource_range_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Access of Indexable Resource (''Range Error'')');
SET @generic_vulnerability_failure_to_constrain_operations_within_the_bounds_of_a_memory_buffer_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Constrain Operations within the Bounds of a Memory Buffer');
SET @generic_vulnerability_buffer_copy_without_checking_size_of_input_classic_buffer_overflow_id := (SELECT id FROM GenericVulnerability WHERE name = 'Buffer Copy without Checking Size of Input (''Classic Buffer Overflow'')');
SET @generic_vulnerability_stack_based_buffer_overflow_id := (SELECT id FROM GenericVulnerability WHERE name = 'Stack-based Buffer Overflow');
SET @generic_vulnerability_heap_based_buffer_overflow_id := (SELECT id FROM GenericVulnerability WHERE name = 'Heap-based Buffer Overflow');
SET @generic_vulnerability_write_what_where_condition_id := (SELECT id FROM GenericVulnerability WHERE name = 'Write-what-where Condition');
SET @generic_vulnerability_buffer_underwrite_buffer_underflow_id := (SELECT id FROM GenericVulnerability WHERE name = 'Buffer Underwrite (''Buffer Underflow'')');
SET @generic_vulnerability_out_of_bounds_read_id := (SELECT id FROM GenericVulnerability WHERE name = 'Out-of-bounds Read');
SET @generic_vulnerability_buffer_over_read_id := (SELECT id FROM GenericVulnerability WHERE name = 'Buffer Over-read');
SET @generic_vulnerability_buffer_under_read_id := (SELECT id FROM GenericVulnerability WHERE name = 'Buffer Under-read');
SET @generic_vulnerability_wrap_around_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Wrap-around Error');
SET @generic_vulnerability_improper_validation_of_array_index_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Validation of Array Index');
SET @generic_vulnerability_improper_handling_of_length_parameter_inconsistency_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Length Parameter Inconsistency ');
SET @generic_vulnerability_incorrect_calculation_of_buffer_size_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Calculation of Buffer Size');
SET @generic_vulnerability_deprecated_duplicate_miscalculated_null_termination_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED (Duplicate): Miscalculated Null Termination');
SET @generic_vulnerability_string_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'String Errors');
SET @generic_vulnerability_uncontrolled_format_string_id := (SELECT id FROM GenericVulnerability WHERE name = 'Uncontrolled Format String');
SET @generic_vulnerability_incorrect_calculation_of_multi_byte_string_length_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Calculation of Multi-Byte String Length');
SET @generic_vulnerability_type_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Type Errors');
SET @generic_vulnerability_representation_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Representation Errors');
SET @generic_vulnerability_improper_sanitization_of_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Special Elements');
SET @generic_vulnerability_deprecated_general_special_element_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED: General Special Element Problems');
SET @generic_vulnerability_failure_to_sanitize_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Delimiters');
SET @generic_vulnerability_failure_to_sanitize_parameter_argument_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Parameter/Argument Delimiters');
SET @generic_vulnerability_failure_to_sanitize_value_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Value Delimiters');
SET @generic_vulnerability_failure_to_sanitize_record_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Record Delimiters');
SET @generic_vulnerability_failure_to_sanitize_line_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Line Delimiters');
SET @generic_vulnerability_failure_to_sanitize_section_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Section Delimiters');
SET @generic_vulnerability_failure_to_sanitize_expression_command_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Expression/Command Delimiters');
SET @generic_vulnerability_improper_sanitization_of_input_terminators_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Input Terminators');
SET @generic_vulnerability_failure_to_sanitize_input_leaders_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Input Leaders');
SET @generic_vulnerability_failure_to_sanitize_quoting_syntax_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Quoting Syntax');
SET @generic_vulnerability_failure_to_sanitize_escape_meta_or_control_sequences_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Escape, Meta, or Control Sequences');
SET @generic_vulnerability_improper_sanitization_of_comment_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Comment Delimiters');
SET @generic_vulnerability_improper_sanitization_of_macro_symbols_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Macro Symbols');
SET @generic_vulnerability_improper_sanitization_of_substitution_characters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Substitution Characters');
SET @generic_vulnerability_improper_sanitization_of_variable_name_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Variable Name Delimiters');
SET @generic_vulnerability_improper_sanitization_of_wildcards_or_matching_symbols_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Wildcards or Matching Symbols');
SET @generic_vulnerability_improper_sanitization_of_whitespace_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Whitespace');
SET @generic_vulnerability_failure_to_sanitize_paired_delimiters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Paired Delimiters');
SET @generic_vulnerability_failure_to_sanitize_null_byte_or_nul_character_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Null Byte or NUL Character');
SET @generic_vulnerability_failure_to_sanitize_special_element_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Special Element');
SET @generic_vulnerability_improper_sanitization_of_leading_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Leading Special Elements');
SET @generic_vulnerability_improper_sanitization_of_multiple_leading_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Multiple Leading Special Elements');
SET @generic_vulnerability_improper_sanitization_of_trailing_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Trailing Special Elements');
SET @generic_vulnerability_improper_sanitization_of_multiple_trailing_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Multiple Trailing Special Elements');
SET @generic_vulnerability_improper_sanitization_of_internal_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Internal Special Elements');
SET @generic_vulnerability_improper_sanitization_of_multiple_internal_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of Multiple Internal Special Elements');
SET @generic_vulnerability_improper_handling_of_missing_special_element_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Missing Special Element');
SET @generic_vulnerability_improper_handling_of_additional_special_element_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Additional Special Element');
SET @generic_vulnerability_failure_to_resolve_inconsistent_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Resolve Inconsistent Special Elements');
SET @generic_vulnerability_technology_specific_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Technology-Specific Special Elements');
SET @generic_vulnerability_improper_null_termination_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Null Termination');
SET @generic_vulnerability_cleansing_canonicalization_and_comparison_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Cleansing, Canonicalization, and Comparison Errors');
SET @generic_vulnerability_encoding_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Encoding Error');
SET @generic_vulnerability_failure_to_handle_alternate_encoding_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Handle Alternate Encoding');
SET @generic_vulnerability_double_decoding_of_the_same_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Double Decoding of the Same Data');
SET @generic_vulnerability_failure_to_handle_mixed_encoding_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Handle Mixed Encoding');
SET @generic_vulnerability_failure_to_handle_unicode_encoding_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Handle Unicode Encoding');
SET @generic_vulnerability_failure_to_handle_url_encoding_hex_encoding_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Handle URL Encoding (Hex Encoding)');
SET @generic_vulnerability_failure_to_resolve_case_sensitivity_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Resolve Case Sensitivity');
SET @generic_vulnerability_incorrect_behavior_order_early_validation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Behavior Order: Early Validation');
SET @generic_vulnerability_incorrect_behavior_order_validate_before_canonicalize_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Behavior Order: Validate Before Canonicalize');
SET @generic_vulnerability_incorrect_behavior_order_validate_before_filter_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Behavior Order: Validate Before Filter');
SET @generic_vulnerability_collapse_of_data_into_unsafe_value_id := (SELECT id FROM GenericVulnerability WHERE name = 'Collapse of Data Into Unsafe Value');
SET @generic_vulnerability_permissive_whitelist_id := (SELECT id FROM GenericVulnerability WHERE name = 'Permissive Whitelist');
SET @generic_vulnerability_incomplete_blacklist_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incomplete Blacklist');
SET @generic_vulnerability_incorrect_regular_expression_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Regular Expression');
SET @generic_vulnerability_overly_restrictive_regular_expression_id := (SELECT id FROM GenericVulnerability WHERE name = 'Overly Restrictive Regular Expression');
SET @generic_vulnerability_partial_comparison_id := (SELECT id FROM GenericVulnerability WHERE name = 'Partial Comparison');
SET @generic_vulnerability_reliance_on_data_memory_layout_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on Data/Memory Layout');
SET @generic_vulnerability_numeric_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Numeric Errors');
SET @generic_vulnerability_integer_overflow_or_wraparound_id := (SELECT id FROM GenericVulnerability WHERE name = 'Integer Overflow or Wraparound');
SET @generic_vulnerability_integer_underflow_wrap_or_wraparound_id := (SELECT id FROM GenericVulnerability WHERE name = 'Integer Underflow (Wrap or Wraparound)');
SET @generic_vulnerability_integer_coercion_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Integer Coercion Error');
SET @generic_vulnerability_off_by_one_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Off-by-one Error');
SET @generic_vulnerability_unexpected_sign_extension_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unexpected Sign Extension');
SET @generic_vulnerability_signed_to_unsigned_conversion_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Signed to Unsigned Conversion Error');
SET @generic_vulnerability_unsigned_to_signed_conversion_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unsigned to Signed Conversion Error');
SET @generic_vulnerability_numeric_truncation_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Numeric Truncation Error');
SET @generic_vulnerability_use_of_incorrect_byte_ordering_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Incorrect Byte Ordering');
SET @generic_vulnerability_information_management_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Management Errors');
SET @generic_vulnerability_information_exposure_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Exposure');
SET @generic_vulnerability_information_leak_through_sent_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Sent Data');
SET @generic_vulnerability_privacy_leak_through_data_queries_id := (SELECT id FROM GenericVulnerability WHERE name = 'Privacy Leak through Data Queries');
SET @generic_vulnerability_information_exposure_through_discrepancy_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Exposure Through Discrepancy');
SET @generic_vulnerability_response_discrepancy_information_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'Response Discrepancy Information Leak');
SET @generic_vulnerability_information_exposure_through_behavioral_discrepancy_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Exposure Through Behavioral Discrepancy');
SET @generic_vulnerability_internal_behavioral_inconsistency_information_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'Internal Behavioral Inconsistency Information Leak');
SET @generic_vulnerability_information_exposure_through_an_external_behavioral_inconsistency_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Exposure Through an External Behavioral Inconsistency');
SET @generic_vulnerability_timing_discrepancy_information_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'Timing Discrepancy Information Leak');
SET @generic_vulnerability_information_exposure_through_an_error_message_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Exposure Through an Error Message');
SET @generic_vulnerability_product_generated_error_message_information_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'Product-Generated Error Message Information Leak');
SET @generic_vulnerability_product_external_error_message_information_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'Product-External Error Message Information Leak');
SET @generic_vulnerability_improper_cross_boundary_removal_of_sensitive_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Cross-boundary Removal of Sensitive Data');
SET @generic_vulnerability_intended_information_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'Intended Information Leak');
SET @generic_vulnerability_process_environment_information_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'Process Environment Information Leak');
SET @generic_vulnerability_information_leak_through_debug_information_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Debug Information');
SET @generic_vulnerability_containment_errors_container_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Containment Errors (Container Errors)');
SET @generic_vulnerability_deprecated_failure_to_protect_stored_data_from_modification_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED: Failure to Protect Stored Data from Modification');
SET @generic_vulnerability_deprecated_duplicate_failure_to_provide_confidentiality_for_stored_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED (Duplicate): Failure to provide confidentiality for stored data');
SET @generic_vulnerability_sensitive_data_under_web_root_id := (SELECT id FROM GenericVulnerability WHERE name = 'Sensitive Data Under Web Root');
SET @generic_vulnerability_sensitive_data_under_ftp_root_id := (SELECT id FROM GenericVulnerability WHERE name = 'Sensitive Data Under FTP Root');
SET @generic_vulnerability_information_loss_or_omission_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Loss or Omission');
SET @generic_vulnerability_truncation_of_security_relevant_information_id := (SELECT id FROM GenericVulnerability WHERE name = 'Truncation of Security-relevant Information');
SET @generic_vulnerability_omission_of_security_relevant_information_id := (SELECT id FROM GenericVulnerability WHERE name = 'Omission of Security-relevant Information');
SET @generic_vulnerability_obscured_security_relevant_information_by_alternate_name_id := (SELECT id FROM GenericVulnerability WHERE name = 'Obscured Security-relevant Information by Alternate Name');
SET @generic_vulnerability_deprecated_duplicate_general_information_management_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED (Duplicate): General Information Management Problems');
SET @generic_vulnerability_sensitive_information_uncleared_before_release_id := (SELECT id FROM GenericVulnerability WHERE name = 'Sensitive Information Uncleared Before Release');
SET @generic_vulnerability_failure_to_fulfill_api_contract_api_abuse_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Fulfill API Contract (''API Abuse'')');
SET @generic_vulnerability_improper_handling_of_syntactically_invalid_structure_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Syntactically Invalid Structure');
SET @generic_vulnerability_improper_handling_of_values_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Values');
SET @generic_vulnerability_improper_handling_of_missing_values_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Missing Values');
SET @generic_vulnerability_improper_handling_of_extra_values_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Extra Values');
SET @generic_vulnerability_improper_handling_of_undefined_values_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Undefined Values');
SET @generic_vulnerability_parameter_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Parameter Problems');
SET @generic_vulnerability_failure_to_handle_missing_parameter_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Handle Missing Parameter');
SET @generic_vulnerability_improper_handling_of_extra_parameters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Extra Parameters');
SET @generic_vulnerability_improper_handling_of_undefined_parameters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Undefined Parameters');
SET @generic_vulnerability_improper_handling_of_structural_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Structural Elements');
SET @generic_vulnerability_improper_handling_of_incomplete_structural_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Incomplete Structural Elements');
SET @generic_vulnerability_failure_to_handle_incomplete_element_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Handle Incomplete Element');
SET @generic_vulnerability_improper_handling_of_inconsistent_structural_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Inconsistent Structural Elements');
SET @generic_vulnerability_improper_handling_of_unexpected_data_type_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Unexpected Data Type');
SET @generic_vulnerability_use_of_inherently_dangerous_function_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Inherently Dangerous Function');
SET @generic_vulnerability_failure_to_change_working_directory_in_chroot_jail_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Change Working Directory in chroot Jail');
SET @generic_vulnerability_failure_to_clear_heap_memory_before_release_heap_inspection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Clear Heap Memory Before Release (''Heap Inspection'')');
SET @generic_vulnerability_j2ee_bad_practices_direct_management_of_connections_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Bad Practices: Direct Management of Connections');
SET @generic_vulnerability_j2ee_bad_practices_direct_use_of_sockets_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Bad Practices: Direct Use of Sockets');
SET @generic_vulnerability_reliance_on_dns_lookups_in_a_security_decision_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on DNS Lookups in a Security Decision');
SET @generic_vulnerability_uncaught_exception_id := (SELECT id FROM GenericVulnerability WHERE name = 'Uncaught Exception');
SET @generic_vulnerability_deprecated_often_misused_path_manipulation_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED: Often Misused: Path Manipulation');
SET @generic_vulnerability_execution_with_unnecessary_privileges_id := (SELECT id FROM GenericVulnerability WHERE name = 'Execution with Unnecessary Privileges');
SET @generic_vulnerability_often_misused_string_management_id := (SELECT id FROM GenericVulnerability WHERE name = 'Often Misused: String Management');
SET @generic_vulnerability_unchecked_return_value_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unchecked Return Value');
SET @generic_vulnerability_incorrect_check_of_function_return_value_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Check of Function Return Value');
SET @generic_vulnerability_security_features_id := (SELECT id FROM GenericVulnerability WHERE name = 'Security Features');
SET @generic_vulnerability_credentials_management_id := (SELECT id FROM GenericVulnerability WHERE name = 'Credentials Management');
SET @generic_vulnerability_plaintext_storage_of_a_password_id := (SELECT id FROM GenericVulnerability WHERE name = 'Plaintext Storage of a Password');
SET @generic_vulnerability_storing_passwords_in_a_recoverable_format_id := (SELECT id FROM GenericVulnerability WHERE name = 'Storing Passwords in a Recoverable Format');
SET @generic_vulnerability_empty_password_in_configuration_file_id := (SELECT id FROM GenericVulnerability WHERE name = 'Empty Password in Configuration File');
SET @generic_vulnerability_use_of_hard_coded_password_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Hard-coded Password');
SET @generic_vulnerability_password_in_configuration_file_id := (SELECT id FROM GenericVulnerability WHERE name = 'Password in Configuration File');
SET @generic_vulnerability_weak_cryptography_for_passwords_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weak Cryptography for Passwords');
SET @generic_vulnerability_not_using_password_aging_id := (SELECT id FROM GenericVulnerability WHERE name = 'Not Using Password Aging');
SET @generic_vulnerability_password_aging_with_long_expiration_id := (SELECT id FROM GenericVulnerability WHERE name = 'Password Aging with Long Expiration');
SET @generic_vulnerability_permissions_privileges_and_access_controls_id := (SELECT id FROM GenericVulnerability WHERE name = 'Permissions, Privileges, and Access Controls');
SET @generic_vulnerability_privilege_sandbox_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Privilege / Sandbox Issues');
SET @generic_vulnerability_incorrect_privilege_assignment_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Privilege Assignment');
SET @generic_vulnerability_privilege_defined_with_unsafe_actions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Privilege Defined With Unsafe Actions');
SET @generic_vulnerability_privilege_chaining_id := (SELECT id FROM GenericVulnerability WHERE name = 'Privilege Chaining');
SET @generic_vulnerability_improper_privilege_management_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Privilege Management');
SET @generic_vulnerability_privilege_context_switching_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Privilege Context Switching Error');
SET @generic_vulnerability_privilege_dropping_lowering_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Privilege Dropping / Lowering Errors');
SET @generic_vulnerability_least_privilege_violation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Least Privilege Violation');
SET @generic_vulnerability_improper_check_for_dropped_privileges_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Check for Dropped Privileges');
SET @generic_vulnerability_improper_handling_of_insufficient_privileges_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Insufficient Privileges');
SET @generic_vulnerability_permission_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Permission Issues');
SET @generic_vulnerability_incorrect_default_permissions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Default Permissions');
SET @generic_vulnerability_insecure_inherited_permissions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insecure Inherited Permissions');
SET @generic_vulnerability_insecure_preserved_inherited_permissions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insecure Preserved Inherited Permissions');
SET @generic_vulnerability_incorrect_execution_assigned_permissions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Execution-Assigned Permissions');
SET @generic_vulnerability_improper_handling_of_insufficient_permissions_or_privileges_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Insufficient Permissions or Privileges ');
SET @generic_vulnerability_improper_preservation_of_permissions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Preservation of Permissions');
SET @generic_vulnerability_improper_ownership_management_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Ownership Management');
SET @generic_vulnerability_unverified_ownership_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unverified Ownership');
SET @generic_vulnerability_access_control_authorization_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Access Control (Authorization) Issues');
SET @generic_vulnerability_improper_access_control_authorization_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Access Control (Authorization)');
SET @generic_vulnerability_incorrect_user_management_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect User Management');
SET @generic_vulnerability_improper_authentication_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Authentication');
SET @generic_vulnerability_authentication_bypass_using_an_alternate_path_or_channel_id := (SELECT id FROM GenericVulnerability WHERE name = 'Authentication Bypass Using an Alternate Path or Channel');
SET @generic_vulnerability_authentication_bypass_by_alternate_name_id := (SELECT id FROM GenericVulnerability WHERE name = 'Authentication Bypass by Alternate Name');
SET @generic_vulnerability_authentication_bypass_by_spoofing_id := (SELECT id FROM GenericVulnerability WHERE name = 'Authentication Bypass by Spoofing');
SET @generic_vulnerability_trusting_self_reported_ip_address_id := (SELECT id FROM GenericVulnerability WHERE name = 'Trusting Self-reported IP Address');
SET @generic_vulnerability_trusting_self_reported_dns_name_id := (SELECT id FROM GenericVulnerability WHERE name = 'Trusting Self-reported DNS Name');
SET @generic_vulnerability_using_referer_field_for_authentication_id := (SELECT id FROM GenericVulnerability WHERE name = 'Using Referer Field for Authentication');
SET @generic_vulnerability_authentication_bypass_by_capture_replay_id := (SELECT id FROM GenericVulnerability WHERE name = 'Authentication Bypass by Capture-replay');
SET @generic_vulnerability_certificate_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Certificate Issues');
SET @generic_vulnerability_improper_following_of_chain_of_trust_for_certificate_validation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Following of Chain of Trust for Certificate Validation');
SET @generic_vulnerability_improper_validation_of_host_specific_certificate_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Validation of Host-specific Certificate Data');
SET @generic_vulnerability_improper_validation_of_certificate_expiration_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Validation of Certificate Expiration');
SET @generic_vulnerability_improper_check_for_certificate_revocation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Check for Certificate Revocation');
SET @generic_vulnerability_channel_accessible_by_non_endpoint_man_in_the_middle_id := (SELECT id FROM GenericVulnerability WHERE name = 'Channel Accessible by Non-Endpoint (''Man-in-the-Middle'')');
SET @generic_vulnerability_reflection_attack_in_an_authentication_protocol_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reflection Attack in an Authentication Protocol');
SET @generic_vulnerability_authentication_bypass_by_assumed_immutable_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Authentication Bypass by Assumed-Immutable Data');
SET @generic_vulnerability_incorrect_implementation_of_authentication_algorithm_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Implementation of Authentication Algorithm');
SET @generic_vulnerability_missing_critical_step_in_authentication_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Critical Step in Authentication');
SET @generic_vulnerability_authentication_bypass_by_primary_weakness_id := (SELECT id FROM GenericVulnerability WHERE name = 'Authentication Bypass by Primary Weakness');
SET @generic_vulnerability_missing_authentication_for_critical_function_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Authentication for Critical Function');
SET @generic_vulnerability_improper_restriction_of_excessive_authentication_attempts_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Restriction of Excessive Authentication Attempts');
SET @generic_vulnerability_use_of_single_factor_authentication_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Single-factor Authentication');
SET @generic_vulnerability_use_of_password_system_for_primary_authentication_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Password System for Primary Authentication');
SET @generic_vulnerability_cryptographic_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Cryptographic Issues');
SET @generic_vulnerability_missing_encryption_of_sensitive_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Encryption of Sensitive Data');
SET @generic_vulnerability_cleartext_storage_of_sensitive_information_id := (SELECT id FROM GenericVulnerability WHERE name = 'Cleartext Storage of Sensitive Information');
SET @generic_vulnerability_plaintext_storage_in_a_file_or_on_disk_id := (SELECT id FROM GenericVulnerability WHERE name = 'Plaintext Storage in a File or on Disk');
SET @generic_vulnerability_plaintext_storage_in_the_registry_id := (SELECT id FROM GenericVulnerability WHERE name = 'Plaintext Storage in the Registry');
SET @generic_vulnerability_plaintext_storage_in_a_cookie_id := (SELECT id FROM GenericVulnerability WHERE name = 'Plaintext Storage in a Cookie');
SET @generic_vulnerability_plaintext_storage_in_memory_id := (SELECT id FROM GenericVulnerability WHERE name = 'Plaintext Storage in Memory');
SET @generic_vulnerability_plaintext_storage_in_gui_id := (SELECT id FROM GenericVulnerability WHERE name = 'Plaintext Storage in GUI');
SET @generic_vulnerability_plaintext_storage_in_executable_id := (SELECT id FROM GenericVulnerability WHERE name = 'Plaintext Storage in Executable');
SET @generic_vulnerability_cleartext_transmission_of_sensitive_information_id := (SELECT id FROM GenericVulnerability WHERE name = 'Cleartext Transmission of Sensitive Information');
SET @generic_vulnerability_key_management_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Key Management Errors');
SET @generic_vulnerability_use_of_hard_coded_cryptographic_key_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Hard-coded Cryptographic Key');
SET @generic_vulnerability_key_exchange_without_entity_authentication_id := (SELECT id FROM GenericVulnerability WHERE name = 'Key Exchange without Entity Authentication');
SET @generic_vulnerability_reusing_a_nonce_key_pair_in_encryption_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reusing a Nonce, Key Pair in Encryption');
SET @generic_vulnerability_use_of_a_key_past_its_expiration_date_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of a Key Past its Expiration Date');
SET @generic_vulnerability_missing_required_cryptographic_step_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Required Cryptographic Step');
SET @generic_vulnerability_inadequate_encryption_strength_id := (SELECT id FROM GenericVulnerability WHERE name = 'Inadequate Encryption Strength');
SET @generic_vulnerability_use_of_a_broken_or_risky_cryptographic_algorithm_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of a Broken or Risky Cryptographic Algorithm');
SET @generic_vulnerability_reversible_one_way_hash_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reversible One-Way Hash');
SET @generic_vulnerability_not_using_a_random_iv_with_cbc_mode_id := (SELECT id FROM GenericVulnerability WHERE name = 'Not Using a Random IV with CBC Mode');
SET @generic_vulnerability_use_of_insufficiently_random_values_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Insufficiently Random Values');
SET @generic_vulnerability_insufficient_entropy_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Entropy');
SET @generic_vulnerability_insufficient_entropy_in_prng_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Entropy in PRNG');
SET @generic_vulnerability_improper_handling_of_insufficient_entropy_in_trng_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Insufficient Entropy in TRNG');
SET @generic_vulnerability_small_space_of_random_values_id := (SELECT id FROM GenericVulnerability WHERE name = 'Small Space of Random Values');
SET @generic_vulnerability_prng_seed_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'PRNG Seed Error');
SET @generic_vulnerability_same_seed_in_prng_id := (SELECT id FROM GenericVulnerability WHERE name = 'Same Seed in PRNG');
SET @generic_vulnerability_predictable_seed_in_prng_id := (SELECT id FROM GenericVulnerability WHERE name = 'Predictable Seed in PRNG');
SET @generic_vulnerability_use_of_cryptographically_weak_prng_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Cryptographically Weak PRNG');
SET @generic_vulnerability_small_seed_space_in_prng_id := (SELECT id FROM GenericVulnerability WHERE name = 'Small Seed Space in PRNG');
SET @generic_vulnerability_predictability_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Predictability Problems');
SET @generic_vulnerability_predictable_from_observable_state_id := (SELECT id FROM GenericVulnerability WHERE name = 'Predictable from Observable State');
SET @generic_vulnerability_predictable_exact_value_from_previous_values_id := (SELECT id FROM GenericVulnerability WHERE name = 'Predictable Exact Value from Previous Values');
SET @generic_vulnerability_predictable_value_range_from_previous_values_id := (SELECT id FROM GenericVulnerability WHERE name = 'Predictable Value Range from Previous Values');
SET @generic_vulnerability_use_of_invariant_value_in_dynamically_changing_context_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Invariant Value in Dynamically Changing Context');
SET @generic_vulnerability_insufficient_verification_of_data_authenticity_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Verification of Data Authenticity');
SET @generic_vulnerability_origin_validation_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Origin Validation Error');
SET @generic_vulnerability_improper_verification_of_cryptographic_signature_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Verification of Cryptographic Signature');
SET @generic_vulnerability_use_of_less_trusted_source_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Less Trusted Source');
SET @generic_vulnerability_acceptance_of_extraneous_untrusted_data_with_trusted_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Acceptance of Extraneous Untrusted Data With Trusted Data');
SET @generic_vulnerability_improperly_trusted_reverse_dns_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improperly Trusted Reverse DNS');
SET @generic_vulnerability_insufficient_type_distinction_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Type Distinction');
SET @generic_vulnerability_cross_site_request_forgery_csrf_id := (SELECT id FROM GenericVulnerability WHERE name = 'Cross-Site Request Forgery (CSRF)');
SET @generic_vulnerability_failure_to_add_integrity_check_value_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Add Integrity Check Value');
SET @generic_vulnerability_improper_validation_of_integrity_check_value_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Validation of Integrity Check Value');
SET @generic_vulnerability_user_interface_security_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'User Interface Security Issues');
SET @generic_vulnerability_product_ui_does_not_warn_user_of_unsafe_actions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Product UI does not Warn User of Unsafe Actions');
SET @generic_vulnerability_insufficient_ui_warning_of_dangerous_operations_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient UI Warning of Dangerous Operations');
SET @generic_vulnerability_improperly_implemented_security_check_for_standard_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improperly Implemented Security Check for Standard');
SET @generic_vulnerability_privacy_violation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Privacy Violation');
SET @generic_vulnerability_trust_of_system_event_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Trust of System Event Data');
SET @generic_vulnerability_time_and_state_id := (SELECT id FROM GenericVulnerability WHERE name = 'Time and State');
SET @generic_vulnerability_race_condition_id := (SELECT id FROM GenericVulnerability WHERE name = 'Race Condition');
SET @generic_vulnerability_race_condition_enabling_link_following_id := (SELECT id FROM GenericVulnerability WHERE name = 'Race Condition Enabling Link Following');
SET @generic_vulnerability_signal_handler_race_condition_id := (SELECT id FROM GenericVulnerability WHERE name = 'Signal Handler Race Condition');
SET @generic_vulnerability_race_condition_in_switch_id := (SELECT id FROM GenericVulnerability WHERE name = 'Race Condition in Switch');
SET @generic_vulnerability_race_condition_within_a_thread_id := (SELECT id FROM GenericVulnerability WHERE name = 'Race Condition within a Thread');
SET @generic_vulnerability_time_of_check_time_of_use_toctou_race_condition_id := (SELECT id FROM GenericVulnerability WHERE name = 'Time-of-check Time-of-use (TOCTOU) Race Condition');
SET @generic_vulnerability_context_switching_race_condition_id := (SELECT id FROM GenericVulnerability WHERE name = 'Context Switching Race Condition');
SET @generic_vulnerability_divide_by_zero_id := (SELECT id FROM GenericVulnerability WHERE name = 'Divide By Zero');
SET @generic_vulnerability_missing_check_for_certificate_revocation_after_initial_check_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Check for Certificate Revocation after Initial Check');
SET @generic_vulnerability_state_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'State Issues');
SET @generic_vulnerability_incomplete_internal_state_distinction_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incomplete Internal State Distinction');
SET @generic_vulnerability_state_synchronization_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'State Synchronization Error');
SET @generic_vulnerability_mutable_objects_passed_by_reference_id := (SELECT id FROM GenericVulnerability WHERE name = 'Mutable Objects Passed by Reference');
SET @generic_vulnerability_passing_mutable_objects_to_an_untrusted_method_id := (SELECT id FROM GenericVulnerability WHERE name = 'Passing Mutable Objects to an Untrusted Method');
SET @generic_vulnerability_temporary_file_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Temporary File Issues');
SET @generic_vulnerability_insecure_temporary_file_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insecure Temporary File');
SET @generic_vulnerability_creation_of_temporary_file_with_insecure_permissions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Creation of Temporary File With Insecure Permissions');
SET @generic_vulnerability_creation_of_temporary_file_in_directory_with_incorrect_permissions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Creation of Temporary File in Directory with Incorrect Permissions');
SET @generic_vulnerability_technology_specific_time_and_state_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Technology-Specific Time and State Issues');
SET @generic_vulnerability_j2ee_time_and_state_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Time and State Issues');
SET @generic_vulnerability_j2ee_bad_practices_use_of_system_exit_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Bad Practices: Use of System.exit()');
SET @generic_vulnerability_j2ee_bad_practices_direct_use_of_threads_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Bad Practices: Direct Use of Threads');
SET @generic_vulnerability_session_fixation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Session Fixation');
SET @generic_vulnerability_covert_timing_channel_id := (SELECT id FROM GenericVulnerability WHERE name = 'Covert Timing Channel');
SET @generic_vulnerability_symbolic_name_not_mapping_to_correct_object_id := (SELECT id FROM GenericVulnerability WHERE name = 'Symbolic Name not Mapping to Correct Object');
SET @generic_vulnerability_signal_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Signal Errors');
SET @generic_vulnerability_error_handling_id := (SELECT id FROM GenericVulnerability WHERE name = 'Error Handling');
SET @generic_vulnerability_error_conditions_return_values_status_codes_id := (SELECT id FROM GenericVulnerability WHERE name = 'Error Conditions, Return Values, Status Codes');
SET @generic_vulnerability_detection_of_error_condition_without_action_id := (SELECT id FROM GenericVulnerability WHERE name = 'Detection of Error Condition Without Action');
SET @generic_vulnerability_unchecked_error_condition_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unchecked Error Condition');
SET @generic_vulnerability_failure_to_report_error_in_status_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Report Error in Status Code');
SET @generic_vulnerability_return_of_wrong_status_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Return of Wrong Status Code');
SET @generic_vulnerability_unexpected_status_code_or_return_value_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unexpected Status Code or Return Value');
SET @generic_vulnerability_use_of_nullpointerexception_catch_to_detect_null_pointer_dereference_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of NullPointerException Catch to Detect NULL Pointer Dereference');
SET @generic_vulnerability_declaration_of_catch_for_generic_exception_id := (SELECT id FROM GenericVulnerability WHERE name = 'Declaration of Catch for Generic Exception');
SET @generic_vulnerability_declaration_of_throws_for_generic_exception_id := (SELECT id FROM GenericVulnerability WHERE name = 'Declaration of Throws for Generic Exception');
SET @generic_vulnerability_indicator_of_poor_code_quality_id := (SELECT id FROM GenericVulnerability WHERE name = 'Indicator of Poor Code Quality');
SET @generic_vulnerability_resource_management_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Resource Management Errors');
SET @generic_vulnerability_uncontrolled_resource_consumption_resource_exhaustion_id := (SELECT id FROM GenericVulnerability WHERE name = 'Uncontrolled Resource Consumption (''Resource Exhaustion'')');
SET @generic_vulnerability_failure_to_release_memory_before_removing_last_reference_memory_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Release Memory Before Removing Last Reference (''Memory Leak'')');
SET @generic_vulnerability_transmission_of_private_resources_into_a_new_sphere_resource_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'Transmission of Private Resources into a New Sphere (''Resource Leak'')');
SET @generic_vulnerability_unix_file_descriptor_leak_id := (SELECT id FROM GenericVulnerability WHERE name = 'UNIX File Descriptor Leak');
SET @generic_vulnerability_improper_resource_shutdown_or_release_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Resource Shutdown or Release');
SET @generic_vulnerability_asymmetric_resource_consumption_amplification_id := (SELECT id FROM GenericVulnerability WHERE name = 'Asymmetric Resource Consumption (Amplification)');
SET @generic_vulnerability_insufficient_control_of_network_message_volume_network_amplification_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Control of Network Message Volume (Network Amplification)');
SET @generic_vulnerability_algorithmic_complexity_id := (SELECT id FROM GenericVulnerability WHERE name = 'Algorithmic Complexity');
SET @generic_vulnerability_incorrect_behavior_order_early_amplification_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Behavior Order: Early Amplification');
SET @generic_vulnerability_improper_handling_of_highly_compressed_data_data_amplification_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Highly Compressed Data (Data Amplification)');
SET @generic_vulnerability_insufficient_resource_pool_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Resource Pool');
SET @generic_vulnerability_resource_locking_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Resource Locking Problems');
SET @generic_vulnerability_unrestricted_externally_accessible_lock_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unrestricted Externally Accessible Lock');
SET @generic_vulnerability_insufficient_resource_locking_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Resource Locking');
SET @generic_vulnerability_missing_lock_check_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Lock Check');
SET @generic_vulnerability_double_free_id := (SELECT id FROM GenericVulnerability WHERE name = 'Double Free');
SET @generic_vulnerability_use_after_free_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use After Free');
SET @generic_vulnerability_channel_and_path_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Channel and Path Errors');
SET @generic_vulnerability_channel_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Channel Errors');
SET @generic_vulnerability_unprotected_primary_channel_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unprotected Primary Channel');
SET @generic_vulnerability_unprotected_alternate_channel_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unprotected Alternate Channel');
SET @generic_vulnerability_race_condition_during_access_to_alternate_channel_id := (SELECT id FROM GenericVulnerability WHERE name = 'Race Condition During Access to Alternate Channel');
SET @generic_vulnerability_unprotected_windows_messaging_channel_shatter_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unprotected Windows Messaging Channel (''Shatter'')');
SET @generic_vulnerability_deprecated_duplicate_proxied_trusted_channel_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED (Duplicate): Proxied Trusted Channel');
SET @generic_vulnerability_failure_to_protect_alternate_path_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Protect Alternate Path');
SET @generic_vulnerability_direct_request_forced_browsing_id := (SELECT id FROM GenericVulnerability WHERE name = 'Direct Request (''Forced Browsing'')');
SET @generic_vulnerability_untrusted_search_path_id := (SELECT id FROM GenericVulnerability WHERE name = 'Untrusted Search Path');
SET @generic_vulnerability_uncontrolled_search_path_element_id := (SELECT id FROM GenericVulnerability WHERE name = 'Uncontrolled Search Path Element');
SET @generic_vulnerability_unquoted_search_path_or_element_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unquoted Search Path or Element');
SET @generic_vulnerability_handler_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Handler Errors');
SET @generic_vulnerability_deployment_of_wrong_handler_id := (SELECT id FROM GenericVulnerability WHERE name = 'Deployment of Wrong Handler');
SET @generic_vulnerability_missing_handler_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Handler');
SET @generic_vulnerability_dangerous_handler_not_disabled_during_sensitive_operations_id := (SELECT id FROM GenericVulnerability WHERE name = 'Dangerous Handler not Disabled During Sensitive Operations');
SET @generic_vulnerability_unparsed_raw_web_content_delivery_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unparsed Raw Web Content Delivery');
SET @generic_vulnerability_unrestricted_upload_of_file_with_dangerous_type_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unrestricted Upload of File with Dangerous Type');
SET @generic_vulnerability_interaction_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Interaction Error');
SET @generic_vulnerability_interpretation_conflict_id := (SELECT id FROM GenericVulnerability WHERE name = 'Interpretation Conflict');
SET @generic_vulnerability_incomplete_model_of_endpoint_features_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incomplete Model of Endpoint Features');
SET @generic_vulnerability_behavioral_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Behavioral Problems');
SET @generic_vulnerability_behavioral_change_in_new_version_or_environment_id := (SELECT id FROM GenericVulnerability WHERE name = 'Behavioral Change in New Version or Environment');
SET @generic_vulnerability_expected_behavior_violation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Expected Behavior Violation');
SET @generic_vulnerability_unintended_proxy_intermediary_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unintended Proxy/Intermediary');
SET @generic_vulnerability_web_problems_id := (SELECT id FROM GenericVulnerability WHERE name = 'Web Problems');
SET @generic_vulnerability_deprecated_duplicate_http_response_splitting_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED (Duplicate): HTTP response splitting');
SET @generic_vulnerability_inconsistent_interpretation_of_http_requests_http_request_smuggling_id := (SELECT id FROM GenericVulnerability WHERE name = 'Inconsistent Interpretation of HTTP Requests (''HTTP Request Smuggling'')');
SET @generic_vulnerability_user_interface_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'User Interface Errors');
SET @generic_vulnerability_ui_discrepancy_for_security_feature_id := (SELECT id FROM GenericVulnerability WHERE name = 'UI Discrepancy for Security Feature');
SET @generic_vulnerability_unimplemented_or_unsupported_feature_in_ui_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unimplemented or Unsupported Feature in UI');
SET @generic_vulnerability_obsolete_feature_in_ui_id := (SELECT id FROM GenericVulnerability WHERE name = 'Obsolete Feature in UI');
SET @generic_vulnerability_the_ui_performs_the_wrong_action_id := (SELECT id FROM GenericVulnerability WHERE name = 'The UI Performs the Wrong Action');
SET @generic_vulnerability_multiple_interpretations_of_ui_input_id := (SELECT id FROM GenericVulnerability WHERE name = 'Multiple Interpretations of UI Input');
SET @generic_vulnerability_ui_misrepresentation_of_critical_information_id := (SELECT id FROM GenericVulnerability WHERE name = 'UI Misrepresentation of Critical Information');
SET @generic_vulnerability_initialization_and_cleanup_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Initialization and Cleanup Errors');
SET @generic_vulnerability_insecure_default_variable_initialization_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insecure Default Variable Initialization');
SET @generic_vulnerability_external_initialization_of_trusted_variables_or_data_stores_id := (SELECT id FROM GenericVulnerability WHERE name = 'External Initialization of Trusted Variables or Data Stores');
SET @generic_vulnerability_non_exit_on_failed_initialization_id := (SELECT id FROM GenericVulnerability WHERE name = 'Non-exit on Failed Initialization');
SET @generic_vulnerability_missing_initialization_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Initialization');
SET @generic_vulnerability_use_of_uninitialized_variable_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Uninitialized Variable');
SET @generic_vulnerability_deprecated_incorrect_initialization_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED: Incorrect Initialization');
SET @generic_vulnerability_incomplete_cleanup_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incomplete Cleanup');
SET @generic_vulnerability_improper_cleanup_on_thrown_exception_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Cleanup on Thrown Exception');
SET @generic_vulnerability_data_structure_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Data Structure Issues');
SET @generic_vulnerability_duplicate_key_in_associative_list_alist_id := (SELECT id FROM GenericVulnerability WHERE name = 'Duplicate Key in Associative List (Alist)');
SET @generic_vulnerability_deletion_of_data_structure_sentinel_id := (SELECT id FROM GenericVulnerability WHERE name = 'Deletion of Data Structure Sentinel');
SET @generic_vulnerability_addition_of_data_structure_sentinel_id := (SELECT id FROM GenericVulnerability WHERE name = 'Addition of Data Structure Sentinel');
SET @generic_vulnerability_pointer_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Pointer Issues');
SET @generic_vulnerability_return_of_pointer_value_outside_of_expected_range_id := (SELECT id FROM GenericVulnerability WHERE name = 'Return of Pointer Value Outside of Expected Range');
SET @generic_vulnerability_use_of_sizeof_on_a_pointer_type_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of sizeof() on a Pointer Type');
SET @generic_vulnerability_incorrect_pointer_scaling_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Pointer Scaling');
SET @generic_vulnerability_use_of_pointer_subtraction_to_determine_size_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Pointer Subtraction to Determine Size');
SET @generic_vulnerability_use_of_externally_controlled_input_to_select_classes_or_code_unsafe_reflection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Externally-Controlled Input to Select Classes or Code (''Unsafe Reflection'')');
SET @generic_vulnerability_modification_of_assumed_immutable_data_maid_id := (SELECT id FROM GenericVulnerability WHERE name = 'Modification of Assumed-Immutable Data (MAID)');
SET @generic_vulnerability_external_control_of_assumed_immutable_web_parameter_id := (SELECT id FROM GenericVulnerability WHERE name = 'External Control of Assumed-Immutable Web Parameter');
SET @generic_vulnerability_php_external_variable_modification_id := (SELECT id FROM GenericVulnerability WHERE name = 'PHP External Variable Modification');
SET @generic_vulnerability_use_of_function_with_inconsistent_implementations_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Function with Inconsistent Implementations');
SET @generic_vulnerability_undefined_behavior_for_input_to_api_id := (SELECT id FROM GenericVulnerability WHERE name = 'Undefined Behavior for Input to API');
SET @generic_vulnerability_null_pointer_dereference_id := (SELECT id FROM GenericVulnerability WHERE name = 'NULL Pointer Dereference');
SET @generic_vulnerability_use_of_obsolete_functions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Obsolete Functions');
SET @generic_vulnerability_missing_default_case_in_switch_statement_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Default Case in Switch Statement');
SET @generic_vulnerability_unsafe_function_call_from_a_signal_handler_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unsafe Function Call from a Signal Handler');
SET @generic_vulnerability_use_of_incorrect_operator_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Incorrect Operator');
SET @generic_vulnerability_assigning_instead_of_comparing_id := (SELECT id FROM GenericVulnerability WHERE name = 'Assigning instead of Comparing');
SET @generic_vulnerability_comparing_instead_of_assigning_id := (SELECT id FROM GenericVulnerability WHERE name = 'Comparing instead of Assigning');
SET @generic_vulnerability_incorrect_block_delimitation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Block Delimitation');
SET @generic_vulnerability_omitted_break_statement_in_switch_id := (SELECT id FROM GenericVulnerability WHERE name = 'Omitted Break Statement in Switch');
SET @generic_vulnerability_insufficient_encapsulation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Encapsulation');
SET @generic_vulnerability_comparison_of_classes_by_name_id := (SELECT id FROM GenericVulnerability WHERE name = 'Comparison of Classes by Name');
SET @generic_vulnerability_reliance_on_package_level_scope_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on Package-level Scope');
SET @generic_vulnerability_data_leak_between_sessions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Data Leak Between Sessions');
SET @generic_vulnerability_leftover_debug_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Leftover Debug Code');
SET @generic_vulnerability_mobile_code_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Mobile Code Issues');
SET @generic_vulnerability_public_cloneable_method_without_final_object_hijack_id := (SELECT id FROM GenericVulnerability WHERE name = 'Public cloneable() Method Without Final (''Object Hijack'')');
SET @generic_vulnerability_use_of_inner_class_containing_sensitive_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Inner Class Containing Sensitive Data');
SET @generic_vulnerability_critical_public_variable_without_final_modifier_id := (SELECT id FROM GenericVulnerability WHERE name = 'Critical Public Variable Without Final Modifier');
SET @generic_vulnerability_download_of_code_without_integrity_check_id := (SELECT id FROM GenericVulnerability WHERE name = 'Download of Code Without Integrity Check');
SET @generic_vulnerability_private_array_typed_field_returned_from_a_public_method_id := (SELECT id FROM GenericVulnerability WHERE name = 'Private Array-Typed Field Returned From A Public Method');
SET @generic_vulnerability_public_data_assigned_to_private_array_typed_field_id := (SELECT id FROM GenericVulnerability WHERE name = 'Public Data Assigned to Private Array-Typed Field');
SET @generic_vulnerability_exposure_of_system_data_to_an_unauthorized_control_sphere_id := (SELECT id FROM GenericVulnerability WHERE name = 'Exposure of System Data to an Unauthorized Control Sphere');
SET @generic_vulnerability_information_leak_through_class_cloning_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak through Class Cloning');
SET @generic_vulnerability_serializable_class_containing_sensitive_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Serializable Class Containing Sensitive Data');
SET @generic_vulnerability_public_static_field_not_marked_final_id := (SELECT id FROM GenericVulnerability WHERE name = 'Public Static Field Not Marked Final');
SET @generic_vulnerability_trust_boundary_violation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Trust Boundary Violation');
SET @generic_vulnerability_deserialization_of_untrusted_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Deserialization of Untrusted Data');
SET @generic_vulnerability_byte_object_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Byte/Object Code');
SET @generic_vulnerability_motivation_intent_id := (SELECT id FROM GenericVulnerability WHERE name = 'Motivation/Intent');
SET @generic_vulnerability_intentionally_introduced_weakness_id := (SELECT id FROM GenericVulnerability WHERE name = 'Intentionally Introduced Weakness');
SET @generic_vulnerability_embedded_malicious_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Embedded Malicious Code');
SET @generic_vulnerability_trojan_horse_id := (SELECT id FROM GenericVulnerability WHERE name = 'Trojan Horse');
SET @generic_vulnerability_non_replicating_malicious_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Non-Replicating Malicious Code');
SET @generic_vulnerability_replicating_malicious_code_virus_or_worm_id := (SELECT id FROM GenericVulnerability WHERE name = 'Replicating Malicious Code (Virus or Worm)');
SET @generic_vulnerability_trapdoor_id := (SELECT id FROM GenericVulnerability WHERE name = 'Trapdoor');
SET @generic_vulnerability_logic_time_bomb_id := (SELECT id FROM GenericVulnerability WHERE name = 'Logic/Time Bomb');
SET @generic_vulnerability_spyware_id := (SELECT id FROM GenericVulnerability WHERE name = 'Spyware');
SET @generic_vulnerability_intentionally_introduced_nonmalicious_weakness_id := (SELECT id FROM GenericVulnerability WHERE name = 'Intentionally Introduced Nonmalicious Weakness');
SET @generic_vulnerability_covert_channel_id := (SELECT id FROM GenericVulnerability WHERE name = 'Covert Channel');
SET @generic_vulnerability_covert_storage_channel_id := (SELECT id FROM GenericVulnerability WHERE name = 'Covert Storage Channel');
SET @generic_vulnerability_deprecated_duplicate_covert_timing_channel_id := (SELECT id FROM GenericVulnerability WHERE name = 'DEPRECATED (Duplicate): Covert Timing Channel');
SET @generic_vulnerability_other_intentional_nonmalicious_weakness_id := (SELECT id FROM GenericVulnerability WHERE name = 'Other Intentional, Nonmalicious Weakness');
SET @generic_vulnerability_inadvertently_introduced_weakness_id := (SELECT id FROM GenericVulnerability WHERE name = 'Inadvertently Introduced Weakness');
SET @generic_vulnerability__net_environment_issues_id := (SELECT id FROM GenericVulnerability WHERE name = '.NET Environment Issues');
SET @generic_vulnerability__net_misconfiguration_use_of_impersonation_id := (SELECT id FROM GenericVulnerability WHERE name = '.NET Misconfiguration: Use of Impersonation');
SET @generic_vulnerability_weak_password_requirements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weak Password Requirements');
SET @generic_vulnerability_insufficiently_protected_credentials_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficiently Protected Credentials');
SET @generic_vulnerability_unprotected_transport_of_credentials_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unprotected Transport of Credentials');
SET @generic_vulnerability_information_leak_through_caching_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Caching');
SET @generic_vulnerability_information_leak_through_browser_caching_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Browser Caching');
SET @generic_vulnerability_information_leak_through_environmental_variables_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Environmental Variables');
SET @generic_vulnerability_exposure_of_cvs_repository_to_an_unauthorized_control_sphere_id := (SELECT id FROM GenericVulnerability WHERE name = 'Exposure of CVS Repository to an Unauthorized Control Sphere');
SET @generic_vulnerability_exposure_of_core_dump_file_to_an_unauthorized_control_sphere_id := (SELECT id FROM GenericVulnerability WHERE name = 'Exposure of Core Dump File to an Unauthorized Control Sphere');
SET @generic_vulnerability_exposure_of_access_control_list_files_to_an_unauthorized_control_sphere_id := (SELECT id FROM GenericVulnerability WHERE name = 'Exposure of Access Control List Files to an Unauthorized Control Sphere');
SET @generic_vulnerability_exposure_of_backup_file_to_an_unauthorized_control_sphere_id := (SELECT id FROM GenericVulnerability WHERE name = 'Exposure of Backup File to an Unauthorized Control Sphere');
SET @generic_vulnerability_information_leak_through_test_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Test Code');
SET @generic_vulnerability_information_leak_through_log_files_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Log Files');
SET @generic_vulnerability_information_leak_through_server_log_files_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Server Log Files');
SET @generic_vulnerability_information_leak_through_debug_log_files_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Debug Log Files');
SET @generic_vulnerability_information_leak_through_shell_error_message_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Shell Error Message');
SET @generic_vulnerability_information_leak_through_servlet_runtime_error_message_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Servlet Runtime Error Message');
SET @generic_vulnerability_information_leak_through_java_runtime_error_message_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Java Runtime Error Message');
SET @generic_vulnerability_file_and_directory_information_exposure_id := (SELECT id FROM GenericVulnerability WHERE name = 'File and Directory Information Exposure');
SET @generic_vulnerability_information_leak_through_persistent_cookies_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Persistent Cookies');
SET @generic_vulnerability_information_leak_through_source_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Source Code');
SET @generic_vulnerability_information_leak_through_include_source_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Include Source Code');
SET @generic_vulnerability_information_leak_through_cleanup_log_files_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Cleanup Log Files');
SET @generic_vulnerability_use_of_singleton_pattern_in_a_non_thread_safe_manner_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Singleton Pattern in a Non-thread-safe Manner');
SET @generic_vulnerability_failure_to_use_a_standardized_error_handling_mechanism_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Use a Standardized Error Handling Mechanism');
SET @generic_vulnerability_use_of_dynamic_class_loading_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Dynamic Class Loading');
SET @generic_vulnerability_suspicious_comment_id := (SELECT id FROM GenericVulnerability WHERE name = 'Suspicious Comment');
SET @generic_vulnerability_use_of_hard_coded_security_relevant_constants_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Hard-coded, Security-relevant Constants');
SET @generic_vulnerability_information_leak_through_directory_listing_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Directory Listing');
SET @generic_vulnerability_missing_password_field_masking_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Password Field Masking');
SET @generic_vulnerability_information_leak_through_server_error_message_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Server Error Message');
SET @generic_vulnerability_incorrect_behavior_order_authorization_before_parsing_and_canonicalization_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Behavior Order: Authorization Before Parsing and Canonicalization');
SET @generic_vulnerability_files_or_directories_accessible_to_external_parties_id := (SELECT id FROM GenericVulnerability WHERE name = 'Files or Directories Accessible to External Parties');
SET @generic_vulnerability_command_shell_in_externally_accessible_directory_id := (SELECT id FROM GenericVulnerability WHERE name = 'Command Shell in Externally Accessible Directory');
SET @generic_vulnerability_asp_net_misconfiguration_not_using_input_validation_framework_id := (SELECT id FROM GenericVulnerability WHERE name = 'ASP.NET Misconfiguration: Not Using Input Validation Framework');
SET @generic_vulnerability_j2ee_misconfiguration_plaintext_password_in_configuration_file_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Misconfiguration: Plaintext Password in Configuration File');
SET @generic_vulnerability_asp_net_misconfiguration_use_of_identity_impersonation_id := (SELECT id FROM GenericVulnerability WHERE name = 'ASP.NET Misconfiguration: Use of Identity Impersonation');
SET @generic_vulnerability_concurrency_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Concurrency Issues');
SET @generic_vulnerability_use_of_getlogin_in_multithreaded_application_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of getlogin() in Multithreaded Application');
SET @generic_vulnerability_often_misused_arguments_and_parameters_id := (SELECT id FROM GenericVulnerability WHERE name = 'Often Misused: Arguments and Parameters');
SET @generic_vulnerability_use_of_umask_with_chmod_style_argument_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of umask() with chmod-style Argument');
SET @generic_vulnerability_dead_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Dead Code');
SET @generic_vulnerability_return_of_stack_variable_address_id := (SELECT id FROM GenericVulnerability WHERE name = 'Return of Stack Variable Address');
SET @generic_vulnerability_unused_variable_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unused Variable');
SET @generic_vulnerability_sql_injection_hibernate_id := (SELECT id FROM GenericVulnerability WHERE name = 'SQL Injection: Hibernate');
SET @generic_vulnerability_reliance_on_cookies_without_validation_and_integrity_checking_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on Cookies without Validation and Integrity Checking');
SET @generic_vulnerability_access_control_bypass_through_user_controlled_sql_primary_key_id := (SELECT id FROM GenericVulnerability WHERE name = 'Access Control Bypass Through User-Controlled SQL Primary Key');
SET @generic_vulnerability_unsynchronized_access_to_shared_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unsynchronized Access to Shared Data');
SET @generic_vulnerability_finalize_method_without_super_finalize_id := (SELECT id FROM GenericVulnerability WHERE name = 'finalize() Method Without super.finalize()');
SET @generic_vulnerability_expression_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Expression Issues');
SET @generic_vulnerability_expression_is_always_false_id := (SELECT id FROM GenericVulnerability WHERE name = 'Expression is Always False');
SET @generic_vulnerability_expression_is_always_true_id := (SELECT id FROM GenericVulnerability WHERE name = 'Expression is Always True');
SET @generic_vulnerability_call_to_thread_run_instead_of_start_id := (SELECT id FROM GenericVulnerability WHERE name = 'Call to Thread run() instead of start()');
SET @generic_vulnerability_failure_to_follow_specification_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Follow Specification');
SET @generic_vulnerability_ejb_bad_practices_use_of_synchronization_primitives_id := (SELECT id FROM GenericVulnerability WHERE name = 'EJB Bad Practices: Use of Synchronization Primitives');
SET @generic_vulnerability_ejb_bad_practices_use_of_awt_swing_id := (SELECT id FROM GenericVulnerability WHERE name = 'EJB Bad Practices: Use of AWT Swing');
SET @generic_vulnerability_ejb_bad_practices_use_of_java_i_o_id := (SELECT id FROM GenericVulnerability WHERE name = 'EJB Bad Practices: Use of Java I/O');
SET @generic_vulnerability_ejb_bad_practices_use_of_sockets_id := (SELECT id FROM GenericVulnerability WHERE name = 'EJB Bad Practices: Use of Sockets');
SET @generic_vulnerability_ejb_bad_practices_use_of_class_loader_id := (SELECT id FROM GenericVulnerability WHERE name = 'EJB Bad Practices: Use of Class Loader');
SET @generic_vulnerability_j2ee_bad_practices_non_serializable_object_stored_in_session_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Bad Practices: Non-serializable Object Stored in Session');
SET @generic_vulnerability_clone_method_without_super_clone_id := (SELECT id FROM GenericVulnerability WHERE name = 'clone() Method Without super.clone()');
SET @generic_vulnerability_object_model_violation_just_one_of_equals_and_hashcode_defined_id := (SELECT id FROM GenericVulnerability WHERE name = 'Object Model Violation: Just One of Equals and Hashcode Defined');
SET @generic_vulnerability_array_declared_public_final_and_static_id := (SELECT id FROM GenericVulnerability WHERE name = 'Array Declared Public, Final, and Static');
SET @generic_vulnerability_finalize_method_declared_public_id := (SELECT id FROM GenericVulnerability WHERE name = 'finalize() Method Declared Public');
SET @generic_vulnerability_return_inside_finally_block_id := (SELECT id FROM GenericVulnerability WHERE name = 'Return Inside Finally Block');
SET @generic_vulnerability_empty_synchronized_block_id := (SELECT id FROM GenericVulnerability WHERE name = 'Empty Synchronized Block');
SET @generic_vulnerability_explicit_call_to_finalize_id := (SELECT id FROM GenericVulnerability WHERE name = 'Explicit Call to Finalize()');
SET @generic_vulnerability_assignment_of_a_fixed_address_to_a_pointer_id := (SELECT id FROM GenericVulnerability WHERE name = 'Assignment of a Fixed Address to a Pointer');
SET @generic_vulnerability_attempt_to_access_child_of_a_non_structure_pointer_id := (SELECT id FROM GenericVulnerability WHERE name = 'Attempt to Access Child of a Non-structure Pointer');
SET @generic_vulnerability_call_to_non_ubiquitous_api_id := (SELECT id FROM GenericVulnerability WHERE name = 'Call to Non-ubiquitous API');
SET @generic_vulnerability_free_of_memory_not_on_the_heap_id := (SELECT id FROM GenericVulnerability WHERE name = 'Free of Memory not on the Heap');
SET @generic_vulnerability_sensitive_data_storage_in_improperly_locked_memory_id := (SELECT id FROM GenericVulnerability WHERE name = 'Sensitive Data Storage in Improperly Locked Memory');
SET @generic_vulnerability_authentication_bypass_issues_id := (SELECT id FROM GenericVulnerability WHERE name = 'Authentication Bypass Issues');
SET @generic_vulnerability_authentication_bypass_openssl_ctx_object_modified_after_ssl_objects_are_created_id := (SELECT id FROM GenericVulnerability WHERE name = 'Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created');
SET @generic_vulnerability_j2ee_framework_saving_unserializable_objects_to_disk_id := (SELECT id FROM GenericVulnerability WHERE name = 'J2EE Framework: Saving Unserializable Objects to Disk');
SET @generic_vulnerability_comparison_of_object_references_instead_of_object_contents_id := (SELECT id FROM GenericVulnerability WHERE name = 'Comparison of Object References Instead of Object Contents');
SET @generic_vulnerability_incorrect_semantic_object_comparison_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Semantic Object Comparison');
SET @generic_vulnerability_use_of_wrong_operator_in_string_comparison_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Wrong Operator in String Comparison');
SET @generic_vulnerability_information_leak_through_query_strings_in_get_request_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Query Strings in GET Request');
SET @generic_vulnerability_trust_of_openssl_certificate_without_validation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Trust of OpenSSL Certificate Without Validation');
SET @generic_vulnerability_failure_to_catch_all_exceptions_in_servlet_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Catch All Exceptions in Servlet ');
SET @generic_vulnerability_url_redirection_to_untrusted_site_open_redirect_id := (SELECT id FROM GenericVulnerability WHERE name = 'URL Redirection to Untrusted Site (''Open Redirect'')');
SET @generic_vulnerability_client_side_enforcement_of_server_side_security_id := (SELECT id FROM GenericVulnerability WHERE name = 'Client-Side Enforcement of Server-Side Security');
SET @generic_vulnerability_use_of_client_side_authentication_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Client-Side Authentication');
SET @generic_vulnerability_deprecated_entries_id := (SELECT id FROM GenericVulnerability WHERE name = 'Deprecated Entries');
SET @generic_vulnerability_multiple_binds_to_the_same_port_id := (SELECT id FROM GenericVulnerability WHERE name = 'Multiple Binds to the Same Port');
SET @generic_vulnerability_unchecked_input_for_loop_condition_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unchecked Input for Loop Condition');
SET @generic_vulnerability_public_static_final_field_references_mutable_object_id := (SELECT id FROM GenericVulnerability WHERE name = 'Public Static Final Field References Mutable Object');
SET @generic_vulnerability_struts_non_private_field_in_actionform_class_id := (SELECT id FROM GenericVulnerability WHERE name = 'Struts: Non-private Field in ActionForm Class');
SET @generic_vulnerability_double_checked_locking_id := (SELECT id FROM GenericVulnerability WHERE name = 'Double-Checked Locking');
SET @generic_vulnerability_externally_controlled_reference_to_a_resource_in_another_sphere_id := (SELECT id FROM GenericVulnerability WHERE name = 'Externally Controlled Reference to a Resource in Another Sphere');
SET @generic_vulnerability_information_leak_through_xml_external_entity_file_disclosure_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through XML External Entity File Disclosure');
SET @generic_vulnerability_information_leak_through_indexing_of_private_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Indexing of Private Data');
SET @generic_vulnerability_insufficient_session_expiration_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Session Expiration');
SET @generic_vulnerability_sensitive_cookie_in_https_session_without_secure_attribute_id := (SELECT id FROM GenericVulnerability WHERE name = 'Sensitive Cookie in HTTPS Session Without ''Secure'' Attribute');
SET @generic_vulnerability_information_leak_through_comments_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak Through Comments');
SET @generic_vulnerability_incomplete_identification_of_uploaded_file_variables_php_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incomplete Identification of Uploaded File Variables (PHP)');
SET @generic_vulnerability_reachable_assertion_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reachable Assertion');
SET @generic_vulnerability_exposed_unsafe_activex_method_id := (SELECT id FROM GenericVulnerability WHERE name = 'Exposed Unsafe ActiveX Method');
SET @generic_vulnerability_dangling_database_cursor_cursor_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Dangling Database Cursor (''Cursor Injection'')');
SET @generic_vulnerability_unverified_password_change_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unverified Password Change');
SET @generic_vulnerability_variable_extraction_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Variable Extraction Error');
SET @generic_vulnerability_unvalidated_function_hook_arguments_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unvalidated Function Hook Arguments');
SET @generic_vulnerability_unsafe_activex_control_marked_safe_for_scripting_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unsafe ActiveX Control Marked Safe For Scripting');
SET @generic_vulnerability_executable_regular_expression_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Executable Regular Expression Error');
SET @generic_vulnerability_permissive_regular_expression_id := (SELECT id FROM GenericVulnerability WHERE name = 'Permissive Regular Expression');
SET @generic_vulnerability_null_byte_interaction_error_poison_null_byte_id := (SELECT id FROM GenericVulnerability WHERE name = 'Null Byte Interaction Error (Poison Null Byte)');
SET @generic_vulnerability_dynamic_variable_evaluation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Dynamic Variable Evaluation');
SET @generic_vulnerability_function_call_with_incorrectly_specified_arguments_id := (SELECT id FROM GenericVulnerability WHERE name = 'Function Call with Incorrectly Specified Arguments');
SET @generic_vulnerability_weaknesses_in_owasp_top_ten_2007_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses in OWASP Top Ten (2007)');
SET @generic_vulnerability_weaknesses_examined_by_samate_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses Examined by SAMATE');
SET @generic_vulnerability_resource_specific_weaknesses_id := (SELECT id FROM GenericVulnerability WHERE name = 'Resource-specific Weaknesses');
SET @generic_vulnerability_weaknesses_that_affect_files_or_directories_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses that Affect Files or Directories');
SET @generic_vulnerability_weaknesses_that_affect_memory_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses that Affect Memory');
SET @generic_vulnerability_weaknesses_that_affect_system_processes_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses that Affect System Processes');
SET @generic_vulnerability_weaknesses_used_by_nvd_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses Used by NVD');
SET @generic_vulnerability_not_failing_securely_failing_open_id := (SELECT id FROM GenericVulnerability WHERE name = 'Not Failing Securely (''Failing Open'')');
SET @generic_vulnerability_failure_to_use_economy_of_mechanism_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Use Economy of Mechanism');
SET @generic_vulnerability_failure_to_use_complete_mediation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Use Complete Mediation');
SET @generic_vulnerability_access_control_bypass_through_user_controlled_key_id := (SELECT id FROM GenericVulnerability WHERE name = 'Access Control Bypass Through User-Controlled Key');
SET @generic_vulnerability_weak_password_recovery_mechanism_for_forgotten_password_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weak Password Recovery Mechanism for Forgotten Password');
SET @generic_vulnerability_insufficient_filtering_of_file_and_other_resource_names_for_executable_content_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Filtering of File and Other Resource Names for Executable Content');
SET @generic_vulnerability_external_control_of_critical_state_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'External Control of Critical State Data');
SET @generic_vulnerability_failure_to_sanitize_data_within_xpath_expressions_xpath_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Data within XPath Expressions (''XPath injection'')');
SET @generic_vulnerability_improper_sanitization_of_http_headers_for_scripting_syntax_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Sanitization of HTTP Headers for Scripting Syntax');
SET @generic_vulnerability_overly_restrictive_account_lockout_mechanism_id := (SELECT id FROM GenericVulnerability WHERE name = 'Overly Restrictive Account Lockout Mechanism');
SET @generic_vulnerability_reliance_on_file_name_or_extension_of_externally_supplied_file_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on File Name or Extension of Externally-Supplied File');
SET @generic_vulnerability_use_of_non_canonical_url_paths_for_authorization_decisions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Non-Canonical URL Paths for Authorization Decisions');
SET @generic_vulnerability_incorrect_use_of_privileged_apis_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Use of Privileged APIs');
SET @generic_vulnerability_reliance_on_obfuscation_or_encryption_of_security_relevant_inputs_without_integrity_checking_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking');
SET @generic_vulnerability_trusting_http_permission_methods_on_the_server_side_id := (SELECT id FROM GenericVulnerability WHERE name = 'Trusting HTTP Permission Methods on the Server Side');
SET @generic_vulnerability_information_leak_through_wsdl_file_id := (SELECT id FROM GenericVulnerability WHERE name = 'Information Leak through WSDL File');
SET @generic_vulnerability_failure_to_sanitize_data_within_xquery_expressions_xquery_injection_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Sanitize Data within XQuery Expressions (''XQuery Injection'')');
SET @generic_vulnerability_insufficient_compartmentalization_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Compartmentalization');
SET @generic_vulnerability_reliance_on_a_single_factor_in_a_security_decision_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on a Single Factor in a Security Decision');
SET @generic_vulnerability_insufficient_psychological_acceptability_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Psychological Acceptability');
SET @generic_vulnerability_reliance_on_security_through_obscurity_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on Security through Obscurity');
SET @generic_vulnerability_violation_of_secure_design_principles_id := (SELECT id FROM GenericVulnerability WHERE name = 'Violation of Secure Design Principles');
SET @generic_vulnerability_weaknesses_in_software_written_in_c_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses in Software Written in C');
SET @generic_vulnerability_weaknesses_in_software_written_in_c_659_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses in Software Written in C++');
SET @generic_vulnerability_weaknesses_in_software_written_in_java_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses in Software Written in Java');
SET @generic_vulnerability_weaknesses_in_software_written_in_php_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses in Software Written in PHP');
SET @generic_vulnerability_insufficient_synchronization_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Synchronization');
SET @generic_vulnerability_use_of_a_non_reentrant_function_in_an_unsynchronized_context_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of a Non-reentrant Function in an Unsynchronized Context');
SET @generic_vulnerability_improper_control_of_a_resource_through_its_lifetime_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Control of a Resource Through its Lifetime');
SET @generic_vulnerability_improper_initialization_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Initialization');
SET @generic_vulnerability_operation_on_resource_in_wrong_phase_of_lifetime_id := (SELECT id FROM GenericVulnerability WHERE name = 'Operation on Resource in Wrong Phase of Lifetime');
SET @generic_vulnerability_insufficient_locking_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Locking');
SET @generic_vulnerability_exposure_of_resource_to_wrong_sphere_id := (SELECT id FROM GenericVulnerability WHERE name = 'Exposure of Resource to Wrong Sphere');
SET @generic_vulnerability_incorrect_resource_transfer_between_spheres_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Resource Transfer Between Spheres');
SET @generic_vulnerability_always_incorrect_control_flow_implementation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Always-Incorrect Control Flow Implementation');
SET @generic_vulnerability_lack_of_administrator_control_over_security_id := (SELECT id FROM GenericVulnerability WHERE name = 'Lack of Administrator Control over Security');
SET @generic_vulnerability_operation_on_a_resource_after_expiration_or_release_id := (SELECT id FROM GenericVulnerability WHERE name = 'Operation on a Resource after Expiration or Release');
SET @generic_vulnerability_external_influence_of_sphere_definition_id := (SELECT id FROM GenericVulnerability WHERE name = 'External Influence of Sphere Definition');
SET @generic_vulnerability_uncontrolled_recursion_id := (SELECT id FROM GenericVulnerability WHERE name = 'Uncontrolled Recursion');
SET @generic_vulnerability_duplicate_operations_on_resource_id := (SELECT id FROM GenericVulnerability WHERE name = 'Duplicate Operations on Resource');
SET @generic_vulnerability_use_of_potentially_dangerous_function_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Potentially Dangerous Function');
SET @generic_vulnerability_weakness_base_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weakness Base Elements');
SET @generic_vulnerability_composites_id := (SELECT id FROM GenericVulnerability WHERE name = 'Composites');
SET @generic_vulnerability_chain_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Chain Elements');
SET @generic_vulnerability_integer_overflow_to_buffer_overflow_id := (SELECT id FROM GenericVulnerability WHERE name = 'Integer Overflow to Buffer Overflow');
SET @generic_vulnerability_incorrect_conversion_between_numeric_types_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Conversion between Numeric Types');
SET @generic_vulnerability_incorrect_calculation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Calculation');
SET @generic_vulnerability_function_call_with_incorrect_order_of_arguments_id := (SELECT id FROM GenericVulnerability WHERE name = 'Function Call With Incorrect Order of Arguments');
SET @generic_vulnerability_failure_to_provide_specified_functionality_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Provide Specified Functionality');
SET @generic_vulnerability_function_call_with_incorrect_number_of_arguments_id := (SELECT id FROM GenericVulnerability WHERE name = 'Function Call With Incorrect Number of Arguments');
SET @generic_vulnerability_function_call_with_incorrect_argument_type_id := (SELECT id FROM GenericVulnerability WHERE name = 'Function Call With Incorrect Argument Type');
SET @generic_vulnerability_function_call_with_incorrectly_specified_argument_value_id := (SELECT id FROM GenericVulnerability WHERE name = 'Function Call With Incorrectly Specified Argument Value');
SET @generic_vulnerability_function_call_with_incorrect_variable_or_reference_as_argument_id := (SELECT id FROM GenericVulnerability WHERE name = 'Function Call With Incorrect Variable or Reference as Argument');
SET @generic_vulnerability_permission_race_condition_during_resource_copy_id := (SELECT id FROM GenericVulnerability WHERE name = 'Permission Race Condition During Resource Copy');
SET @generic_vulnerability_unchecked_return_value_to_null_pointer_dereference_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unchecked Return Value to NULL Pointer Dereference');
SET @generic_vulnerability_insufficient_control_flow_management_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Control Flow Management');
SET @generic_vulnerability_incomplete_blacklist_to_cross_site_scripting_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incomplete Blacklist to Cross-Site Scripting');
SET @generic_vulnerability_protection_mechanism_failure_id := (SELECT id FROM GenericVulnerability WHERE name = 'Protection Mechanism Failure');
SET @generic_vulnerability_use_of_multiple_resources_with_duplicate_identifier_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Multiple Resources with Duplicate Identifier');
SET @generic_vulnerability_use_of_low_level_functionality_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Low-Level Functionality');
SET @generic_vulnerability_incorrect_behavior_order_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Behavior Order');
SET @generic_vulnerability_insufficient_comparison_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Comparison');
SET @generic_vulnerability_redirect_without_exit_id := (SELECT id FROM GenericVulnerability WHERE name = 'Redirect Without Exit');
SET @generic_vulnerability_development_concepts_id := (SELECT id FROM GenericVulnerability WHERE name = 'Development Concepts');
SET @generic_vulnerability_seven_pernicious_kingdoms_id := (SELECT id FROM GenericVulnerability WHERE name = 'Seven Pernicious Kingdoms');
SET @generic_vulnerability_weaknesses_introduced_during_design_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses Introduced During Design');
SET @generic_vulnerability_weaknesses_introduced_during_implementation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses Introduced During Implementation');
SET @generic_vulnerability_failure_to_handle_exceptional_conditions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Failure to Handle Exceptional Conditions');
SET @generic_vulnerability_incorrect_type_conversion_or_cast_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Type Conversion or Cast');
SET @generic_vulnerability_incorrect_control_flow_scoping_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Control Flow Scoping');
SET @generic_vulnerability_use_of_incorrectly_resolved_name_or_reference_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Incorrectly-Resolved Name or Reference');
SET @generic_vulnerability_improper_enforcement_of_message_or_data_structure_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Enforcement of Message or Data Structure');
SET @generic_vulnerability_incorrect_ownership_assignment_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Ownership Assignment');
SET @generic_vulnerability_named_chains_id := (SELECT id FROM GenericVulnerability WHERE name = 'Named Chains');
SET @generic_vulnerability_coding_standards_violation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Coding Standards Violation');
SET @generic_vulnerability_weaknesses_in_owasp_top_ten_2004_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses in OWASP Top Ten (2004)');
SET @generic_vulnerability_owasp_top_ten_2007_category_a1_cross_site_scripting_xss_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A1 - Cross Site Scripting (XSS)');
SET @generic_vulnerability_owasp_top_ten_2007_category_a2_injection_flaws_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A2 - Injection Flaws');
SET @generic_vulnerability_owasp_top_ten_2007_category_a3_malicious_file_execution_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A3 - Malicious File Execution');
SET @generic_vulnerability_owasp_top_ten_2007_category_a4_insecure_direct_object_reference_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A4 - Insecure Direct Object Reference');
SET @generic_vulnerability_owasp_top_ten_2007_category_a5_cross_site_request_forgery_csrf_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A5 - Cross Site Request Forgery (CSRF)');
SET @generic_vulnerability_owasp_top_ten_2007_category_a6_information_leakage_and_improper_error_handling_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A6 - Information Leakage and Improper Error Handling');
SET @generic_vulnerability_owasp_top_ten_2007_category_a7_broken_authentication_and_session_management_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A7 - Broken Authentication and Session Management');
SET @generic_vulnerability_owasp_top_ten_2007_category_a8_insecure_cryptographic_storage_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A8 - Insecure Cryptographic Storage');
SET @generic_vulnerability_owasp_top_ten_2007_category_a9_insecure_communications_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A9 - Insecure Communications');
SET @generic_vulnerability_owasp_top_ten_2007_category_a10_failure_to_restrict_url_access_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2007 Category A10 - Failure to Restrict URL Access');
SET @generic_vulnerability_owasp_top_ten_2004_category_a1_unvalidated_input_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A1 - Unvalidated Input');
SET @generic_vulnerability_owasp_top_ten_2004_category_a2_broken_access_control_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A2 - Broken Access Control');
SET @generic_vulnerability_owasp_top_ten_2004_category_a3_broken_authentication_and_session_management_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A3 - Broken Authentication and Session Management');
SET @generic_vulnerability_owasp_top_ten_2004_category_a4_cross_site_scripting_xss_flaws_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A4 - Cross-Site Scripting (XSS) Flaws');
SET @generic_vulnerability_owasp_top_ten_2004_category_a5_buffer_overflows_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A5 - Buffer Overflows');
SET @generic_vulnerability_owasp_top_ten_2004_category_a6_injection_flaws_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A6 - Injection Flaws');
SET @generic_vulnerability_owasp_top_ten_2004_category_a7_improper_error_handling_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A7 - Improper Error Handling');
SET @generic_vulnerability_owasp_top_ten_2004_category_a8_insecure_storage_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A8 - Insecure Storage');
SET @generic_vulnerability_owasp_top_ten_2004_category_a9_denial_of_service_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A9 - Denial of Service');
SET @generic_vulnerability_owasp_top_ten_2004_category_a10_insecure_configuration_management_id := (SELECT id FROM GenericVulnerability WHERE name = 'OWASP Top Ten 2004 Category A10 - Insecure Configuration Management');
SET @generic_vulnerability_incorrect_permission_assignment_for_critical_resource_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Permission Assignment for Critical Resource');
SET @generic_vulnerability_compiler_optimization_removal_or_modification_of_security_critical_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Compiler Optimization Removal or Modification of Security-critical Code');
SET @generic_vulnerability_weaknesses_addressed_by_the_cert_c_secure_coding_standard_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses Addressed by the CERT C Secure Coding Standard');
SET @generic_vulnerability_cert_c_secure_coding_section_01_preprocessor_pre_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 01 - Preprocessor (PRE)');
SET @generic_vulnerability_cert_c_secure_coding_section_02_declarations_and_initialization_dcl_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 02 - Declarations and Initialization (DCL)');
SET @generic_vulnerability_cert_c_secure_coding_section_03_expressions_exp_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 03 - Expressions (EXP)');
SET @generic_vulnerability_cert_c_secure_coding_section_04_integers_int_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 04 - Integers (INT)');
SET @generic_vulnerability_cert_c_secure_coding_section_05_floating_point_flp_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 05 - Floating Point (FLP)');
SET @generic_vulnerability_cert_c_secure_coding_section_06_arrays_arr_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 06 - Arrays (ARR)');
SET @generic_vulnerability_cert_c_secure_coding_section_07_characters_and_strings_str_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 07 - Characters and Strings (STR)');
SET @generic_vulnerability_cert_c_secure_coding_section_08_memory_management_mem_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 08 - Memory Management (MEM)');
SET @generic_vulnerability_cert_c_secure_coding_section_09_input_output_fio_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 09 - Input Output (FIO)');
SET @generic_vulnerability_cert_c_secure_coding_section_10_environment_env_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 10 - Environment (ENV)');
SET @generic_vulnerability_cert_c_secure_coding_section_11_signals_sig_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 11 - Signals (SIG)');
SET @generic_vulnerability_cert_c_secure_coding_section_12_error_handling_err_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 12 - Error Handling (ERR)');
SET @generic_vulnerability_cert_c_secure_coding_section_49_miscellaneous_msc_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 49 - Miscellaneous (MSC)');
SET @generic_vulnerability_cert_c_secure_coding_section_50_posix_pos_id := (SELECT id FROM GenericVulnerability WHERE name = 'CERT C Secure Coding Section 50 - POSIX (POS)');
SET @generic_vulnerability_exposed_dangerous_method_or_function_id := (SELECT id FROM GenericVulnerability WHERE name = 'Exposed Dangerous Method or Function');
SET @generic_vulnerability_weaknesses_in_the_2009_cwe_sans_top_25_most_dangerous_programming_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses in the 2009 CWE/SANS Top 25 Most Dangerous Programming Errors');
SET @generic_vulnerability_2009_top_25_insecure_interaction_between_components_id := (SELECT id FROM GenericVulnerability WHERE name = '2009 Top 25 - Insecure Interaction Between Components');
SET @generic_vulnerability_2009_top_25_risky_resource_management_id := (SELECT id FROM GenericVulnerability WHERE name = '2009 Top 25 - Risky Resource Management');
SET @generic_vulnerability_2009_top_25_porous_defenses_id := (SELECT id FROM GenericVulnerability WHERE name = '2009 Top 25 - Porous Defenses');
SET @generic_vulnerability_improper_check_for_unusual_or_exceptional_conditions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Check for Unusual or Exceptional Conditions');
SET @generic_vulnerability_improper_handling_of_exceptional_conditions_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Handling of Exceptional Conditions');
SET @generic_vulnerability_missing_custom_error_page_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Custom Error Page');
SET @generic_vulnerability_selection_of_less_secure_algorithm_during_negotiation_algorithm_downgrade_id := (SELECT id FROM GenericVulnerability WHERE name = 'Selection of Less-Secure Algorithm During Negotiation (''Algorithm Downgrade'')');
SET @generic_vulnerability_reliance_on_undefined_unspecified_or_implementation_defined_behavior_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on Undefined, Unspecified, or Implementation-Defined Behavior');
SET @generic_vulnerability_use_of_a_one_way_hash_without_a_salt_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of a One-Way Hash without a Salt');
SET @generic_vulnerability_use_of_a_one_way_hash_with_a_predictable_salt_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of a One-Way Hash with a Predictable Salt');
SET @generic_vulnerability_free_of_pointer_not_at_start_of_buffer_id := (SELECT id FROM GenericVulnerability WHERE name = 'Free of Pointer not at Start of Buffer');
SET @generic_vulnerability_mismatched_memory_management_routines_id := (SELECT id FROM GenericVulnerability WHERE name = 'Mismatched Memory Management Routines');
SET @generic_vulnerability_release_of_invalid_pointer_or_reference_id := (SELECT id FROM GenericVulnerability WHERE name = 'Release of Invalid Pointer or Reference');
SET @generic_vulnerability_multiple_locks_of_a_critical_resource_id := (SELECT id FROM GenericVulnerability WHERE name = 'Multiple Locks of a Critical Resource');
SET @generic_vulnerability_multiple_unlocks_of_a_critical_resource_id := (SELECT id FROM GenericVulnerability WHERE name = 'Multiple Unlocks of a Critical Resource');
SET @generic_vulnerability_critical_variable_declared_public_id := (SELECT id FROM GenericVulnerability WHERE name = 'Critical Variable Declared Public');
SET @generic_vulnerability_access_to_critical_private_variable_via_public_method_id := (SELECT id FROM GenericVulnerability WHERE name = 'Access to Critical Private Variable via Public Method');
SET @generic_vulnerability_incorrect_short_circuit_evaluation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incorrect Short Circuit Evaluation');
SET @generic_vulnerability_file_descriptor_exhaustion_id := (SELECT id FROM GenericVulnerability WHERE name = 'File Descriptor Exhaustion');
SET @generic_vulnerability_allocation_of_resources_without_limits_or_throttling_id := (SELECT id FROM GenericVulnerability WHERE name = 'Allocation of Resources Without Limits or Throttling');
SET @generic_vulnerability_missing_reference_to_active_allocated_resource_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Reference to Active Allocated Resource');
SET @generic_vulnerability_missing_release_of_resource_after_effective_lifetime_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Release of Resource after Effective Lifetime');
SET @generic_vulnerability_missing_reference_to_active_file_descriptor_or_handle_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Reference to Active File Descriptor or Handle');
SET @generic_vulnerability_allocation_of_file_descriptors_or_handles_without_limits_or_throttling_id := (SELECT id FROM GenericVulnerability WHERE name = 'Allocation of File Descriptors or Handles Without Limits or Throttling');
SET @generic_vulnerability_missing_release_of_file_descriptor_or_handle_after_effective_lifetime_id := (SELECT id FROM GenericVulnerability WHERE name = 'Missing Release of File Descriptor or Handle after Effective Lifetime');
SET @generic_vulnerability_unrestricted_recursive_entity_references_in_dtds_xml_bomb_id := (SELECT id FROM GenericVulnerability WHERE name = 'Unrestricted Recursive Entity References in DTDs (''XML Bomb'')');
SET @generic_vulnerability_regular_expression_without_anchors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Regular Expression without Anchors');
SET @generic_vulnerability_insufficient_logging_id := (SELECT id FROM GenericVulnerability WHERE name = 'Insufficient Logging');
SET @generic_vulnerability_logging_of_excessive_data_id := (SELECT id FROM GenericVulnerability WHERE name = 'Logging of Excessive Data');
SET @generic_vulnerability_use_of_rsa_algorithm_without_oaep_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of RSA Algorithm without OAEP');
SET @generic_vulnerability_improper_address_validation_in_ioctl_with_method_neither_i_o_control_code_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code');
SET @generic_vulnerability_exposed_ioctl_with_insufficient_access_control_id := (SELECT id FROM GenericVulnerability WHERE name = 'Exposed IOCTL with Insufficient Access Control');
SET @generic_vulnerability_operator_precedence_logic_error_id := (SELECT id FROM GenericVulnerability WHERE name = 'Operator Precedence Logic Error');
SET @generic_vulnerability_reliance_on_cookies_without_validation_and_integrity_checking_in_a_security_decision_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on Cookies without Validation and Integrity Checking in a Security Decision');
SET @generic_vulnerability_use_of_path_manipulation_function_without_maximum_sized_buffer_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Path Manipulation Function without Maximum-sized Buffer');
SET @generic_vulnerability_access_of_memory_location_before_start_of_buffer_id := (SELECT id FROM GenericVulnerability WHERE name = 'Access of Memory Location Before Start of Buffer');
SET @generic_vulnerability_out_of_bounds_write_id := (SELECT id FROM GenericVulnerability WHERE name = 'Out-of-bounds Write');
SET @generic_vulnerability_access_of_memory_location_after_end_of_buffer_id := (SELECT id FROM GenericVulnerability WHERE name = 'Access of Memory Location After End of Buffer');
SET @generic_vulnerability_uncontrolled_memory_allocation_id := (SELECT id FROM GenericVulnerability WHERE name = 'Uncontrolled Memory Allocation');
SET @generic_vulnerability_improper_filtering_of_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Filtering of Special Elements');
SET @generic_vulnerability_incomplete_filtering_of_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incomplete Filtering of Special Elements');
SET @generic_vulnerability_incomplete_filtering_of_one_or_more_instances_of_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incomplete Filtering of One or More Instances of Special Elements');
SET @generic_vulnerability_only_filtering_one_instance_of_a_special_element_id := (SELECT id FROM GenericVulnerability WHERE name = 'Only Filtering One Instance of a Special Element');
SET @generic_vulnerability_incomplete_filtering_of_multiple_instances_of_special_elements_id := (SELECT id FROM GenericVulnerability WHERE name = 'Incomplete Filtering of Multiple Instances of Special Elements');
SET @generic_vulnerability_only_filtering_special_elements_at_a_specified_location_id := (SELECT id FROM GenericVulnerability WHERE name = 'Only Filtering Special Elements at a Specified Location');
SET @generic_vulnerability_only_filtering_special_elements_relative_to_a_marker_id := (SELECT id FROM GenericVulnerability WHERE name = 'Only Filtering Special Elements Relative to a Marker');
SET @generic_vulnerability_only_filtering_special_elements_at_an_absolute_position_id := (SELECT id FROM GenericVulnerability WHERE name = 'Only Filtering Special Elements at an Absolute Position');
SET @generic_vulnerability_use_of_hard_coded_credentials_id := (SELECT id FROM GenericVulnerability WHERE name = 'Use of Hard-coded Credentials');
SET @generic_vulnerability_improper_control_of_interaction_frequency_id := (SELECT id FROM GenericVulnerability WHERE name = 'Improper Control of Interaction Frequency');
SET @generic_vulnerability_weaknesses_in_the_2010_cwe_sans_top_25_most_dangerous_programming_errors_id := (SELECT id FROM GenericVulnerability WHERE name = 'Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors');
SET @generic_vulnerability_2010_top_25_insecure_interaction_between_components_id := (SELECT id FROM GenericVulnerability WHERE name = '2010 Top 25 - Insecure Interaction Between Components');
SET @generic_vulnerability_2010_top_25_risky_resource_management_id := (SELECT id FROM GenericVulnerability WHERE name = '2010 Top 25 - Risky Resource Management');
SET @generic_vulnerability_2010_top_25_porous_defenses_id := (SELECT id FROM GenericVulnerability WHERE name = '2010 Top 25 - Porous Defenses');
SET @generic_vulnerability_guessable_captcha_id := (SELECT id FROM GenericVulnerability WHERE name = 'Guessable CAPTCHA');
SET @generic_vulnerability_buffer_access_with_incorrect_length_value_id := (SELECT id FROM GenericVulnerability WHERE name = 'Buffer Access with Incorrect Length Value');
SET @generic_vulnerability_buffer_access_using_size_of_source_buffer_id := (SELECT id FROM GenericVulnerability WHERE name = 'Buffer Access Using Size of Source Buffer');
SET @generic_vulnerability_reliance_on_untrusted_inputs_in_a_security_decision_id := (SELECT id FROM GenericVulnerability WHERE name = 'Reliance on Untrusted Inputs in a Security Decision');
SET @generic_vulnerability_2010_top_25_weaknesses_on_the_cusp_id := (SELECT id FROM GenericVulnerability WHERE name = '2010 Top 25 - Weaknesses On the Cusp');
SET @generic_vulnerability_research_concepts_id := (SELECT id FROM GenericVulnerability WHERE name = 'Research Concepts');
SET @generic_vulnerability_comprehensive_cwe_dictionary_id := (SELECT id FROM GenericVulnerability WHERE name = 'Comprehensive CWE Dictionary');


-- ------------------------------------
-- INSERT CHANNEL VULNERABILITIES------
-- ------------------------------------

-- Cat.NET
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL Injection', 'ACESEC01', @cat_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Process Command Execution', 'ACESEC02', @cat_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('File Canonicalization', 'ACESEC03', @cat_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exception Information', 'ACESEC04', @cat_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross-Site Scripting', 'ACESEC05', @cat_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Redirection to User Controlled Site', 'ACESEC06', @cat_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('XPath Injection', 'ACESEC07', @cat_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('LDAP Injection', 'ACESEC08', @cat_net_channel_id);

-- AppScan (VERY INCOMPLETE) upload
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache Multiviews Attack', 'ApacheMultiview', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Application Test Script Detected', 'ApplicationTestScriptDetected', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Compressed Directory Found', 'CompressedDirectoryFound', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Dblog CMS Open Source Database Retrieval', 'DblogCMSOpenSourceDatabaseRetrieval', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Direct Access to Administration Pages', 'DirectAccesstoAdministrationPages', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory Listing Pattern Found', 'GD_DirListing', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Email Address Pattern Found', 'GD_EmailAddress', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('IIS Default Installation Page Pattern Found', 'GD_IISDefaultPage', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Internal IP Disclosure Pattern Found', 'GD_InternalIP', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Possible Server Path Disclosure Pattern Found', 'GD_PathDisclosure', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Social Security Number Pattern Found', 'GD_SSN', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Web Application Source Code Disclosure Pattern Found', 'GD_SourceCodeDisclosure', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Flash parameter AllowScriptAccess was set to always', 'GD_flashAllowScriptAccessSetToAlways', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Query Parameter in SSL Request', 'GETParamOverSSL', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Database Error Pattern Found', 'GV_SQLErr', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Stored Cross-Site Scripting', 'GV_StoredXSS', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Google Sitemap File Detected', 'GoogleSitemapFileDetected', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('IBM WebSphere Application Server File Disclosure', 'IBMTivoliWorkloadSchedulerWASFileDisclosure', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Invision Power Board index.php Cross-Site Scripting', 'IPBXSS', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Login Error Messages Credential Enumeration', 'LoginErrMsgPossibleBruteForce', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Microsoft IIS Missing Host Header Information Leakage', 'MSIISMissingHostHeaderInformationLeakage', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Macromedia Dreamweaver Remote Database Scripts Information Leakage', 'MacromediaDreamweaverRemoteDatabaseScriptsInformationLeakage', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Microsoft ASP.NET Debugging Enabled', 'MicrosoftASPNETDebuggingEnabled', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MusicBox Multiple Cross-Site Scripting', 'MusicBoxMultipleXSS', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Oracle Application Server Cross-Site Scripting', 'OracleAppSrvXSS', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Oracle Log File Information Disclosure', 'OracleLogFileInformationDisclosure', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path disclosure in various PHP-based applications', 'PHPBasedPathDisc', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Potential File Upload', 'PotentialFileUpload', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Potential Order Information Found', 'PotentialOrderInformationFound', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Potential Registration Information Found', 'PotentialRegistrationInformationFound', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SSL Certificate Domain Name Mismatch', 'SSL_CertWithBadCN', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Scry index.php Path Traversal', 'ScryPathTraversal', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Session Fixation', 'SessionFixation', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Snitz Forums 2000 Database Retrieval', 'SnitzForums2000DatabaseRetrieval', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL Injection using DECLARE, CAST and EXEC', 'SqlInjectionDeclareCast', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('WebStudio Multiple Cross-Site Scripting', 'WebStudioMultipleXSS', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('WordPress Pool Theme Cross-Site Scripting in Path', 'WordPressPoolThemeXSSinPath', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('AHG EZshopper File Download', 'attAHGEZshopperFileDownloadVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Inadequate Account Lockout', 'attAccountLockout', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Account Manager CGI Remote Password Change', 'attAccountManagerCGIRemotePasswordChangeVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Alibaba Web Server File Download and Remote Command Execution', 'attAlibabaWebServerMultipleVulnerabilities', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Allaire JRun 2.3.X Sample Source Disclosure', 'attAllaireJRunShowSource', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Alternate Version of File Detected', 'attAltVerDetected', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache::ASP Module Source.asp File Creation', 'attApacheASPModuleSourceaspFileCreationVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache Web Server Directory Listing', 'attApacheDirListing', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('AuctionWeaver CGI Remote Shell Execution', 'attAuctionWeaverCGIRemoteShellExecutionVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Banner Rotating 01 Privilege Escalation', 'attBannerRotating01ExposedPasswordFile', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Basilix Webmail Access Control Bypass', 'attBasiliXWebmailAccessControlBypass', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('BigBrother Remote File Download', 'attBigBrotherRemoteFileDownloadVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Blind SQL Injection', 'attBlindSqlInjectionStrings', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Bugzilla Remote Command Execution', 'attBugzillaRemoteCommandExecutionVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Bytes Interactive Shopper.cgi Shopping Cart Directory Traversal', 'attBytesInteractiveshoppercgiShoppingCartDirectoryTraversalVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CGIForum File Download', 'attCGIForumFileDownloadVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CNCTek BizDB Search Script Remote Shell Command Execution', 'attCNCTekBizDBSearchScriptAllowsARemoteAttackerToRunShellCommands', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cacheable Login Page Found', 'attCachedLogin', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cacheable SSL Page Found', 'attCachedSSL', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cart32 Information Disclosure, Privilege Escalation and Denial of Service', 'attCart32MultipleVulnerabilities', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Parameter System Call Code Injection', 'attCodeInjectionInSystemCall', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Conservatives Scripts Remote Shell Execution', 'attConservativesScriptsVulnerableToRemoteShellExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross-Site Request Forgery', 'attCrossSiteRequestForgery', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross-Site Scripting', 'attCrossSiteScripting', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DCForum File Download', 'attDCFuromIsVulnerableToFileDownloading', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DNewsWeb Buffer Overflow and Remote Command Execution', 'attDNewsWebBufferOverflowEnablesRunningExecutablesOnTheServer', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insecure HTTP Methods Enabled', 'attDirOptions', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Hidden Directory Detected', 'attDirectoryFound', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory Listing', 'attDirectoryGuessing', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PCCS MySQL Database Admin Tool Administrator Password Disclosure', 'attDisclosureOfAdministratorPasswordInPCCSMySQLDatabaseAdminTool', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EWS (Excite for Web Servers) Privilege Escalation', 'attEWSForWeb11AdminRights', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Extropia Webstore File Download', 'attEXtropiaWebStoreFileDownloadVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Email Address in Hidden Parameter', 'attEmailParameter', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Extropia BBS Forum File Download', 'attExtropiasBBSForumIsVulnerableToFileDownloadingAttack', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Extropia WebBanner Remote Command Execution', 'attExtropiasWebBannerRemoteCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('F5 Big-IP Load Balancer File Download', 'attF5BigIPLoadBalancerIsVulnerableToFileDownloading', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windows File Parameter Alteration', 'attFileWin32', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('FormHandler.cgi File Download', 'attFormHandlercgiFileDownload', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('FormNow CGI Shell Command Execution', 'attFormNowCGIIsVulnerableToShellCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Microsoft FrontPage Configuration Information Leakage', 'attFrontPageConfigurationInformationLeakage', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Microsoft FrontPage Server Extensions Vital Information Leakage', 'attFrontpageServerExtensionsVitalInformationLeakage', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Gbook.cgi Remote Command Execution', 'attGBookcgiRemoteCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('GWScripts News Publisher Access Control Bypass', 'attGWScriptsNewsPublisherAccessControlBypass', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('George Buryan Counter CGI Remote Command Execution', 'attGeorgeBuryansCounterCGIRemoteCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Gossamer Threads DBMan CGI Sensitive Information Disclosure', 'attGossamerThreadsDBManCGIRevealsSensitiveInformation', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ht://Dig Search Engine Installation Path Disclosure', 'attHtDigSearchEngineRevealsInstallationPath', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Htgrep File Contents Retrieval', 'attHtgrepFileContentsRetrievalVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Encryption Not Enforced', 'attHttpsToHttp', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Hyperseek 2000 File Download', 'attHyperseek2000FileDownloadVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('IBM WebSphere Installation Directory Absolute Path Disclosure', 'attIBMWebSphereRevealsTheAbsolutePathToItsInstallationDirectory', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Microsoft FrontPage Htimage.exe Command Execution and Path Disclosure', 'attIISHtimage', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Include File Download', 'attINCDownload', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('IPSwitch Imail Imonitor Denial of Service', 'attIPSwitchImailImonitorDenialOfServiceVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('iScouter PHP Web Portal MySQL Password Retrieval', 'attIScouterPHPWebPortalMySQLPasswordRetrieval', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Ibrow Newsdesk.cgi Traversal', 'attIbrowNewsdeskcgiTraversalVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Infonautic Getdoc.cgi Unauthorized Access To Documents', 'attInfonauticsGetdoccgiMayAllowUnauthorizedAccessToDocuments', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Client-Side (JavaScript) Cookie References', 'attJSCookie', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Macromedia JRun Source Code Disclosure', 'attJrunAppendSourceCode', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Lars Ellingsen Guestbook System Remote Command Execution', 'attLarsEllingsensGuestbookSystemIsVulnerableToRemoteCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Link Injection (facilitates Cross-Site Request Forgery)', 'attLinkInjection', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unencrypted Login Request', 'attLoginNotOverSSL', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Lyris List Manager Access Control Bypass', 'attLyrisListManagerAccessControlBypassVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL Injection File Write (requires user verification)', 'attMSSQLInjectionProbe', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MailForm.pl File Download', 'attMailFormplFileDownloadVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MailMan Webmail Command Execution', 'attMailManWebmailCommandExecutionVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MailStudio 2000 File Download and Remote Execution', 'attMailStudio2000FileDownloadRemoteVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mailfile.cgi Arbitrary File Download', 'attMailfilecgiVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mailto.cgi Remote Command Execution', 'attMailtocgiRemoteCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Matt Kruse Calendar Script Remote Shell Command Execution', 'attMattKruseCalendarScriptVulnerableToRemoteShellCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Matt Wright Guestbook.pl Server Side Includes Execution', 'attMattWrightsGuestbookplCanBeUsedToExecuteServerSideIncludes', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Moreover CachedFeed.cgi File Download', 'attMoreoversCachedFeedcgiFileDownloadVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MultiHTML Poison Null Byte Any File Download', 'attMultiHTMLPoisonNullByteVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Talentsoft WebPlus Server Source Code Disclosure and Information Leakage', 'attMultipleSecurityBreachesInTalentsoftWebPlusApplicationServer', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Multiple Vendor test-cgi Sensitive Information Disclosure', 'attMultipleVendorTestcgiVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Netauth Directory Traversal', 'attNetauthDirectoryTraversalVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('News Update Access Control Bypass', 'attNewsUpdateAccessControlBypass', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Nortel Contivity VPN Switch Cgiproc File Download', 'attNortelContivityVPNSwitchCgiprocFileDownloadVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('nph-maillist.pl Remote Command Execution Vulnerability', 'attNphmaillistplRemoteCommandExecutionVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Oracle Application Server PL/SQL Unauthorized SQL Query Execution', 'attOwaUtilSQLexecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PHF CGI Remote Command Execution', 'attPHFCGIRemoteCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Error Page Path Disclosure', 'attPathRetrievalFromNonExistentFiles', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Phorum PHP Forum Administration Package Any File Download and Defacement', 'attPhorumPHPForumAdministrationPackageMultipleVulnerabilities', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('phpPhotoAlbum File Download', 'attPhpPhotoAlbumVulnerableToFileDownloadVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Microsoft FrontPage Extensions Site Defacement', 'attPossibilityForWebPageDefacementThroughPermissionsProblemsWithFrontPageExtensions', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Postaci Webmail SQL Query Modification', 'attPostaciWebmailIsVulnerableToSQLQueryModification', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Powerscripts PlusMail Password Change', 'attPowerscriptsPlusMailPasswordChangeVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('QuikStore Shopping Cart File Retrieval', 'attQuikStoreShoppingCartFileRetrievalVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Tektronix PhaserLink Webserver Remote Administration Authentication Bypass', 'attRemoteAdministrationAuthenticationBypassInTektronixPhaserLinkWebserver', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Secure Attribute in Encrypted Session (SSL) Cookie', 'attRespCookieNotSecureSSL', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permanent Cookie Contains Sensitive Session Information', 'attRespCookieSessionNotRam', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Robots.txt File Web Site Structure Exposure', 'attRobotsTxt', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SGI IRIX Online Documentation Browsing Remote Command Execution', 'attSGIIRIXOnlineDocumentationBrowsingIsVulnerableToRemoteCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Temporary File Download', 'attScriptDownload', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('HTML Comments Sensitive Information Disclosure', 'attSensitiveInHtmlComments', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unencrypted Sensitive Data', 'attSensitiveParamNotOverSSL', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windmail.exe Shell Command Execution', 'attShellCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Shell Interpreter Scripts Arbitrary Commands Execution', 'attShellinScriptsDir', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Shop.cgi Shopping Cart Directory Traversal', 'attShopcgiShoppingCartDirectoryTraversalVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sojourn.cgi Directory Traversal', 'attSojourncgiDirectoryTraversalVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL Injection', 'attSqlInjectionChecks', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Statistics Server LiveStats ss.cfg Denial of Service', 'attStatisticsServerLiveStatsSscfgDenialOfService', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Subscribe Me Mailing List Manager Privilege Escalation', 'attSubscribeMeMailingListManagerPasswordVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Finger Server CGI  Shell Command Execution', 'attTheFingerServerCGIIsVulnerableToShellCommandExecution', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Tomcat Snoop Servlet Information Leakage', 'attTomcatSnoopServletLeaksInformation', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Application Error', 'attUndefinedState', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UtilMind Maillist.cgi Remote Command Execution', 'attUtilMindMaillistcgi', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unencrypted __VIEWSTATE Parameter', 'attViewStateNotEncrypted', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('WWWboard.pl Password Retrieval', 'attWWWboardplPasswordRetrievalVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Webevent Admin Rights by Application Flow Subversion', 'attWebEventAdminRightsByApplicationFlowSubversion', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Webteacher Webdata File Contents Retrieval', 'attWebteachersWebdataFileContentsRetrievalVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Whois_raw.cgi Remote Command Execution', 'attWhoisrawcgiRemoteCommandExecutionVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Xitami Web Server Information Leakage', 'attXitamiWebServerInformationLeakage', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('YaBB Any File Download', 'attYaBBSecurityProblemAllowsDownloadingOfAnyFile', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PHP phpinfo.php Information Disclosure', 'attZendPHPPhpinfophpInformationDisclosureVulnerability', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass Using SQL Injection', 'authBypassSQLInjection', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Session Identifier Not Updated', 'constTransient', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ColdFusion MX Probe.cfm Path Disclosure', 'cwvProbeCfmPathDisc', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('TRACE and TRACK HTTP Methods Enabled', 'cwvTraceMethod', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Web.config File Configuration Settings Leakage', 'cwvWebConfig', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Host allows flash access from any domain', 'flashAllowsAccessFromAnyDomain', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('lucidCMS index.php Cross-Site Scripting', 'lucidCMSXSS', @appscan_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Phishing Through Frames', 'phishingInFrames', @appscan_channel_id);

-- Netsparker
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[High Possibility] SQL Injection', 'HighlyPossibleSqlInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Low Possibility] SQL Injection', 'PossibleSqlInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL Injection', 'ConfirmedSQLInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] Blind SQL Injection', 'PossibleBlindSQLInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Blind SQL Injection', 'ConfirmedBlindSQLInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permanent Cross-site Scripting (XSS)', 'PermanentXSS', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permanent Cross-site Scripting (XSS)', 'LowPossibilityPermanentXSS', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Basic Authorisation over Clear Text', 'ClearTextBasicAuth', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross-site Scripting', 'XSS', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] Cross-site Scripting', 'PossibleXSS', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Ineffective Filtering', 'InactiveXSS', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Internal Server Error', 'InternalServerError', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Auto Complete Enabled', 'AutoCompleteEnabled', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Forbidden Resource', 'ForbiddenResource', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('NTLM Authorization Required', 'NTLMAuthrizationRequired', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Basic Authorization Required', 'BasicAuthorisationRequired', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Digest Authorization Required', 'DigestAuthrizationRequired', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('File Upload Functionality Identified', 'FileUploadFound', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Password Transmitted Over HTTP', 'PasswordOverHTTP', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Critical Form Served Over HTTP', 'PasswordFormOverHTTP', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] Internal IP Address Leakage', 'InternalIPLeakage', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cookie Not Marked As Secure', 'CookieNotMarkedAsSecure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cookie Not Marked As HttpOnly', 'CookieNotMarkedAsHttpOnly', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Boolean Based SQL Injection', 'ConfirmedBooleanSQLInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Low Possibility] Boolean Based SQL Injection ', 'PossibleBooleanSQLInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory Identified', 'DirectoryFound', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('HTTP Header Injection', 'HeaderInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Command Injection', 'CommandInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MySQL 5 Database Identified', 'MySQL5Identified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MySQL 4 Database Identified', 'MySQL4Idenfitied', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MySQL Database Identified', 'MySQLIdenfitied', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Microsoft SQL Server Identified', 'MSSQLIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ORACLE Server Identified', 'ORACLEIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Postgres Server Identified', 'PostgreSQLIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Database User Has Admin Privileges', 'DBConnectedAsAdmin', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[High Possibility] Local File Inclusion', 'HighPossibilityLFI', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Local File Inclusion', 'LFI', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] Local File Inclusion', 'PossibleLocalFileInclusion', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory Listing (Apache)', 'ApacheDirectoryListing', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache Web Server Identified', 'ApacheIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Version Disclosure', 'ASPNETVersionDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory Listing (IIS)', 'IISDirectoryListing', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('IIS Identified', 'IISIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory Listing (Tomcat)', 'TomcatDirectoryListing', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] PHP Source Code Disclosure', 'PHPSourceCodeDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] Generic Source Code Disclosure', 'GenericSourceCodeDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] ASP.NET Source Code Disclosure', 'ASPNETSourceCodeDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] ASP or JSP Source Code Disclosure', 'ASPorJSPSourceCodeDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] Internal Path Leakage (Windows)', 'PossibleInternalWindowsPathLeakage', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Possible] Internal Path Leakage (*nix)', 'PossibleInternalUnixPathLeakage', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MS Office Information Disclosure', 'MSOfficeDocumentInformationDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('phpinfo() Information Disclosure', 'PHPInfoIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('E-mail Address Disclosure', 'EmailDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache Version Disclosure', 'ApacheVersion', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Tomcat Version Disclosure', 'TomcatVersion', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PHP Version Disclosure', 'PHPVersion', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('IIS Version Disclosure', 'IISVersion', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache Coyote Version Disclosure', 'ApacheCoyoteVersion', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ORACLE Application Server Version Disclosure', 'ORACLEApplicationServerVersion', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OpenSSL Version Disclosure', 'OpenSSLVersionDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache Module Version Disclosure', 'ApacheModuleVersionDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Perl Version Disclosure', 'PerlVersionDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Frontpage Version Disclosure', 'FrontPageVersionDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Python Version Disclosure', 'PythonVersionDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Identified', 'ASPNETIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sitemap Identified', 'SitemapIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Crossdomain.xml Identified', 'CrossDomainXML', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Open Policy Crossdomain.xml Identified', 'OpenCrossDomainXML', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Robots.txt Identified', 'RobotsIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache Server-Status Found', 'ApacheServerStatus', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache Server-Info Found', 'ApacheServerInfo', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[High Possibility] Boolean SQL Injection', 'HighPossibleBooleanSQLInjection', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Database Error Message', 'DatabaseErrorMessages', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Programming Error Message', 'ProgrammingErrorMessages', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apache MultiViews Enabled', 'ApacheMultiViewsEnabled', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Backup File Found', 'BackupFileFound', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Backup Source Code Found', 'BackupSourceCodeFound', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('TRACE / TRACK Identified', 'TRACETRACKIdentified', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trace.axd File Found', 'TraceaxdFound', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Debugging Enabled', 'ASPNETDebugEnabled', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Code Execution via Local File Inclusion', 'LFICodeInclusion', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('htpasswd Disclosure', 'htpasswdDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('htaccess Disclosure', 'htaccessDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Stack Trace Disclosure', 'ASPNETStackTrace', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SVN Disclosure', 'SVNDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('GIT Disclosure', 'GITDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CVS Disclosure', 'CVSDisclosure', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Remote File Inclusion', 'RFI', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Low Possibility] Remote File Inclusion', 'LowPossibilityRFI', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('[Low Possibility] Command Injection', 'LowPossibilityCI', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('XSS via Remote File Inclusion', 'XSSviaRFI', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Remote Code Evaluation (ASP)', 'RCEASP', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Remote Code Evaluation (PHP)', 'RCEPHP', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Static Special Check', 'SpecialCase', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Special Check: Cookie Support Detection', 'SpecialCaseNoCookies', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('MAC is not Enabled in ViewState', 'ViewStateMACNotEnabled', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ViewState is not Encrypted', 'ViewStateNotEncrypted', @netsparker_net_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ViewState Pre Analyser', 'ViewStateAnalyser', @netsparker_net_channel_id);

-- Sentinel
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal', 'Path Traversal', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Remote File Inclusion', 'Remote File Inclusion', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OS Command Injection', 'OS Command Injection', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross Site Scripting', 'Cross Site Scripting', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL Injection', 'SQL Injection', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory Traversal', 'Directory Traversal', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('HTTP Response Splitting', 'HTTP Response Splitting', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('XPath Injection', 'XPath Injection', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictable Resource Location', 'Predictable Resource Location', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory Indexing', 'Directory Indexing', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('LDAP Injection', 'LDAP Injection', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OS Commanding', 'OS Commanding', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SSI Injection', 'SSI Injection', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Brute Force', 'Brute Force', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Authentication', 'Insufficient Authentication', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weak Password Recovery Validation', 'Weak Password Recovery Validation', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Credential/Session Prediction', 'Credential/Session Prediction', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Session Expiration', 'Insufficient Session Expiration', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Session Fixation', 'Session Fixation', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross Site Request Forgery', 'Cross Site Request Forgery', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leakage', 'Information Leakage', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Authorization', 'Insufficient Authorization', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Overflow', 'Buffer Overflow', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Denail of Service', 'Denail of Service', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Content Spoofing', 'Content Spoofing', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Format String Attack', 'Format String Attack', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Abuse of Functionality', 'Abuse of Functionality', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Anti-automation', 'Insufficient Anti-automation', @sentinel_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Process Validation', 'Insufficient Process Validation', @sentinel_channel_id);

-- Manual
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Location', 'Location', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Environment', 'Environment', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Technology-specific Environment Issues', 'Technology-specific Environment Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Environment Issues', 'ASP.NET Environment Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Creating Debug Binary', 'ASP.NET Misconfiguration: Creating Debug Binary', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Missing Custom Error Page', 'ASP.NET Misconfiguration: Missing Custom Error Page', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Password in Configuration File', 'ASP.NET Misconfiguration: Password in Configuration File', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Compiler Removal of Code to Clear Buffers', 'Compiler Removal of Code to Clear Buffers', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Control of System or Configuration Setting', 'External Control of System or Configuration Setting', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Configuration', 'Configuration', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Code', 'Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Source Code', 'Source Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Data Handling', 'Data Handling', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Input Validation', 'Improper Input Validation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Pathname Traversal and Equivalence Errors', 'Pathname Traversal and Equivalence Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Limitation of a Pathname to a Restricted Directory (''Path Traversal'')', 'Improper Limitation of a Pathname to a Restricted Directory (''Path Traversal'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Relative Path Traversal', 'Relative Path Traversal', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''../filedir''', 'Path Traversal: ''../filedir''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''/dir/../filename''', 'Path Traversal: ''/dir/../filename''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''\..\filename''', 'Path Traversal: ''\..\filename''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''...'' (Triple Dot)', 'Path Traversal: ''...'' (Triple Dot)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''....'' (Multiple Dot)', 'Path Traversal: ''....'' (Multiple Dot)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''....//''', 'Path Traversal: ''....//''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Absolute Path Traversal', 'Absolute Path Traversal', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''/absolute/pathname/here''', 'Path Traversal: ''/absolute/pathname/here''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''C:dirname''', 'Path Traversal: ''C:dirname''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''UNC share name'' (Windows UNC Share)', 'Path Traversal: ''UNC share name'' (Windows UNC Share)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Resolution of Path Equivalence', 'Improper Resolution of Path Equivalence', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filename.'' (Trailing Dot)', 'Path Equivalence: ''filename.'' (Trailing Dot)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filename....'' (Multiple Trailing Dot)', 'Path Equivalence: ''filename....'' (Multiple Trailing Dot)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''file.name'' (Internal Dot)', 'Path Equivalence: ''file.name'' (Internal Dot)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''file...name'' (Multiple Internal Dot)', 'Path Equivalence: ''file...name'' (Multiple Internal Dot)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filename '' (Trailing Space)', 'Path Equivalence: ''filename '' (Trailing Space)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: '' filename (Leading Space)', 'Path Equivalence: '' filename (Leading Space)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''file name'' (Internal Whitespace)', 'Path Equivalence: ''file name'' (Internal Whitespace)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filename/'' (Trailing Slash)', 'Path Equivalence: ''filename/'' (Trailing Slash)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''//multiple/leading/slash''', 'Path Equivalence: ''//multiple/leading/slash''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''/multiple//internal/slash''', 'Path Equivalence: ''/multiple//internal/slash''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''/multiple/trailing/slash//''', 'Path Equivalence: ''/multiple/trailing/slash//''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''\multiple\\internal\backslash''', 'Path Equivalence: ''\multiple\\internal\backslash''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filedir'' (Trailing Backslash)', 'Path Equivalence: ''filedir'' (Trailing Backslash)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''/./'' (Single Dot Directory)', 'Path Equivalence: ''/./'' (Single Dot Directory)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filedir*'' (Wildcard)', 'Path Equivalence: ''filedir*'' (Wildcard)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''fakedir/../realdir/filename''', 'Path Equivalence: ''fakedir/../realdir/filename''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Link Resolution Before File Access (''Link Following'')', 'Improper Link Resolution Before File Access (''Link Following'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UNIX Path Link Problems', 'UNIX Path Link Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UNIX Symbolic Link (Symlink) Following', 'UNIX Symbolic Link (Symlink) Following', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UNIX Hard Link', 'UNIX Hard Link', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windows Path Link Problems', 'Windows Path Link Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windows Shortcut Following (.LNK)', 'Windows Shortcut Following (.LNK)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windows Hard Link', 'Windows Hard Link', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of File Names that Identify Virtual Resources', 'Improper Handling of File Names that Identify Virtual Resources', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Windows Device Names', 'Improper Handling of Windows Device Names', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windows Virtual File Problems', 'Windows Virtual File Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Windows ::DATA Alternate Data Stream', 'Failure to Handle Windows ::DATA Alternate Data Stream', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mac Virtual File Problems', 'Mac Virtual File Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apple ''.DS_Store''', 'Apple ''.DS_Store''', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Apple HFS+ Alternate Data Stream Path', 'Improper Handling of Apple HFS+ Alternate Data Stream Path', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Control of File Name or Path', 'External Control of File Name or Path', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Data into a Different Plane (''Injection'')', 'Failure to Sanitize Data into a Different Plane (''Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)', 'Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Resolve Equivalent Special Elements into a Different Plane', 'Failure to Resolve Equivalent Special Elements into a Different Plane', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Special Elements used in a Command (''Command Injection'')', 'Improper Sanitization of Special Elements used in a Command (''Command Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Special Elements used in an OS Command (''OS Command Injection'')', 'Improper Sanitization of Special Elements used in an OS Command (''OS Command Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Preserve Web Page Structure (''Cross-site Scripting'')', 'Failure to Preserve Web Page Structure (''Cross-site Scripting'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Script-Related HTML Tags in a Web Page (Basic XSS)', 'Improper Sanitization of Script-Related HTML Tags in a Web Page (Basic XSS)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Script in an Error Message Web Page', 'Improper Sanitization of Script in an Error Message Web Page', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Script in Attributes of IMG Tags in a Web Page', 'Improper Sanitization of Script in Attributes of IMG Tags in a Web Page', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Script in Attributes in a Web Page', 'Failure to Sanitize Script in Attributes in a Web Page', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Resolve Encoded URI Schemes in a Web Page', 'Failure to Resolve Encoded URI Schemes in a Web Page', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Doubled Character XSS Manipulations', 'Doubled Character XSS Manipulations', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Invalid Characters in Identifiers in Web Pages', 'Failure to Sanitize Invalid Characters in Identifiers in Web Pages', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Alternate XSS Syntax', 'Failure to Sanitize Alternate XSS Syntax', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Argument Injection or Modification', 'Argument Injection or Modification', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Special Elements used in an SQL Command (''SQL Injection'')', 'Improper Sanitization of Special Elements used in an SQL Command (''SQL Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Data into LDAP Queries (''LDAP Injection'')', 'Failure to Sanitize Data into LDAP Queries (''LDAP Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('XML Injection (aka Blind XPath Injection)', 'XML Injection (aka Blind XPath Injection)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: Improper Sanitization of Custom Special Characters', 'DEPRECATED: Improper Sanitization of Custom Special Characters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize CRLF Sequences (''CRLF Injection'')', 'Failure to Sanitize CRLF Sequences (''CRLF Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Control Generation of Code (''Code Injection'')', 'Failure to Control Generation of Code (''Code Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Directives in Dynamically Evaluated Code (''Eval Injection'')', 'Improper Sanitization of Directives in Dynamically Evaluated Code (''Eval Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Directives in Statically Saved Code (''Static Code Injection'')', 'Improper Sanitization of Directives in Statically Saved Code (''Static Code Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Server-Side Includes (SSI) Within a Web Page', 'Failure to Sanitize Server-Side Includes (SSI) Within a Web Page', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Control of Filename for Include/Require Statement in PHP Program (''PHP File Inclusion'')', 'Improper Control of Filename for Include/Require Statement in PHP Program (''PHP File Inclusion'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Control of Resource Identifiers (''Resource Injection'')', 'Improper Control of Resource Identifiers (''Resource Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Technology-Specific Input Validation Problems', 'Technology-Specific Input Validation Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts Validation Problems', 'Struts Validation Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Duplicate Validation Forms', 'Struts: Duplicate Validation Forms', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Incomplete validate() Method Definition', 'Struts: Incomplete validate() Method Definition', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Form Bean Does Not Extend Validation Class', 'Struts: Form Bean Does Not Extend Validation Class', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Form Field Without Validator', 'Struts: Form Field Without Validator', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Plug-in Framework not in Use', 'Struts: Plug-in Framework not in Use', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Unused Validation Form', 'Struts: Unused Validation Form', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Unvalidated Action Form', 'Struts: Unvalidated Action Form', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Validator Turned Off', 'Struts: Validator Turned Off', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Validator Without Form Field', 'Struts: Validator Without Form Field', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Direct Use of Unsafe JNI', 'Direct Use of Unsafe JNI', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing XML Validation', 'Missing XML Validation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize CRLF Sequences in HTTP Headers (''HTTP Response Splitting'')', 'Failure to Sanitize CRLF Sequences in HTTP Headers (''HTTP Response Splitting'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Process Control', 'Process Control', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Misinterpretation of Input', 'Misinterpretation of Input', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Encoding or Escaping of Output', 'Improper Encoding or Escaping of Output', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Output Sanitization for Logs', 'Improper Output Sanitization for Logs', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Access of Indexable Resource (''Range Error'')', 'Improper Access of Indexable Resource (''Range Error'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Constrain Operations within the Bounds of a Memory Buffer', 'Failure to Constrain Operations within the Bounds of a Memory Buffer', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Copy without Checking Size of Input (''Classic Buffer Overflow'')', 'Buffer Copy without Checking Size of Input (''Classic Buffer Overflow'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Stack-based Buffer Overflow', 'Stack-based Buffer Overflow', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Heap-based Buffer Overflow', 'Heap-based Buffer Overflow', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Write-what-where Condition', 'Write-what-where Condition', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Underwrite (''Buffer Underflow'')', 'Buffer Underwrite (''Buffer Underflow'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Out-of-bounds Read', 'Out-of-bounds Read', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Over-read', 'Buffer Over-read', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Under-read', 'Buffer Under-read', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Wrap-around Error', 'Wrap-around Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Validation of Array Index', 'Improper Validation of Array Index', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Length Parameter Inconsistency ', 'Improper Handling of Length Parameter Inconsistency ', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Calculation of Buffer Size', 'Incorrect Calculation of Buffer Size', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): Miscalculated Null Termination', 'DEPRECATED (Duplicate): Miscalculated Null Termination', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('String Errors', 'String Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Format String', 'Uncontrolled Format String', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Calculation of Multi-Byte String Length', 'Incorrect Calculation of Multi-Byte String Length', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Type Errors', 'Type Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Representation Errors', 'Representation Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Special Elements', 'Improper Sanitization of Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: General Special Element Problems', 'DEPRECATED: General Special Element Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Delimiters', 'Failure to Sanitize Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Parameter/Argument Delimiters', 'Failure to Sanitize Parameter/Argument Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Value Delimiters', 'Failure to Sanitize Value Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Record Delimiters', 'Failure to Sanitize Record Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Line Delimiters', 'Failure to Sanitize Line Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Section Delimiters', 'Failure to Sanitize Section Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Expression/Command Delimiters', 'Failure to Sanitize Expression/Command Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Input Terminators', 'Improper Sanitization of Input Terminators', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Input Leaders', 'Failure to Sanitize Input Leaders', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Quoting Syntax', 'Failure to Sanitize Quoting Syntax', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Escape, Meta, or Control Sequences', 'Failure to Sanitize Escape, Meta, or Control Sequences', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Comment Delimiters', 'Improper Sanitization of Comment Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Macro Symbols', 'Improper Sanitization of Macro Symbols', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Substitution Characters', 'Improper Sanitization of Substitution Characters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Variable Name Delimiters', 'Improper Sanitization of Variable Name Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Wildcards or Matching Symbols', 'Improper Sanitization of Wildcards or Matching Symbols', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Whitespace', 'Improper Sanitization of Whitespace', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Paired Delimiters', 'Failure to Sanitize Paired Delimiters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Null Byte or NUL Character', 'Failure to Sanitize Null Byte or NUL Character', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Special Element', 'Failure to Sanitize Special Element', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Leading Special Elements', 'Improper Sanitization of Leading Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Multiple Leading Special Elements', 'Improper Sanitization of Multiple Leading Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Trailing Special Elements', 'Improper Sanitization of Trailing Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Multiple Trailing Special Elements', 'Improper Sanitization of Multiple Trailing Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Internal Special Elements', 'Improper Sanitization of Internal Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Multiple Internal Special Elements', 'Improper Sanitization of Multiple Internal Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Missing Special Element', 'Improper Handling of Missing Special Element', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Additional Special Element', 'Improper Handling of Additional Special Element', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Resolve Inconsistent Special Elements', 'Failure to Resolve Inconsistent Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Technology-Specific Special Elements', 'Technology-Specific Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Null Termination', 'Improper Null Termination', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cleansing, Canonicalization, and Comparison Errors', 'Cleansing, Canonicalization, and Comparison Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Encoding Error', 'Encoding Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Alternate Encoding', 'Failure to Handle Alternate Encoding', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Double Decoding of the Same Data', 'Double Decoding of the Same Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Mixed Encoding', 'Failure to Handle Mixed Encoding', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Unicode Encoding', 'Failure to Handle Unicode Encoding', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle URL Encoding (Hex Encoding)', 'Failure to Handle URL Encoding (Hex Encoding)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Resolve Case Sensitivity', 'Failure to Resolve Case Sensitivity', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Early Validation', 'Incorrect Behavior Order: Early Validation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Validate Before Canonicalize', 'Incorrect Behavior Order: Validate Before Canonicalize', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Validate Before Filter', 'Incorrect Behavior Order: Validate Before Filter', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Collapse of Data Into Unsafe Value', 'Collapse of Data Into Unsafe Value', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permissive Whitelist', 'Permissive Whitelist', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Blacklist', 'Incomplete Blacklist', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Regular Expression', 'Incorrect Regular Expression', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Overly Restrictive Regular Expression', 'Overly Restrictive Regular Expression', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Partial Comparison', 'Partial Comparison', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Data/Memory Layout', 'Reliance on Data/Memory Layout', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Numeric Errors', 'Numeric Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Integer Overflow or Wraparound', 'Integer Overflow or Wraparound', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Integer Underflow (Wrap or Wraparound)', 'Integer Underflow (Wrap or Wraparound)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Integer Coercion Error', 'Integer Coercion Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Off-by-one Error', 'Off-by-one Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unexpected Sign Extension', 'Unexpected Sign Extension', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Signed to Unsigned Conversion Error', 'Signed to Unsigned Conversion Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unsigned to Signed Conversion Error', 'Unsigned to Signed Conversion Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Numeric Truncation Error', 'Numeric Truncation Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Incorrect Byte Ordering', 'Use of Incorrect Byte Ordering', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Management Errors', 'Information Management Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure', 'Information Exposure', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Sent Data', 'Information Leak Through Sent Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privacy Leak through Data Queries', 'Privacy Leak through Data Queries', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure Through Discrepancy', 'Information Exposure Through Discrepancy', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Response Discrepancy Information Leak', 'Response Discrepancy Information Leak', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure Through Behavioral Discrepancy', 'Information Exposure Through Behavioral Discrepancy', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Internal Behavioral Inconsistency Information Leak', 'Internal Behavioral Inconsistency Information Leak', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure Through an External Behavioral Inconsistency', 'Information Exposure Through an External Behavioral Inconsistency', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Timing Discrepancy Information Leak', 'Timing Discrepancy Information Leak', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure Through an Error Message', 'Information Exposure Through an Error Message', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Product-Generated Error Message Information Leak', 'Product-Generated Error Message Information Leak', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Product-External Error Message Information Leak', 'Product-External Error Message Information Leak', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Cross-boundary Removal of Sensitive Data', 'Improper Cross-boundary Removal of Sensitive Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Intended Information Leak', 'Intended Information Leak', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Process Environment Information Leak', 'Process Environment Information Leak', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Debug Information', 'Information Leak Through Debug Information', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Containment Errors (Container Errors)', 'Containment Errors (Container Errors)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: Failure to Protect Stored Data from Modification', 'DEPRECATED: Failure to Protect Stored Data from Modification', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): Failure to provide confidentiality for stored data', 'DEPRECATED (Duplicate): Failure to provide confidentiality for stored data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Data Under Web Root', 'Sensitive Data Under Web Root', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Data Under FTP Root', 'Sensitive Data Under FTP Root', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Loss or Omission', 'Information Loss or Omission', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Truncation of Security-relevant Information', 'Truncation of Security-relevant Information', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Omission of Security-relevant Information', 'Omission of Security-relevant Information', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Obscured Security-relevant Information by Alternate Name', 'Obscured Security-relevant Information by Alternate Name', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): General Information Management Problems', 'DEPRECATED (Duplicate): General Information Management Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Information Uncleared Before Release', 'Sensitive Information Uncleared Before Release', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Fulfill API Contract (''API Abuse'')', 'Failure to Fulfill API Contract (''API Abuse'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Syntactically Invalid Structure', 'Improper Handling of Syntactically Invalid Structure', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Values', 'Improper Handling of Values', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Missing Values', 'Improper Handling of Missing Values', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Extra Values', 'Improper Handling of Extra Values', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Undefined Values', 'Improper Handling of Undefined Values', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Parameter Problems', 'Parameter Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Missing Parameter', 'Failure to Handle Missing Parameter', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Extra Parameters', 'Improper Handling of Extra Parameters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Undefined Parameters', 'Improper Handling of Undefined Parameters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Structural Elements', 'Improper Handling of Structural Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Incomplete Structural Elements', 'Improper Handling of Incomplete Structural Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Incomplete Element', 'Failure to Handle Incomplete Element', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Inconsistent Structural Elements', 'Improper Handling of Inconsistent Structural Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Unexpected Data Type', 'Improper Handling of Unexpected Data Type', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Inherently Dangerous Function', 'Use of Inherently Dangerous Function', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Change Working Directory in chroot Jail', 'Failure to Change Working Directory in chroot Jail', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Clear Heap Memory Before Release (''Heap Inspection'')', 'Failure to Clear Heap Memory Before Release (''Heap Inspection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on DNS Lookups in a Security Decision', 'Reliance on DNS Lookups in a Security Decision', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncaught Exception', 'Uncaught Exception', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: Often Misused: Path Manipulation', 'DEPRECATED: Often Misused: Path Manipulation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Execution with Unnecessary Privileges', 'Execution with Unnecessary Privileges', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Often Misused: String Management', 'Often Misused: String Management', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unchecked Return Value', 'Unchecked Return Value', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Check of Function Return Value', 'Incorrect Check of Function Return Value', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Security Features', 'Security Features', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Credentials Management', 'Credentials Management', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage of a Password', 'Plaintext Storage of a Password', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Storing Passwords in a Recoverable Format', 'Storing Passwords in a Recoverable Format', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Empty Password in Configuration File', 'Empty Password in Configuration File', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Hard-coded Password', 'Use of Hard-coded Password', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Password in Configuration File', 'Password in Configuration File', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weak Cryptography for Passwords', 'Weak Cryptography for Passwords', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Not Using Password Aging', 'Not Using Password Aging', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Password Aging with Long Expiration', 'Password Aging with Long Expiration', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permissions, Privileges, and Access Controls', 'Permissions, Privileges, and Access Controls', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege / Sandbox Issues', 'Privilege / Sandbox Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Privilege Assignment', 'Incorrect Privilege Assignment', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege Defined With Unsafe Actions', 'Privilege Defined With Unsafe Actions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege Chaining', 'Privilege Chaining', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Privilege Management', 'Improper Privilege Management', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege Context Switching Error', 'Privilege Context Switching Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege Dropping / Lowering Errors', 'Privilege Dropping / Lowering Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Least Privilege Violation', 'Least Privilege Violation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Check for Dropped Privileges', 'Improper Check for Dropped Privileges', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Insufficient Privileges', 'Improper Handling of Insufficient Privileges', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permission Issues', 'Permission Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Default Permissions', 'Incorrect Default Permissions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insecure Inherited Permissions', 'Insecure Inherited Permissions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insecure Preserved Inherited Permissions', 'Insecure Preserved Inherited Permissions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Execution-Assigned Permissions', 'Incorrect Execution-Assigned Permissions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Insufficient Permissions or Privileges ', 'Improper Handling of Insufficient Permissions or Privileges ', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Preservation of Permissions', 'Improper Preservation of Permissions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Ownership Management', 'Improper Ownership Management', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unverified Ownership', 'Unverified Ownership', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access Control (Authorization) Issues', 'Access Control (Authorization) Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Access Control (Authorization)', 'Improper Access Control (Authorization)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect User Management', 'Incorrect User Management', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Authentication', 'Improper Authentication', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass Using an Alternate Path or Channel', 'Authentication Bypass Using an Alternate Path or Channel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Alternate Name', 'Authentication Bypass by Alternate Name', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Spoofing', 'Authentication Bypass by Spoofing', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trusting Self-reported IP Address', 'Trusting Self-reported IP Address', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trusting Self-reported DNS Name', 'Trusting Self-reported DNS Name', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Using Referer Field for Authentication', 'Using Referer Field for Authentication', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Capture-replay', 'Authentication Bypass by Capture-replay', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Certificate Issues', 'Certificate Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Following of Chain of Trust for Certificate Validation', 'Improper Following of Chain of Trust for Certificate Validation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Validation of Host-specific Certificate Data', 'Improper Validation of Host-specific Certificate Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Validation of Certificate Expiration', 'Improper Validation of Certificate Expiration', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Check for Certificate Revocation', 'Improper Check for Certificate Revocation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Channel Accessible by Non-Endpoint (''Man-in-the-Middle'')', 'Channel Accessible by Non-Endpoint (''Man-in-the-Middle'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reflection Attack in an Authentication Protocol', 'Reflection Attack in an Authentication Protocol', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Assumed-Immutable Data', 'Authentication Bypass by Assumed-Immutable Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Implementation of Authentication Algorithm', 'Incorrect Implementation of Authentication Algorithm', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Critical Step in Authentication', 'Missing Critical Step in Authentication', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Primary Weakness', 'Authentication Bypass by Primary Weakness', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Authentication for Critical Function', 'Missing Authentication for Critical Function', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Restriction of Excessive Authentication Attempts', 'Improper Restriction of Excessive Authentication Attempts', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Single-factor Authentication', 'Use of Single-factor Authentication', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Password System for Primary Authentication', 'Use of Password System for Primary Authentication', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cryptographic Issues', 'Cryptographic Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Encryption of Sensitive Data', 'Missing Encryption of Sensitive Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cleartext Storage of Sensitive Information', 'Cleartext Storage of Sensitive Information', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in a File or on Disk', 'Plaintext Storage in a File or on Disk', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in the Registry', 'Plaintext Storage in the Registry', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in a Cookie', 'Plaintext Storage in a Cookie', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in Memory', 'Plaintext Storage in Memory', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in GUI', 'Plaintext Storage in GUI', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in Executable', 'Plaintext Storage in Executable', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cleartext Transmission of Sensitive Information', 'Cleartext Transmission of Sensitive Information', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Key Management Errors', 'Key Management Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Hard-coded Cryptographic Key', 'Use of Hard-coded Cryptographic Key', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Key Exchange without Entity Authentication', 'Key Exchange without Entity Authentication', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reusing a Nonce, Key Pair in Encryption', 'Reusing a Nonce, Key Pair in Encryption', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a Key Past its Expiration Date', 'Use of a Key Past its Expiration Date', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Required Cryptographic Step', 'Missing Required Cryptographic Step', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Inadequate Encryption Strength', 'Inadequate Encryption Strength', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a Broken or Risky Cryptographic Algorithm', 'Use of a Broken or Risky Cryptographic Algorithm', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reversible One-Way Hash', 'Reversible One-Way Hash', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Not Using a Random IV with CBC Mode', 'Not Using a Random IV with CBC Mode', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Insufficiently Random Values', 'Use of Insufficiently Random Values', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Entropy', 'Insufficient Entropy', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Entropy in PRNG', 'Insufficient Entropy in PRNG', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Insufficient Entropy in TRNG', 'Improper Handling of Insufficient Entropy in TRNG', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Small Space of Random Values', 'Small Space of Random Values', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PRNG Seed Error', 'PRNG Seed Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Same Seed in PRNG', 'Same Seed in PRNG', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictable Seed in PRNG', 'Predictable Seed in PRNG', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Cryptographically Weak PRNG', 'Use of Cryptographically Weak PRNG', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Small Seed Space in PRNG', 'Small Seed Space in PRNG', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictability Problems', 'Predictability Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictable from Observable State', 'Predictable from Observable State', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictable Exact Value from Previous Values', 'Predictable Exact Value from Previous Values', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictable Value Range from Previous Values', 'Predictable Value Range from Previous Values', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Invariant Value in Dynamically Changing Context', 'Use of Invariant Value in Dynamically Changing Context', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Verification of Data Authenticity', 'Insufficient Verification of Data Authenticity', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Origin Validation Error', 'Origin Validation Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Verification of Cryptographic Signature', 'Improper Verification of Cryptographic Signature', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Less Trusted Source', 'Use of Less Trusted Source', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Acceptance of Extraneous Untrusted Data With Trusted Data', 'Acceptance of Extraneous Untrusted Data With Trusted Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improperly Trusted Reverse DNS', 'Improperly Trusted Reverse DNS', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Type Distinction', 'Insufficient Type Distinction', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross-Site Request Forgery (CSRF)', 'Cross-Site Request Forgery (CSRF)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Add Integrity Check Value', 'Failure to Add Integrity Check Value', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Validation of Integrity Check Value', 'Improper Validation of Integrity Check Value', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('User Interface Security Issues', 'User Interface Security Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Product UI does not Warn User of Unsafe Actions', 'Product UI does not Warn User of Unsafe Actions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient UI Warning of Dangerous Operations', 'Insufficient UI Warning of Dangerous Operations', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improperly Implemented Security Check for Standard', 'Improperly Implemented Security Check for Standard', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privacy Violation', 'Privacy Violation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trust of System Event Data', 'Trust of System Event Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Time and State', 'Time and State', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition', 'Race Condition', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition Enabling Link Following', 'Race Condition Enabling Link Following', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Signal Handler Race Condition', 'Signal Handler Race Condition', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition in Switch', 'Race Condition in Switch', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition within a Thread', 'Race Condition within a Thread', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Time-of-check Time-of-use (TOCTOU) Race Condition', 'Time-of-check Time-of-use (TOCTOU) Race Condition', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Context Switching Race Condition', 'Context Switching Race Condition', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Divide By Zero', 'Divide By Zero', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Check for Certificate Revocation after Initial Check', 'Missing Check for Certificate Revocation after Initial Check', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('State Issues', 'State Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Internal State Distinction', 'Incomplete Internal State Distinction', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('State Synchronization Error', 'State Synchronization Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mutable Objects Passed by Reference', 'Mutable Objects Passed by Reference', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Passing Mutable Objects to an Untrusted Method', 'Passing Mutable Objects to an Untrusted Method', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Temporary File Issues', 'Temporary File Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insecure Temporary File', 'Insecure Temporary File', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Creation of Temporary File With Insecure Permissions', 'Creation of Temporary File With Insecure Permissions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Creation of Temporary File in Directory with Incorrect Permissions', 'Creation of Temporary File in Directory with Incorrect Permissions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Technology-Specific Time and State Issues', 'Technology-Specific Time and State Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Session Fixation', 'Session Fixation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Covert Timing Channel', 'Covert Timing Channel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Symbolic Name not Mapping to Correct Object', 'Symbolic Name not Mapping to Correct Object', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Signal Errors', 'Signal Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Error Handling', 'Error Handling', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Error Conditions, Return Values, Status Codes', 'Error Conditions, Return Values, Status Codes', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Detection of Error Condition Without Action', 'Detection of Error Condition Without Action', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unchecked Error Condition', 'Unchecked Error Condition', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Report Error in Status Code', 'Failure to Report Error in Status Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Return of Wrong Status Code', 'Return of Wrong Status Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unexpected Status Code or Return Value', 'Unexpected Status Code or Return Value', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of NullPointerException Catch to Detect NULL Pointer Dereference', 'Use of NullPointerException Catch to Detect NULL Pointer Dereference', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Declaration of Catch for Generic Exception', 'Declaration of Catch for Generic Exception', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Declaration of Throws for Generic Exception', 'Declaration of Throws for Generic Exception', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Indicator of Poor Code Quality', 'Indicator of Poor Code Quality', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Resource Management Errors', 'Resource Management Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Resource Consumption (''Resource Exhaustion'')', 'Uncontrolled Resource Consumption (''Resource Exhaustion'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Release Memory Before Removing Last Reference (''Memory Leak'')', 'Failure to Release Memory Before Removing Last Reference (''Memory Leak'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Transmission of Private Resources into a New Sphere (''Resource Leak'')', 'Transmission of Private Resources into a New Sphere (''Resource Leak'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UNIX File Descriptor Leak', 'UNIX File Descriptor Leak', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Resource Shutdown or Release', 'Improper Resource Shutdown or Release', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Asymmetric Resource Consumption (Amplification)', 'Asymmetric Resource Consumption (Amplification)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Control of Network Message Volume (Network Amplification)', 'Insufficient Control of Network Message Volume (Network Amplification)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Algorithmic Complexity', 'Algorithmic Complexity', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Early Amplification', 'Incorrect Behavior Order: Early Amplification', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Highly Compressed Data (Data Amplification)', 'Improper Handling of Highly Compressed Data (Data Amplification)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Resource Pool', 'Insufficient Resource Pool', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Resource Locking Problems', 'Resource Locking Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unrestricted Externally Accessible Lock', 'Unrestricted Externally Accessible Lock', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Resource Locking', 'Insufficient Resource Locking', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Lock Check', 'Missing Lock Check', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Double Free', 'Double Free', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use After Free', 'Use After Free', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Channel and Path Errors', 'Channel and Path Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Channel Errors', 'Channel Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unprotected Primary Channel', 'Unprotected Primary Channel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unprotected Alternate Channel', 'Unprotected Alternate Channel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition During Access to Alternate Channel', 'Race Condition During Access to Alternate Channel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unprotected Windows Messaging Channel (''Shatter'')', 'Unprotected Windows Messaging Channel (''Shatter'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): Proxied Trusted Channel', 'DEPRECATED (Duplicate): Proxied Trusted Channel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Protect Alternate Path', 'Failure to Protect Alternate Path', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Direct Request (''Forced Browsing'')', 'Direct Request (''Forced Browsing'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Untrusted Search Path', 'Untrusted Search Path', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Search Path Element', 'Uncontrolled Search Path Element', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unquoted Search Path or Element', 'Unquoted Search Path or Element', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Handler Errors', 'Handler Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Deployment of Wrong Handler', 'Deployment of Wrong Handler', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Handler', 'Missing Handler', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Dangerous Handler not Disabled During Sensitive Operations', 'Dangerous Handler not Disabled During Sensitive Operations', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unparsed Raw Web Content Delivery', 'Unparsed Raw Web Content Delivery', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unrestricted Upload of File with Dangerous Type', 'Unrestricted Upload of File with Dangerous Type', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Interaction Error', 'Interaction Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Interpretation Conflict', 'Interpretation Conflict', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Model of Endpoint Features', 'Incomplete Model of Endpoint Features', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Behavioral Problems', 'Behavioral Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Behavioral Change in New Version or Environment', 'Behavioral Change in New Version or Environment', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Expected Behavior Violation', 'Expected Behavior Violation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unintended Proxy/Intermediary', 'Unintended Proxy/Intermediary', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Web Problems', 'Web Problems', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): HTTP response splitting', 'DEPRECATED (Duplicate): HTTP response splitting', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Inconsistent Interpretation of HTTP Requests (''HTTP Request Smuggling'')', 'Inconsistent Interpretation of HTTP Requests (''HTTP Request Smuggling'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('User Interface Errors', 'User Interface Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UI Discrepancy for Security Feature', 'UI Discrepancy for Security Feature', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unimplemented or Unsupported Feature in UI', 'Unimplemented or Unsupported Feature in UI', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Obsolete Feature in UI', 'Obsolete Feature in UI', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('The UI Performs the Wrong Action', 'The UI Performs the Wrong Action', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Multiple Interpretations of UI Input', 'Multiple Interpretations of UI Input', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UI Misrepresentation of Critical Information', 'UI Misrepresentation of Critical Information', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Initialization and Cleanup Errors', 'Initialization and Cleanup Errors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insecure Default Variable Initialization', 'Insecure Default Variable Initialization', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Initialization of Trusted Variables or Data Stores', 'External Initialization of Trusted Variables or Data Stores', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Non-exit on Failed Initialization', 'Non-exit on Failed Initialization', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Initialization', 'Missing Initialization', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Uninitialized Variable', 'Use of Uninitialized Variable', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: Incorrect Initialization', 'DEPRECATED: Incorrect Initialization', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Cleanup', 'Incomplete Cleanup', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Cleanup on Thrown Exception', 'Improper Cleanup on Thrown Exception', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Data Structure Issues', 'Data Structure Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Duplicate Key in Associative List (Alist)', 'Duplicate Key in Associative List (Alist)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Deletion of Data Structure Sentinel', 'Deletion of Data Structure Sentinel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Addition of Data Structure Sentinel', 'Addition of Data Structure Sentinel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Pointer Issues', 'Pointer Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Return of Pointer Value Outside of Expected Range', 'Return of Pointer Value Outside of Expected Range', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of sizeof() on a Pointer Type', 'Use of sizeof() on a Pointer Type', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Pointer Scaling', 'Incorrect Pointer Scaling', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Pointer Subtraction to Determine Size', 'Use of Pointer Subtraction to Determine Size', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Externally-Controlled Input to Select Classes or Code (''Unsafe Reflection'')', 'Use of Externally-Controlled Input to Select Classes or Code (''Unsafe Reflection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Modification of Assumed-Immutable Data (MAID)', 'Modification of Assumed-Immutable Data (MAID)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Control of Assumed-Immutable Web Parameter', 'External Control of Assumed-Immutable Web Parameter', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PHP External Variable Modification', 'PHP External Variable Modification', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Function with Inconsistent Implementations', 'Use of Function with Inconsistent Implementations', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Undefined Behavior for Input to API', 'Undefined Behavior for Input to API', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('NULL Pointer Dereference', 'NULL Pointer Dereference', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Obsolete Functions', 'Use of Obsolete Functions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Default Case in Switch Statement', 'Missing Default Case in Switch Statement', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unsafe Function Call from a Signal Handler', 'Unsafe Function Call from a Signal Handler', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Incorrect Operator', 'Use of Incorrect Operator', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Assigning instead of Comparing', 'Assigning instead of Comparing', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Comparing instead of Assigning', 'Comparing instead of Assigning', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Block Delimitation', 'Incorrect Block Delimitation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Omitted Break Statement in Switch', 'Omitted Break Statement in Switch', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Encapsulation', 'Insufficient Encapsulation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Comparison of Classes by Name', 'Comparison of Classes by Name', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Package-level Scope', 'Reliance on Package-level Scope', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Data Leak Between Sessions', 'Data Leak Between Sessions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Leftover Debug Code', 'Leftover Debug Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mobile Code Issues', 'Mobile Code Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Public cloneable() Method Without Final (''Object Hijack'')', 'Public cloneable() Method Without Final (''Object Hijack'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Inner Class Containing Sensitive Data', 'Use of Inner Class Containing Sensitive Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Critical Public Variable Without Final Modifier', 'Critical Public Variable Without Final Modifier', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Download of Code Without Integrity Check', 'Download of Code Without Integrity Check', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Private Array-Typed Field Returned From A Public Method', 'Private Array-Typed Field Returned From A Public Method', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Public Data Assigned to Private Array-Typed Field', 'Public Data Assigned to Private Array-Typed Field', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of System Data to an Unauthorized Control Sphere', 'Exposure of System Data to an Unauthorized Control Sphere', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak through Class Cloning', 'Information Leak through Class Cloning', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Serializable Class Containing Sensitive Data', 'Serializable Class Containing Sensitive Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Public Static Field Not Marked Final', 'Public Static Field Not Marked Final', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trust Boundary Violation', 'Trust Boundary Violation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Deserialization of Untrusted Data', 'Deserialization of Untrusted Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Byte/Object Code', 'Byte/Object Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Motivation/Intent', 'Motivation/Intent', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Intentionally Introduced Weakness', 'Intentionally Introduced Weakness', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Embedded Malicious Code', 'Embedded Malicious Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trojan Horse', 'Trojan Horse', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Non-Replicating Malicious Code', 'Non-Replicating Malicious Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Replicating Malicious Code (Virus or Worm)', 'Replicating Malicious Code (Virus or Worm)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trapdoor', 'Trapdoor', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Logic/Time Bomb', 'Logic/Time Bomb', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Spyware', 'Spyware', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Intentionally Introduced Nonmalicious Weakness', 'Intentionally Introduced Nonmalicious Weakness', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Covert Channel', 'Covert Channel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Covert Storage Channel', 'Covert Storage Channel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): Covert Timing Channel', 'DEPRECATED (Duplicate): Covert Timing Channel', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Other Intentional, Nonmalicious Weakness', 'Other Intentional, Nonmalicious Weakness', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Inadvertently Introduced Weakness', 'Inadvertently Introduced Weakness', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('.NET Environment Issues', '.NET Environment Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('.NET Misconfiguration: Use of Impersonation', '.NET Misconfiguration: Use of Impersonation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weak Password Requirements', 'Weak Password Requirements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficiently Protected Credentials', 'Insufficiently Protected Credentials', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unprotected Transport of Credentials', 'Unprotected Transport of Credentials', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Caching', 'Information Leak Through Caching', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Browser Caching', 'Information Leak Through Browser Caching', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Environmental Variables', 'Information Leak Through Environmental Variables', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of CVS Repository to an Unauthorized Control Sphere', 'Exposure of CVS Repository to an Unauthorized Control Sphere', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of Core Dump File to an Unauthorized Control Sphere', 'Exposure of Core Dump File to an Unauthorized Control Sphere', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of Access Control List Files to an Unauthorized Control Sphere', 'Exposure of Access Control List Files to an Unauthorized Control Sphere', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of Backup File to an Unauthorized Control Sphere', 'Exposure of Backup File to an Unauthorized Control Sphere', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Test Code', 'Information Leak Through Test Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Log Files', 'Information Leak Through Log Files', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Server Log Files', 'Information Leak Through Server Log Files', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Debug Log Files', 'Information Leak Through Debug Log Files', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Shell Error Message', 'Information Leak Through Shell Error Message', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Servlet Runtime Error Message', 'Information Leak Through Servlet Runtime Error Message', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Java Runtime Error Message', 'Information Leak Through Java Runtime Error Message', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('File and Directory Information Exposure', 'File and Directory Information Exposure', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Persistent Cookies', 'Information Leak Through Persistent Cookies', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Source Code', 'Information Leak Through Source Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Include Source Code', 'Information Leak Through Include Source Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Cleanup Log Files', 'Information Leak Through Cleanup Log Files', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Singleton Pattern in a Non-thread-safe Manner', 'Use of Singleton Pattern in a Non-thread-safe Manner', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Use a Standardized Error Handling Mechanism', 'Failure to Use a Standardized Error Handling Mechanism', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Dynamic Class Loading', 'Use of Dynamic Class Loading', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Suspicious Comment', 'Suspicious Comment', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Hard-coded, Security-relevant Constants', 'Use of Hard-coded, Security-relevant Constants', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Directory Listing', 'Information Leak Through Directory Listing', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Password Field Masking', 'Missing Password Field Masking', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Server Error Message', 'Information Leak Through Server Error Message', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Authorization Before Parsing and Canonicalization', 'Incorrect Behavior Order: Authorization Before Parsing and Canonicalization', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Files or Directories Accessible to External Parties', 'Files or Directories Accessible to External Parties', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Command Shell in Externally Accessible Directory', 'Command Shell in Externally Accessible Directory', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Not Using Input Validation Framework', 'ASP.NET Misconfiguration: Not Using Input Validation Framework', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Use of Identity Impersonation', 'ASP.NET Misconfiguration: Use of Identity Impersonation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Concurrency Issues', 'Concurrency Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of getlogin() in Multithreaded Application', 'Use of getlogin() in Multithreaded Application', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Often Misused: Arguments and Parameters', 'Often Misused: Arguments and Parameters', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of umask() with chmod-style Argument', 'Use of umask() with chmod-style Argument', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Dead Code', 'Dead Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Return of Stack Variable Address', 'Return of Stack Variable Address', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unused Variable', 'Unused Variable', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL Injection: Hibernate', 'SQL Injection: Hibernate', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Cookies without Validation and Integrity Checking', 'Reliance on Cookies without Validation and Integrity Checking', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access Control Bypass Through User-Controlled SQL Primary Key', 'Access Control Bypass Through User-Controlled SQL Primary Key', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unsynchronized Access to Shared Data', 'Unsynchronized Access to Shared Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('finalize() Method Without super.finalize()', 'finalize() Method Without super.finalize()', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Expression Issues', 'Expression Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Expression is Always False', 'Expression is Always False', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Expression is Always True', 'Expression is Always True', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Call to Thread run() instead of start()', 'Call to Thread run() instead of start()', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Follow Specification', 'Failure to Follow Specification', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of Synchronization Primitives', 'EJB Bad Practices: Use of Synchronization Primitives', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of AWT Swing', 'EJB Bad Practices: Use of AWT Swing', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of Java I/O', 'EJB Bad Practices: Use of Java I/O', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of Sockets', 'EJB Bad Practices: Use of Sockets', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of Class Loader', 'EJB Bad Practices: Use of Class Loader', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('clone() Method Without super.clone()', 'clone() Method Without super.clone()', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Object Model Violation: Just One of Equals and Hashcode Defined', 'Object Model Violation: Just One of Equals and Hashcode Defined', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Array Declared Public, Final, and Static', 'Array Declared Public, Final, and Static', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('finalize() Method Declared Public', 'finalize() Method Declared Public', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Return Inside Finally Block', 'Return Inside Finally Block', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Empty Synchronized Block', 'Empty Synchronized Block', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Explicit Call to Finalize()', 'Explicit Call to Finalize()', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Assignment of a Fixed Address to a Pointer', 'Assignment of a Fixed Address to a Pointer', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Attempt to Access Child of a Non-structure Pointer', 'Attempt to Access Child of a Non-structure Pointer', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Call to Non-ubiquitous API', 'Call to Non-ubiquitous API', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Free of Memory not on the Heap', 'Free of Memory not on the Heap', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Data Storage in Improperly Locked Memory', 'Sensitive Data Storage in Improperly Locked Memory', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass Issues', 'Authentication Bypass Issues', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created', 'Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Comparison of Object References Instead of Object Contents', 'Comparison of Object References Instead of Object Contents', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Semantic Object Comparison', 'Incorrect Semantic Object Comparison', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Wrong Operator in String Comparison', 'Use of Wrong Operator in String Comparison', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Query Strings in GET Request', 'Information Leak Through Query Strings in GET Request', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trust of OpenSSL Certificate Without Validation', 'Trust of OpenSSL Certificate Without Validation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Catch All Exceptions in Servlet ', 'Failure to Catch All Exceptions in Servlet ', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('URL Redirection to Untrusted Site (''Open Redirect'')', 'URL Redirection to Untrusted Site (''Open Redirect'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Client-Side Enforcement of Server-Side Security', 'Client-Side Enforcement of Server-Side Security', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Client-Side Authentication', 'Use of Client-Side Authentication', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Deprecated Entries', 'Deprecated Entries', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Multiple Binds to the Same Port', 'Multiple Binds to the Same Port', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unchecked Input for Loop Condition', 'Unchecked Input for Loop Condition', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Public Static Final Field References Mutable Object', 'Public Static Final Field References Mutable Object', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Non-private Field in ActionForm Class', 'Struts: Non-private Field in ActionForm Class', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Double-Checked Locking', 'Double-Checked Locking', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Externally Controlled Reference to a Resource in Another Sphere', 'Externally Controlled Reference to a Resource in Another Sphere', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through XML External Entity File Disclosure', 'Information Leak Through XML External Entity File Disclosure', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Indexing of Private Data', 'Information Leak Through Indexing of Private Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Session Expiration', 'Insufficient Session Expiration', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Cookie in HTTPS Session Without ''Secure'' Attribute', 'Sensitive Cookie in HTTPS Session Without ''Secure'' Attribute', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Comments', 'Information Leak Through Comments', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Identification of Uploaded File Variables (PHP)', 'Incomplete Identification of Uploaded File Variables (PHP)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reachable Assertion', 'Reachable Assertion', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposed Unsafe ActiveX Method', 'Exposed Unsafe ActiveX Method', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Dangling Database Cursor (''Cursor Injection'')', 'Dangling Database Cursor (''Cursor Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unverified Password Change', 'Unverified Password Change', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Variable Extraction Error', 'Variable Extraction Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unvalidated Function Hook Arguments', 'Unvalidated Function Hook Arguments', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unsafe ActiveX Control Marked Safe For Scripting', 'Unsafe ActiveX Control Marked Safe For Scripting', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Executable Regular Expression Error', 'Executable Regular Expression Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permissive Regular Expression', 'Permissive Regular Expression', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Null Byte Interaction Error (Poison Null Byte)', 'Null Byte Interaction Error (Poison Null Byte)', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Dynamic Variable Evaluation', 'Dynamic Variable Evaluation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call with Incorrectly Specified Arguments', 'Function Call with Incorrectly Specified Arguments', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Examined by SAMATE', 'Weaknesses Examined by SAMATE', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Resource-specific Weaknesses', 'Resource-specific Weaknesses', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses that Affect Files or Directories', 'Weaknesses that Affect Files or Directories', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses that Affect Memory', 'Weaknesses that Affect Memory', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses that Affect System Processes', 'Weaknesses that Affect System Processes', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Used by NVD', 'Weaknesses Used by NVD', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Not Failing Securely (''Failing Open'')', 'Not Failing Securely (''Failing Open'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Use Economy of Mechanism', 'Failure to Use Economy of Mechanism', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Use Complete Mediation', 'Failure to Use Complete Mediation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access Control Bypass Through User-Controlled Key', 'Access Control Bypass Through User-Controlled Key', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weak Password Recovery Mechanism for Forgotten Password', 'Weak Password Recovery Mechanism for Forgotten Password', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Filtering of File and Other Resource Names for Executable Content', 'Insufficient Filtering of File and Other Resource Names for Executable Content', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Control of Critical State Data', 'External Control of Critical State Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Data within XPath Expressions (''XPath injection'')', 'Failure to Sanitize Data within XPath Expressions (''XPath injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of HTTP Headers for Scripting Syntax', 'Improper Sanitization of HTTP Headers for Scripting Syntax', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Overly Restrictive Account Lockout Mechanism', 'Overly Restrictive Account Lockout Mechanism', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on File Name or Extension of Externally-Supplied File', 'Reliance on File Name or Extension of Externally-Supplied File', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Non-Canonical URL Paths for Authorization Decisions', 'Use of Non-Canonical URL Paths for Authorization Decisions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Use of Privileged APIs', 'Incorrect Use of Privileged APIs', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking', 'Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trusting HTTP Permission Methods on the Server Side', 'Trusting HTTP Permission Methods on the Server Side', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak through WSDL File', 'Information Leak through WSDL File', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Data within XQuery Expressions (''XQuery Injection'')', 'Failure to Sanitize Data within XQuery Expressions (''XQuery Injection'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Compartmentalization', 'Insufficient Compartmentalization', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on a Single Factor in a Security Decision', 'Reliance on a Single Factor in a Security Decision', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Psychological Acceptability', 'Insufficient Psychological Acceptability', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Security through Obscurity', 'Reliance on Security through Obscurity', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Violation of Secure Design Principles', 'Violation of Secure Design Principles', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in Software Written in C', 'Weaknesses in Software Written in C', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in Software Written in Java', 'Weaknesses in Software Written in Java', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in Software Written in PHP', 'Weaknesses in Software Written in PHP', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Synchronization', 'Insufficient Synchronization', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a Non-reentrant Function in an Unsynchronized Context', 'Use of a Non-reentrant Function in an Unsynchronized Context', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Control of a Resource Through its Lifetime', 'Improper Control of a Resource Through its Lifetime', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Initialization', 'Improper Initialization', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Operation on Resource in Wrong Phase of Lifetime', 'Operation on Resource in Wrong Phase of Lifetime', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Locking', 'Insufficient Locking', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of Resource to Wrong Sphere', 'Exposure of Resource to Wrong Sphere', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Resource Transfer Between Spheres', 'Incorrect Resource Transfer Between Spheres', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Always-Incorrect Control Flow Implementation', 'Always-Incorrect Control Flow Implementation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Lack of Administrator Control over Security', 'Lack of Administrator Control over Security', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Operation on a Resource after Expiration or Release', 'Operation on a Resource after Expiration or Release', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Influence of Sphere Definition', 'External Influence of Sphere Definition', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Recursion', 'Uncontrolled Recursion', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Duplicate Operations on Resource', 'Duplicate Operations on Resource', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Potentially Dangerous Function', 'Use of Potentially Dangerous Function', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weakness Base Elements', 'Weakness Base Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Composites', 'Composites', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Chain Elements', 'Chain Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Integer Overflow to Buffer Overflow', 'Integer Overflow to Buffer Overflow', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Conversion between Numeric Types', 'Incorrect Conversion between Numeric Types', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Calculation', 'Incorrect Calculation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrect Order of Arguments', 'Function Call With Incorrect Order of Arguments', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Provide Specified Functionality', 'Failure to Provide Specified Functionality', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrect Number of Arguments', 'Function Call With Incorrect Number of Arguments', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrect Argument Type', 'Function Call With Incorrect Argument Type', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrectly Specified Argument Value', 'Function Call With Incorrectly Specified Argument Value', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrect Variable or Reference as Argument', 'Function Call With Incorrect Variable or Reference as Argument', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permission Race Condition During Resource Copy', 'Permission Race Condition During Resource Copy', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unchecked Return Value to NULL Pointer Dereference', 'Unchecked Return Value to NULL Pointer Dereference', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Control Flow Management', 'Insufficient Control Flow Management', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Blacklist to Cross-Site Scripting', 'Incomplete Blacklist to Cross-Site Scripting', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Protection Mechanism Failure', 'Protection Mechanism Failure', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Multiple Resources with Duplicate Identifier', 'Use of Multiple Resources with Duplicate Identifier', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Low-Level Functionality', 'Use of Low-Level Functionality', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order', 'Incorrect Behavior Order', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Comparison', 'Insufficient Comparison', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Redirect Without Exit', 'Redirect Without Exit', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Development Concepts', 'Development Concepts', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Seven Pernicious Kingdoms', 'Seven Pernicious Kingdoms', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Introduced During Design', 'Weaknesses Introduced During Design', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Introduced During Implementation', 'Weaknesses Introduced During Implementation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Exceptional Conditions', 'Failure to Handle Exceptional Conditions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Type Conversion or Cast', 'Incorrect Type Conversion or Cast', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Control Flow Scoping', 'Incorrect Control Flow Scoping', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Incorrectly-Resolved Name or Reference', 'Use of Incorrectly-Resolved Name or Reference', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Enforcement of Message or Data Structure', 'Improper Enforcement of Message or Data Structure', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Ownership Assignment', 'Incorrect Ownership Assignment', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Named Chains', 'Named Chains', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Coding Standards Violation', 'Coding Standards Violation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Permission Assignment for Critical Resource', 'Incorrect Permission Assignment for Critical Resource', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Compiler Optimization Removal or Modification of Security-critical Code', 'Compiler Optimization Removal or Modification of Security-critical Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Addressed by the CERT C Secure Coding Standard', 'Weaknesses Addressed by the CERT C Secure Coding Standard', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposed Dangerous Method or Function', 'Exposed Dangerous Method or Function', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Check for Unusual or Exceptional Conditions', 'Improper Check for Unusual or Exceptional Conditions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Exceptional Conditions', 'Improper Handling of Exceptional Conditions', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Custom Error Page', 'Missing Custom Error Page', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Selection of Less-Secure Algorithm During Negotiation (''Algorithm Downgrade'')', 'Selection of Less-Secure Algorithm During Negotiation (''Algorithm Downgrade'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Undefined, Unspecified, or Implementation-Defined Behavior', 'Reliance on Undefined, Unspecified, or Implementation-Defined Behavior', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a One-Way Hash without a Salt', 'Use of a One-Way Hash without a Salt', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a One-Way Hash with a Predictable Salt', 'Use of a One-Way Hash with a Predictable Salt', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Free of Pointer not at Start of Buffer', 'Free of Pointer not at Start of Buffer', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mismatched Memory Management Routines', 'Mismatched Memory Management Routines', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Release of Invalid Pointer or Reference', 'Release of Invalid Pointer or Reference', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Multiple Locks of a Critical Resource', 'Multiple Locks of a Critical Resource', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Multiple Unlocks of a Critical Resource', 'Multiple Unlocks of a Critical Resource', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Critical Variable Declared Public', 'Critical Variable Declared Public', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access to Critical Private Variable via Public Method', 'Access to Critical Private Variable via Public Method', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Short Circuit Evaluation', 'Incorrect Short Circuit Evaluation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('File Descriptor Exhaustion', 'File Descriptor Exhaustion', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Allocation of Resources Without Limits or Throttling', 'Allocation of Resources Without Limits or Throttling', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Reference to Active Allocated Resource', 'Missing Reference to Active Allocated Resource', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Release of Resource after Effective Lifetime', 'Missing Release of Resource after Effective Lifetime', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Reference to Active File Descriptor or Handle', 'Missing Reference to Active File Descriptor or Handle', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Allocation of File Descriptors or Handles Without Limits or Throttling', 'Allocation of File Descriptors or Handles Without Limits or Throttling', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Release of File Descriptor or Handle after Effective Lifetime', 'Missing Release of File Descriptor or Handle after Effective Lifetime', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unrestricted Recursive Entity References in DTDs (''XML Bomb'')', 'Unrestricted Recursive Entity References in DTDs (''XML Bomb'')', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Regular Expression without Anchors', 'Regular Expression without Anchors', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Logging', 'Insufficient Logging', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Logging of Excessive Data', 'Logging of Excessive Data', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of RSA Algorithm without OAEP', 'Use of RSA Algorithm without OAEP', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code', 'Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposed IOCTL with Insufficient Access Control', 'Exposed IOCTL with Insufficient Access Control', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Operator Precedence Logic Error', 'Operator Precedence Logic Error', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Cookies without Validation and Integrity Checking in a Security Decision', 'Reliance on Cookies without Validation and Integrity Checking in a Security Decision', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Path Manipulation Function without Maximum-sized Buffer', 'Use of Path Manipulation Function without Maximum-sized Buffer', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access of Memory Location Before Start of Buffer', 'Access of Memory Location Before Start of Buffer', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Out-of-bounds Write', 'Out-of-bounds Write', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access of Memory Location After End of Buffer', 'Access of Memory Location After End of Buffer', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Memory Allocation', 'Uncontrolled Memory Allocation', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Filtering of Special Elements', 'Improper Filtering of Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Filtering of Special Elements', 'Incomplete Filtering of Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Filtering of One or More Instances of Special Elements', 'Incomplete Filtering of One or More Instances of Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Only Filtering One Instance of a Special Element', 'Only Filtering One Instance of a Special Element', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Filtering of Multiple Instances of Special Elements', 'Incomplete Filtering of Multiple Instances of Special Elements', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Only Filtering Special Elements at a Specified Location', 'Only Filtering Special Elements at a Specified Location', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Only Filtering Special Elements Relative to a Marker', 'Only Filtering Special Elements Relative to a Marker', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Only Filtering Special Elements at an Absolute Position', 'Only Filtering Special Elements at an Absolute Position', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Hard-coded Credentials', 'Use of Hard-coded Credentials', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Control of Interaction Frequency', 'Improper Control of Interaction Frequency', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Guessable CAPTCHA', 'Guessable CAPTCHA', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Access with Incorrect Length Value', 'Buffer Access with Incorrect Length Value', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Access Using Size of Source Buffer', 'Buffer Access Using Size of Source Buffer', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Untrusted Inputs in a Security Decision', 'Reliance on Untrusted Inputs in a Security Decision', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Research Concepts', 'Research Concepts', @manual_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Comprehensive CWE Dictionary', 'Comprehensive CWE Dictionary', @manual_channel_id);

-- Skipfish
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SSL certificate issuer information', '10101', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('New HTTP cookie added', '10201', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('New ''Server'' header value seen', '10202', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('New ''Via'' header value seen', '10203', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('New ''X-*'' header value seen', '10204', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('New 404 signature seen', '10205', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Resource not directly accessible', '10401', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('HTTP authentication required', '10402', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Server error triggered', '10403', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('All external links', '10501', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External URL redirector', '10502', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('All e-mail addresses', '10503', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Links to unknown protocols', '10504', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unknown form field (can''t autocomplete)', '10505', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('HTML form (not classified otherwise)', '10601', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Password entry form - consider brute-force', '10602', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('File upload form', '10603', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('User-supplied link rendered on a page', '10701', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect or missing MIME type (low risk)', '10801', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Generic MIME used (low risk)', '10802', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect or missing charset (low risk)', '10803', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Conflicting MIME / charset info (low risk)', '10804', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Numerical filename - consider enumerating', '10901', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OGNL-like parameter behavior', '10902', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Resource fetch failed', '20101', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Limits exceeded, fetch suppressed', '20102', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory behavior checks failed (no brute force)', '20201', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Parent behavior checks failed (no brute force)', '20202', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('IPS filtering enabled', '20203', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('IPS filtering disabled again', '20204', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Response varies randomly, skipping checks', '20205', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Node should be a directory, detection error?', '20301', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('HTTP credentials seen in URLs', '30101', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SSL certificate expired or not yet valid', '30201', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Self-signed SSL certificate', '30202', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SSL certificate host name mismatch', '30203', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('No SSL certificate data found', '30204', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory listing restrictions bypassed', '30301', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Redirection to attacker-supplied URLs', '30401', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Attacker-supplied URLs in embedded content (lower risk)', '30402', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External content embedded on a page (lower risk)', '30501', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mixed content embedded on a page (lower risk)', '30502', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('HTML form with no apparent XSRF protection', '30601', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('JSON response with no apparent XSSI protection', '30602', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect caching directives (lower risk)', '30701', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('XSS vector in document body', '40101', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('XSS vector via arbitrary URLs', '40102', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('HTTP response header splitting', '40103', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Attacker-supplied URLs in embedded content (higher risk)', '40104', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External content embedded on a page (higher risk)', '40201', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mixed content embedded on a page (higher risk)', '40202', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect or missing MIME type (higher risk)', '40301', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Generic MIME type (higher risk)', '40302', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect or missing charset (higher risk)', '40304', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Conflicting MIME / charset info (higher risk)', '40305', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Interesting file', '40401', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory listing', '40401 Directory listing', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Interesting server message', '40402', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory traversal / file inclusion possible', '40501', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect caching directives (higher risk)', '40601', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Password form submits from or to non-HTTPS page', '40701', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Server-side XML injection vector', '50101', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Shell injection vector', '50102', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Query injection vector', '50103', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Format string vector', '50104', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Integer overflow vector', '50105', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL query or similar syntax in parameters', '50201', @skipfish_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PUT request accepted', '50301', @skipfish_channel_id);

-- w3af
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL injection vulnerability', 'SQL injection vulnerability', @w3af_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Blind SQL injection vulnerability', 'Blind SQL injection vulnerability', @w3af_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permanent cross site scripting vulnerability', 'Permanent cross site scripting vulnerability', @w3af_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('XPATH injection vulnerability', 'XPATH injection vulnerability', @w3af_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross site scripting vulnerability', 'Cross site scripting vulnerability', @w3af_channel_id);\
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Potentially Interesting File', 'Potentially Interesting File', @w3af_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('LDAP injection vulnerability', 'LDAP injection vulnerability', @w3af_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Format string vulnerability', 'Format string vulnerability', @w3af_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OS commanding vulnerability', 'OS commanding vulnerability', @w3af_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('eval() input injection vulnerability', 'eval() input injection vulnerability', @w3af_channel_id);

-- Burp Suite
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Private IP addresses disclosed', 'Private IP addresses disclosed', @burp_suite_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross-site scripting (reflected)', 'Cross-site scripting (reflected)', @burp_suite_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('HTML does not specify charset', 'HTML does not specify charset', @burp_suite_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory listing', 'Directory listing', @burp_suite_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL injection', 'SQL injection', @burp_suite_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OS command injection', 'OS command injection', @burp_suite_channel_id);

-- WebInspect
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL Injection Confirmed (No Data Extraction)', 'SQL Injection Confirmed (No Data Extraction)', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Hidden Form Value', 'Hidden Form Value', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Universal Arbitrary Command Execution (Pipe/Ampersand/Double Quote)', 'Universal Arbitrary Command Execution (Pipe/Ampersand/Double Quote)', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Universal Arbitrary Command Execution (Newline)', 'Universal Arbitrary Command Execution (Newline)', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Common Include Files (.inc)', 'Common Include Files (.inc)', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Common Documentation Text Files', 'Common Documentation Text Files', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('POST Parameters Accepted as GET Parameters', 'POST Parameters Accepted as GET Parameters', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Possible Insecure Cryptographic Hash (MD Family)', 'Possible Insecure Cryptographic Hash (MD Family)', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Possible Server Path Disclosure (unix)', 'Possible Server Path Disclosure (unix)', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PHP Error Message', 'PHP Error Message', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Universal Arbitrary Command Execution (Pipe/Ampersand)', 'Universal Arbitrary Command Execution (Pipe/Ampersand)', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Password in Query Data', 'Password in Query Data', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Subversion Keyword Information Disclosure', 'Subversion Keyword Information Disclosure', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PHP Test Page', 'PHP Test Page', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Internal IP Disclosure', 'Internal IP Disclosure', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('File Open Error Messages Detected', 'File Open Error Messages Detected', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Database Server Error Message', 'Database Server Error Message', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross-Site Scripting', 'Cross-Site Scripting', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Miscellaneous Product-Specific Directories', 'Miscellaneous Product-Specific Directories', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('"Admin" Directory', '"Admin" Directory', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Form Auto Complete Active', 'Form Auto Complete Active', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Possible File Upload Capability', 'Possible File Upload Capability', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Logins Sent Over Unencrypted Connection', 'Logins Sent Over Unencrypted Connection', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Environmental Variables Disclosure', 'Environmental Variables Disclosure', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('User supplied data without POST', 'User supplied data without POST', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Set-Cookie does not use HTTPOnly Keyword', 'Set-Cookie does not use HTTPOnly Keyword', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Potential filename found in comments', 'Potential filename found in comments', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Common Web Site Structure Directories', 'Common Web Site Structure Directories', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Persistent Cookies', 'Persistent Cookies', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Phpinfo() Information Disclosure', 'Phpinfo() Information Disclosure', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Server Error Response', 'Server Error Response', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Documentation Directories', 'Documentation Directories', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Possible PHP Source Code Disclosure', 'Possible PHP Source Code Disclosure', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Directory Listing', 'Directory Listing', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CGI and Scripting-Related Directories', 'CGI and Scripting-Related Directories', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Local File Inclusion/Reading Vulnerability', 'Local File Inclusion/Reading Vulnerability', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OPTIONS Method Supported', 'OPTIONS Method Supported', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Arbitrary Remote File Include', 'Arbitrary Remote File Include', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Universal Arbitrary Command Execution (Pipe/Ampersand/Single Quote)', 'Universal Arbitrary Command Execution (Pipe/Ampersand/Single Quote)', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Common Application Test Files', 'Common Application Test Files', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unencrypted Login Form', 'Unencrypted Login Form', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PHP Invalid Data Type Path Disclosure', 'PHP Invalid Data Type Path Disclosure', @webinspect_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Script File Extension Disclosure', 'Script File Extension Disclosure', @webinspect_channel_id);

-- Veracode 
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Location', '1', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Environment', '2', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Technology-specific Environment Issues', '3', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Environment Issues', '4', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Misconfiguration: Data Transmission Without Encryption', '5', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Misconfiguration: Insufficient Session-ID Length', '6', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Misconfiguration: Missing Custom Error Page', '7', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Misconfiguration: Entity Bean Declared Remote', '8', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Misconfiguration: Weak Access Permissions for EJB Methods', '9', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Environment Issues', '10', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Creating Debug Binary', '11', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Missing Custom Error Page', '12', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Password in Configuration File', '13', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Compiler Removal of Code to Clear Buffers', '14', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Control of System or Configuration Setting', '15', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Configuration', '16', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Code', '17', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Source Code', '18', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Data Handling', '19', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Input Validation', '20', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Pathname Traversal and Equivalence Errors', '21', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Limitation of a Pathname to a Restricted Directory (''Path Traversal'')', '22', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Relative Path Traversal', '23', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''../filedir''', '24', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''/../filedir''', '25', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''/dir/../filename''', '26', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''dir/../../filename''', '27', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''..\filedir''', '28', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''\..\filename''', '29', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''\dir\..\filename''', '30', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''dir\..\..\filename''', '31', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''...'' (Triple Dot)', '32', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''....'' (Multiple Dot)', '33', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''....//''', '34', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''.../...//''', '35', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Absolute Path Traversal', '36', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''/absolute/pathname/here''', '37', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''\absolute\pathname\here''', '38', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''C:dirname''', '39', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Traversal: ''UNC share name'' (Windows UNC Share)', '40', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Resolution of Path Equivalence', '41', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filename.'' (Trailing Dot)', '42', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filename....'' (Multiple Trailing Dot)', '43', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''file.name'' (Internal Dot)', '44', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''file...name'' (Multiple Internal Dot)', '45', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filename '' (Trailing Space)', '46', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: '' filename (Leading Space)', '47', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''file name'' (Internal Whitespace)', '48', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filename/'' (Trailing Slash)', '49', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''//multiple/leading/slash''', '50', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''/multiple//internal/slash''', '51', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''/multiple/trailing/slash//''', '52', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''\multiple\\internal\backslash''', '53', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filedir'' (Trailing Backslash)', '54', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''/./'' (Single Dot Directory)', '55', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''filedir*'' (Wildcard)', '56', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: ''fakedir/../realdir/filename''', '57', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Path Equivalence: Windows 8.3 Filename', '58', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Link Resolution Before File Access (''Link Following'')', '59', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UNIX Path Link Problems', '60', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UNIX Symbolic Link (Symlink) Following', '61', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UNIX Hard Link', '62', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windows Path Link Problems', '63', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windows Shortcut Following (.LNK)', '64', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windows Hard Link', '65', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of File Names that Identify Virtual Resources', '66', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Windows Device Names', '67', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Windows Virtual File Problems', '68', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Windows ::DATA Alternate Data Stream', '69', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mac Virtual File Problems', '70', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Apple ''.DS_Store''', '71', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Apple HFS+ Alternate Data Stream Path', '72', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Control of File Name or Path', '73', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Data into a Different Plane (''Injection'')', '74', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)', '75', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Resolve Equivalent Special Elements into a Different Plane', '76', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Special Elements used in a Command (''Command Injection'')', '77', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Special Elements used in an OS Command (''OS Command Injection'')', '78', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Preserve Web Page Structure (''Cross-site Scripting'')', '79', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Script-Related HTML Tags in a Web Page (Basic XSS)', '80', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Script in an Error Message Web Page', '81', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Script in Attributes of IMG Tags in a Web Page', '82', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Script in Attributes in a Web Page', '83', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Resolve Encoded URI Schemes in a Web Page', '84', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Doubled Character XSS Manipulations', '85', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Invalid Characters in Identifiers in Web Pages', '86', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Alternate XSS Syntax', '87', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Argument Injection or Modification', '88', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Special Elements used in an SQL Command (''SQL Injection'')', '89', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Data into LDAP Queries (''LDAP Injection'')', '90', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('XML Injection (aka Blind XPath Injection)', '91', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: Improper Sanitization of Custom Special Characters', '92', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize CRLF Sequences (''CRLF Injection'')', '93', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Control Generation of Code (''Code Injection'')', '94', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Directives in Dynamically Evaluated Code (''Eval Injection'')', '95', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Directives in Statically Saved Code (''Static Code Injection'')', '96', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Server-Side Includes (SSI) Within a Web Page', '97', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Control of Filename for Include/Require Statement in PHP Program (''PHP File Inclusion'')', '98', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Control of Resource Identifiers (''Resource Injection'')', '99', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Technology-Specific Input Validation Problems', '100', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts Validation Problems', '101', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Duplicate Validation Forms', '102', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Incomplete validate() Method Definition', '103', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Form Bean Does Not Extend Validation Class', '104', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Form Field Without Validator', '105', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Plug-in Framework not in Use', '106', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Unused Validation Form', '107', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Unvalidated Action Form', '108', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Validator Turned Off', '109', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Validator Without Form Field', '110', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Direct Use of Unsafe JNI', '111', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing XML Validation', '112', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize CRLF Sequences in HTTP Headers (''HTTP Response Splitting'')', '113', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Process Control', '114', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Misinterpretation of Input', '115', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Encoding or Escaping of Output', '116', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Output Sanitization for Logs', '117', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Access of Indexable Resource (''Range Error'')', '118', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Constrain Operations within the Bounds of a Memory Buffer', '119', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Copy without Checking Size of Input (''Classic Buffer Overflow'')', '120', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Stack-based Buffer Overflow', '121', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Heap-based Buffer Overflow', '122', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Write-what-where Condition', '123', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Underwrite (''Buffer Underflow'')', '124', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Out-of-bounds Read', '125', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Over-read', '126', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Under-read', '127', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Wrap-around Error', '128', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Validation of Array Index', '129', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Length Parameter Inconsistency ', '130', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Calculation of Buffer Size', '131', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): Miscalculated Null Termination', '132', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('String Errors', '133', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Format String', '134', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Calculation of Multi-Byte String Length', '135', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Type Errors', '136', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Representation Errors', '137', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Special Elements', '138', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: General Special Element Problems', '139', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Delimiters', '140', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Parameter/Argument Delimiters', '141', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Value Delimiters', '142', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Record Delimiters', '143', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Line Delimiters', '144', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Section Delimiters', '145', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Expression/Command Delimiters', '146', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Input Terminators', '147', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Input Leaders', '148', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Quoting Syntax', '149', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Escape, Meta, or Control Sequences', '150', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Comment Delimiters', '151', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Macro Symbols', '152', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Substitution Characters', '153', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Variable Name Delimiters', '154', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Wildcards or Matching Symbols', '155', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Whitespace', '156', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Paired Delimiters', '157', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Null Byte or NUL Character', '158', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Special Element', '159', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Leading Special Elements', '160', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Multiple Leading Special Elements', '161', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Trailing Special Elements', '162', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Multiple Trailing Special Elements', '163', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Internal Special Elements', '164', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of Multiple Internal Special Elements', '165', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Missing Special Element', '166', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Additional Special Element', '167', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Resolve Inconsistent Special Elements', '168', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Technology-Specific Special Elements', '169', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Null Termination', '170', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cleansing, Canonicalization, and Comparison Errors', '171', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Encoding Error', '172', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Alternate Encoding', '173', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Double Decoding of the Same Data', '174', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Mixed Encoding', '175', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Unicode Encoding', '176', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle URL Encoding (Hex Encoding)', '177', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Resolve Case Sensitivity', '178', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Early Validation', '179', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Validate Before Canonicalize', '180', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Validate Before Filter', '181', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Collapse of Data Into Unsafe Value', '182', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permissive Whitelist', '183', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Blacklist', '184', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Regular Expression', '185', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Overly Restrictive Regular Expression', '186', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Partial Comparison', '187', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Data/Memory Layout', '188', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Numeric Errors', '189', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Integer Overflow or Wraparound', '190', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Integer Underflow (Wrap or Wraparound)', '191', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Integer Coercion Error', '192', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Off-by-one Error', '193', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unexpected Sign Extension', '194', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Signed to Unsigned Conversion Error', '195', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unsigned to Signed Conversion Error', '196', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Numeric Truncation Error', '197', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Incorrect Byte Ordering', '198', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Management Errors', '199', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure', '200', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Sent Data', '201', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privacy Leak through Data Queries', '202', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure Through Discrepancy', '203', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Response Discrepancy Information Leak', '204', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure Through Behavioral Discrepancy', '205', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Internal Behavioral Inconsistency Information Leak', '206', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure Through an External Behavioral Inconsistency', '207', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Timing Discrepancy Information Leak', '208', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Exposure Through an Error Message', '209', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Product-Generated Error Message Information Leak', '210', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Product-External Error Message Information Leak', '211', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Cross-boundary Removal of Sensitive Data', '212', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Intended Information Leak', '213', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Process Environment Information Leak', '214', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Debug Information', '215', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Containment Errors (Container Errors)', '216', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: Failure to Protect Stored Data from Modification', '217', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): Failure to provide confidentiality for stored data', '218', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Data Under Web Root', '219', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Data Under FTP Root', '220', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Loss or Omission', '221', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Truncation of Security-relevant Information', '222', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Omission of Security-relevant Information', '223', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Obscured Security-relevant Information by Alternate Name', '224', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): General Information Management Problems', '225', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Information Uncleared Before Release', '226', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Fulfill API Contract (''API Abuse'')', '227', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Syntactically Invalid Structure', '228', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Values', '229', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Missing Values', '230', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Extra Values', '231', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Undefined Values', '232', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Parameter Problems', '233', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Missing Parameter', '234', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Extra Parameters', '235', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Undefined Parameters', '236', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Structural Elements', '237', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Incomplete Structural Elements', '238', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Incomplete Element', '239', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Inconsistent Structural Elements', '240', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Unexpected Data Type', '241', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Inherently Dangerous Function', '242', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Change Working Directory in chroot Jail', '243', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Clear Heap Memory Before Release (''Heap Inspection'')', '244', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Bad Practices: Direct Management of Connections', '245', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Bad Practices: Direct Use of Sockets', '246', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on DNS Lookups in a Security Decision', '247', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncaught Exception', '248', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: Often Misused: Path Manipulation', '249', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Execution with Unnecessary Privileges', '250', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Often Misused: String Management', '251', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unchecked Return Value', '252', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Check of Function Return Value', '253', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Security Features', '254', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Credentials Management', '255', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage of a Password', '256', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Storing Passwords in a Recoverable Format', '257', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Empty Password in Configuration File', '258', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Hard-coded Password', '259', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Password in Configuration File', '260', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weak Cryptography for Passwords', '261', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Not Using Password Aging', '262', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Password Aging with Long Expiration', '263', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permissions, Privileges, and Access Controls', '264', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege / Sandbox Issues', '265', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Privilege Assignment', '266', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege Defined With Unsafe Actions', '267', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege Chaining', '268', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Privilege Management', '269', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege Context Switching Error', '270', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privilege Dropping / Lowering Errors', '271', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Least Privilege Violation', '272', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Check for Dropped Privileges', '273', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Insufficient Privileges', '274', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permission Issues', '275', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Default Permissions', '276', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insecure Inherited Permissions', '277', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insecure Preserved Inherited Permissions', '278', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Execution-Assigned Permissions', '279', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Insufficient Permissions or Privileges ', '280', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Preservation of Permissions', '281', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Ownership Management', '282', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unverified Ownership', '283', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access Control (Authorization) Issues', '284', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Access Control (Authorization)', '285', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect User Management', '286', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Authentication', '287', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass Using an Alternate Path or Channel', '288', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Alternate Name', '289', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Spoofing', '290', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trusting Self-reported IP Address', '291', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trusting Self-reported DNS Name', '292', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Using Referer Field for Authentication', '293', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Capture-replay', '294', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Certificate Issues', '295', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Following of Chain of Trust for Certificate Validation', '296', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Validation of Host-specific Certificate Data', '297', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Validation of Certificate Expiration', '298', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Check for Certificate Revocation', '299', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Channel Accessible by Non-Endpoint (''Man-in-the-Middle'')', '300', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reflection Attack in an Authentication Protocol', '301', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Assumed-Immutable Data', '302', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Implementation of Authentication Algorithm', '303', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Critical Step in Authentication', '304', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass by Primary Weakness', '305', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Authentication for Critical Function', '306', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Restriction of Excessive Authentication Attempts', '307', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Single-factor Authentication', '308', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Password System for Primary Authentication', '309', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cryptographic Issues', '310', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Encryption of Sensitive Data', '311', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cleartext Storage of Sensitive Information', '312', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in a File or on Disk', '313', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in the Registry', '314', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in a Cookie', '315', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in Memory', '316', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in GUI', '317', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Plaintext Storage in Executable', '318', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cleartext Transmission of Sensitive Information', '319', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Key Management Errors', '320', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Hard-coded Cryptographic Key', '321', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Key Exchange without Entity Authentication', '322', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reusing a Nonce, Key Pair in Encryption', '323', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a Key Past its Expiration Date', '324', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Required Cryptographic Step', '325', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Inadequate Encryption Strength', '326', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a Broken or Risky Cryptographic Algorithm', '327', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reversible One-Way Hash', '328', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Not Using a Random IV with CBC Mode', '329', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Insufficiently Random Values', '330', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Entropy', '331', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Entropy in PRNG', '332', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Insufficient Entropy in TRNG', '333', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Small Space of Random Values', '334', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PRNG Seed Error', '335', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Same Seed in PRNG', '336', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictable Seed in PRNG', '337', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Cryptographically Weak PRNG', '338', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Small Seed Space in PRNG', '339', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictability Problems', '340', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictable from Observable State', '341', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictable Exact Value from Previous Values', '342', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Predictable Value Range from Previous Values', '343', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Invariant Value in Dynamically Changing Context', '344', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Verification of Data Authenticity', '345', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Origin Validation Error', '346', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Verification of Cryptographic Signature', '347', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Less Trusted Source', '348', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Acceptance of Extraneous Untrusted Data With Trusted Data', '349', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improperly Trusted Reverse DNS', '350', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Type Distinction', '351', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Cross-Site Request Forgery (CSRF)', '352', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Add Integrity Check Value', '353', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Validation of Integrity Check Value', '354', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('User Interface Security Issues', '355', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Product UI does not Warn User of Unsafe Actions', '356', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient UI Warning of Dangerous Operations', '357', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improperly Implemented Security Check for Standard', '358', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Privacy Violation', '359', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trust of System Event Data', '360', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Time and State', '361', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition', '362', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition Enabling Link Following', '363', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Signal Handler Race Condition', '364', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition in Switch', '365', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition within a Thread', '366', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Time-of-check Time-of-use (TOCTOU) Race Condition', '367', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Context Switching Race Condition', '368', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Divide By Zero', '369', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Check for Certificate Revocation after Initial Check', '370', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('State Issues', '371', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Internal State Distinction', '372', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('State Synchronization Error', '373', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mutable Objects Passed by Reference', '374', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Passing Mutable Objects to an Untrusted Method', '375', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Temporary File Issues', '376', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insecure Temporary File', '377', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Creation of Temporary File With Insecure Permissions', '378', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Creation of Temporary File in Directory with Incorrect Permissions', '379', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Technology-Specific Time and State Issues', '380', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Time and State Issues', '381', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Bad Practices: Use of System.exit()', '382', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Bad Practices: Direct Use of Threads', '383', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Session Fixation', '384', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Covert Timing Channel', '385', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Symbolic Name not Mapping to Correct Object', '386', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Signal Errors', '387', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Error Handling', '388', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Error Conditions, Return Values, Status Codes', '389', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Detection of Error Condition Without Action', '390', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unchecked Error Condition', '391', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Report Error in Status Code', '392', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Return of Wrong Status Code', '393', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unexpected Status Code or Return Value', '394', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of NullPointerException Catch to Detect NULL Pointer Dereference', '395', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Declaration of Catch for Generic Exception', '396', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Declaration of Throws for Generic Exception', '397', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Indicator of Poor Code Quality', '398', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Resource Management Errors', '399', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Resource Consumption (''Resource Exhaustion'')', '400', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Release Memory Before Removing Last Reference (''Memory Leak'')', '401', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Transmission of Private Resources into a New Sphere (''Resource Leak'')', '402', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UNIX File Descriptor Leak', '403', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Resource Shutdown or Release', '404', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Asymmetric Resource Consumption (Amplification)', '405', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Control of Network Message Volume (Network Amplification)', '406', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Algorithmic Complexity', '407', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Early Amplification', '408', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Highly Compressed Data (Data Amplification)', '409', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Resource Pool', '410', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Resource Locking Problems', '411', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unrestricted Externally Accessible Lock', '412', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Resource Locking', '413', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Lock Check', '414', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Double Free', '415', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use After Free', '416', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Channel and Path Errors', '417', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Channel Errors', '418', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unprotected Primary Channel', '419', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unprotected Alternate Channel', '420', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Race Condition During Access to Alternate Channel', '421', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unprotected Windows Messaging Channel (''Shatter'')', '422', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): Proxied Trusted Channel', '423', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Protect Alternate Path', '424', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Direct Request (''Forced Browsing'')', '425', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Untrusted Search Path', '426', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Search Path Element', '427', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unquoted Search Path or Element', '428', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Handler Errors', '429', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Deployment of Wrong Handler', '430', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Handler', '431', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Dangerous Handler not Disabled During Sensitive Operations', '432', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unparsed Raw Web Content Delivery', '433', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unrestricted Upload of File with Dangerous Type', '434', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Interaction Error', '435', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Interpretation Conflict', '436', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Model of Endpoint Features', '437', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Behavioral Problems', '438', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Behavioral Change in New Version or Environment', '439', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Expected Behavior Violation', '440', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unintended Proxy/Intermediary', '441', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Web Problems', '442', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): HTTP response splitting', '443', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Inconsistent Interpretation of HTTP Requests (''HTTP Request Smuggling'')', '444', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('User Interface Errors', '445', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UI Discrepancy for Security Feature', '446', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unimplemented or Unsupported Feature in UI', '447', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Obsolete Feature in UI', '448', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('The UI Performs the Wrong Action', '449', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Multiple Interpretations of UI Input', '450', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('UI Misrepresentation of Critical Information', '451', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Initialization and Cleanup Errors', '452', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insecure Default Variable Initialization', '453', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Initialization of Trusted Variables or Data Stores', '454', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Non-exit on Failed Initialization', '455', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Initialization', '456', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Uninitialized Variable', '457', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED: Incorrect Initialization', '458', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Cleanup', '459', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Cleanup on Thrown Exception', '460', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Data Structure Issues', '461', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Duplicate Key in Associative List (Alist)', '462', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Deletion of Data Structure Sentinel', '463', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Addition of Data Structure Sentinel', '464', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Pointer Issues', '465', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Return of Pointer Value Outside of Expected Range', '466', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of sizeof() on a Pointer Type', '467', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Pointer Scaling', '468', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Pointer Subtraction to Determine Size', '469', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Externally-Controlled Input to Select Classes or Code (''Unsafe Reflection'')', '470', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Modification of Assumed-Immutable Data (MAID)', '471', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Control of Assumed-Immutable Web Parameter', '472', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('PHP External Variable Modification', '473', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Function with Inconsistent Implementations', '474', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Undefined Behavior for Input to API', '475', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('NULL Pointer Dereference', '476', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Obsolete Functions', '477', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Default Case in Switch Statement', '478', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unsafe Function Call from a Signal Handler', '479', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Incorrect Operator', '480', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Assigning instead of Comparing', '481', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Comparing instead of Assigning', '482', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Block Delimitation', '483', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Omitted Break Statement in Switch', '484', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Encapsulation', '485', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Comparison of Classes by Name', '486', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Package-level Scope', '487', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Data Leak Between Sessions', '488', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Leftover Debug Code', '489', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mobile Code Issues', '490', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Public cloneable() Method Without Final (''Object Hijack'')', '491', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Inner Class Containing Sensitive Data', '492', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Critical Public Variable Without Final Modifier', '493', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Download of Code Without Integrity Check', '494', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Private Array-Typed Field Returned From A Public Method', '495', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Public Data Assigned to Private Array-Typed Field', '496', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of System Data to an Unauthorized Control Sphere', '497', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak through Class Cloning', '498', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Serializable Class Containing Sensitive Data', '499', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Public Static Field Not Marked Final', '500', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trust Boundary Violation', '501', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Deserialization of Untrusted Data', '502', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Byte/Object Code', '503', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Motivation/Intent', '504', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Intentionally Introduced Weakness', '505', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Embedded Malicious Code', '506', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trojan Horse', '507', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Non-Replicating Malicious Code', '508', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Replicating Malicious Code (Virus or Worm)', '509', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trapdoor', '510', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Logic/Time Bomb', '511', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Spyware', '512', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Intentionally Introduced Nonmalicious Weakness', '513', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Covert Channel', '514', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Covert Storage Channel', '515', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('DEPRECATED (Duplicate): Covert Timing Channel', '516', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Other Intentional, Nonmalicious Weakness', '517', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Inadvertently Introduced Weakness', '518', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('.NET Environment Issues', '519', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('.NET Misconfiguration: Use of Impersonation', '520', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weak Password Requirements', '521', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficiently Protected Credentials', '522', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unprotected Transport of Credentials', '523', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Caching', '524', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Browser Caching', '525', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Environmental Variables', '526', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of CVS Repository to an Unauthorized Control Sphere', '527', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of Core Dump File to an Unauthorized Control Sphere', '528', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of Access Control List Files to an Unauthorized Control Sphere', '529', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of Backup File to an Unauthorized Control Sphere', '530', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Test Code', '531', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Log Files', '532', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Server Log Files', '533', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Debug Log Files', '534', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Shell Error Message', '535', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Servlet Runtime Error Message', '536', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Java Runtime Error Message', '537', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('File and Directory Information Exposure', '538', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Persistent Cookies', '539', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Source Code', '540', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Include Source Code', '541', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Cleanup Log Files', '542', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Singleton Pattern in a Non-thread-safe Manner', '543', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Use a Standardized Error Handling Mechanism', '544', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Dynamic Class Loading', '545', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Suspicious Comment', '546', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Hard-coded, Security-relevant Constants', '547', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Directory Listing', '548', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Password Field Masking', '549', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Server Error Message', '550', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order: Authorization Before Parsing and Canonicalization', '551', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Files or Directories Accessible to External Parties', '552', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Command Shell in Externally Accessible Directory', '553', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Not Using Input Validation Framework', '554', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Misconfiguration: Plaintext Password in Configuration File', '555', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('ASP.NET Misconfiguration: Use of Identity Impersonation', '556', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Concurrency Issues', '557', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of getlogin() in Multithreaded Application', '558', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Often Misused: Arguments and Parameters', '559', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of umask() with chmod-style Argument', '560', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Dead Code', '561', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Return of Stack Variable Address', '562', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unused Variable', '563', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('SQL Injection: Hibernate', '564', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Cookies without Validation and Integrity Checking', '565', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access Control Bypass Through User-Controlled SQL Primary Key', '566', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unsynchronized Access to Shared Data', '567', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('finalize() Method Without super.finalize()', '568', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Expression Issues', '569', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Expression is Always False', '570', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Expression is Always True', '571', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Call to Thread run() instead of start()', '572', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Follow Specification', '573', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of Synchronization Primitives', '574', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of AWT Swing', '575', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of Java I/O', '576', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of Sockets', '577', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('EJB Bad Practices: Use of Class Loader', '578', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Bad Practices: Non-serializable Object Stored in Session', '579', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('clone() Method Without super.clone()', '580', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Object Model Violation: Just One of Equals and Hashcode Defined', '581', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Array Declared Public, Final, and Static', '582', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('finalize() Method Declared Public', '583', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Return Inside Finally Block', '584', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Empty Synchronized Block', '585', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Explicit Call to Finalize()', '586', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Assignment of a Fixed Address to a Pointer', '587', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Attempt to Access Child of a Non-structure Pointer', '588', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Call to Non-ubiquitous API', '589', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Free of Memory not on the Heap', '590', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Data Storage in Improperly Locked Memory', '591', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass Issues', '592', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created', '593', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('J2EE Framework: Saving Unserializable Objects to Disk', '594', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Comparison of Object References Instead of Object Contents', '595', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Semantic Object Comparison', '596', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Wrong Operator in String Comparison', '597', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Query Strings in GET Request', '598', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trust of OpenSSL Certificate Without Validation', '599', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Catch All Exceptions in Servlet ', '600', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('URL Redirection to Untrusted Site (''Open Redirect'')', '601', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Client-Side Enforcement of Server-Side Security', '602', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Client-Side Authentication', '603', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Deprecated Entries', '604', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Multiple Binds to the Same Port', '605', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unchecked Input for Loop Condition', '606', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Public Static Final Field References Mutable Object', '607', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Struts: Non-private Field in ActionForm Class', '608', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Double-Checked Locking', '609', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Externally Controlled Reference to a Resource in Another Sphere', '610', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through XML External Entity File Disclosure', '611', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Indexing of Private Data', '612', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Session Expiration', '613', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Sensitive Cookie in HTTPS Session Without ''Secure'' Attribute', '614', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak Through Comments', '615', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Identification of Uploaded File Variables (PHP)', '616', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reachable Assertion', '617', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposed Unsafe ActiveX Method', '618', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Dangling Database Cursor (''Cursor Injection'')', '619', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unverified Password Change', '620', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Variable Extraction Error', '621', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unvalidated Function Hook Arguments', '622', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unsafe ActiveX Control Marked Safe For Scripting', '623', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Executable Regular Expression Error', '624', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permissive Regular Expression', '625', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Null Byte Interaction Error (Poison Null Byte)', '626', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Dynamic Variable Evaluation', '627', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call with Incorrectly Specified Arguments', '628', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in OWASP Top Ten (2007)', '629', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Examined by SAMATE', '630', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Resource-specific Weaknesses', '631', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses that Affect Files or Directories', '632', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses that Affect Memory', '633', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses that Affect System Processes', '634', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Used by NVD', '635', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Not Failing Securely (''Failing Open'')', '636', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Use Economy of Mechanism', '637', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Use Complete Mediation', '638', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access Control Bypass Through User-Controlled Key', '639', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weak Password Recovery Mechanism for Forgotten Password', '640', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Filtering of File and Other Resource Names for Executable Content', '641', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Control of Critical State Data', '642', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Data within XPath Expressions (''XPath injection'')', '643', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Sanitization of HTTP Headers for Scripting Syntax', '644', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Overly Restrictive Account Lockout Mechanism', '645', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on File Name or Extension of Externally-Supplied File', '646', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Non-Canonical URL Paths for Authorization Decisions', '647', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Use of Privileged APIs', '648', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking', '649', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Trusting HTTP Permission Methods on the Server Side', '650', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Information Leak through WSDL File', '651', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Sanitize Data within XQuery Expressions (''XQuery Injection'')', '652', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Compartmentalization', '653', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on a Single Factor in a Security Decision', '654', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Psychological Acceptability', '655', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Security through Obscurity', '656', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Violation of Secure Design Principles', '657', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in Software Written in C', '658', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in Software Written in C++', '659', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in Software Written in Java', '660', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in Software Written in PHP', '661', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Synchronization', '662', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a Non-reentrant Function in an Unsynchronized Context', '663', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Control of a Resource Through its Lifetime', '664', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Initialization', '665', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Operation on Resource in Wrong Phase of Lifetime', '666', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Locking', '667', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposure of Resource to Wrong Sphere', '668', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Resource Transfer Between Spheres', '669', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Always-Incorrect Control Flow Implementation', '670', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Lack of Administrator Control over Security', '671', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Operation on a Resource after Expiration or Release', '672', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('External Influence of Sphere Definition', '673', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Recursion', '674', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Duplicate Operations on Resource', '675', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Potentially Dangerous Function', '676', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weakness Base Elements', '677', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Composites', '678', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Chain Elements', '679', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Integer Overflow to Buffer Overflow', '680', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Conversion between Numeric Types', '681', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Calculation', '682', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrect Order of Arguments', '683', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Provide Specified Functionality', '684', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrect Number of Arguments', '685', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrect Argument Type', '686', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrectly Specified Argument Value', '687', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Function Call With Incorrect Variable or Reference as Argument', '688', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Permission Race Condition During Resource Copy', '689', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unchecked Return Value to NULL Pointer Dereference', '690', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Control Flow Management', '691', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Blacklist to Cross-Site Scripting', '692', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Protection Mechanism Failure', '693', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Multiple Resources with Duplicate Identifier', '694', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Low-Level Functionality', '695', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Behavior Order', '696', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Comparison', '697', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Redirect Without Exit', '698', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Development Concepts', '699', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Seven Pernicious Kingdoms', '700', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Introduced During Design', '701', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Introduced During Implementation', '702', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Failure to Handle Exceptional Conditions', '703', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Type Conversion or Cast', '704', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Control Flow Scoping', '705', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Incorrectly-Resolved Name or Reference', '706', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Enforcement of Message or Data Structure', '707', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Ownership Assignment', '708', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Named Chains', '709', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Coding Standards Violation', '710', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in OWASP Top Ten (2004)', '711', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A1 - Cross Site Scripting (XSS)', '712', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A2 - Injection Flaws', '713', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A3 - Malicious File Execution', '714', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A4 - Insecure Direct Object Reference', '715', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A5 - Cross Site Request Forgery (CSRF)', '716', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A6 - Information Leakage and Improper Error Handling', '717', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A7 - Broken Authentication and Session Management', '718', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A8 - Insecure Cryptographic Storage', '719', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A9 - Insecure Communications', '720', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2007 Category A10 - Failure to Restrict URL Access', '721', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A1 - Unvalidated Input', '722', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A2 - Broken Access Control', '723', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A3 - Broken Authentication and Session Management', '724', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A4 - Cross-Site Scripting (XSS) Flaws', '725', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A5 - Buffer Overflows', '726', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A6 - Injection Flaws', '727', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A7 - Improper Error Handling', '728', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A8 - Insecure Storage', '729', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A9 - Denial of Service', '730', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('OWASP Top Ten 2004 Category A10 - Insecure Configuration Management', '731', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Permission Assignment for Critical Resource', '732', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Compiler Optimization Removal or Modification of Security-critical Code', '733', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses Addressed by the CERT C Secure Coding Standard', '734', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 01 - Preprocessor (PRE)', '735', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 02 - Declarations and Initialization (DCL)', '736', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 03 - Expressions (EXP)', '737', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 04 - Integers (INT)', '738', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 05 - Floating Point (FLP)', '739', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 06 - Arrays (ARR)', '740', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 07 - Characters and Strings (STR)', '741', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 08 - Memory Management (MEM)', '742', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 09 - Input Output (FIO)', '743', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 10 - Environment (ENV)', '744', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 11 - Signals (SIG)', '745', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 12 - Error Handling (ERR)', '746', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 49 - Miscellaneous (MSC)', '747', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('CERT C Secure Coding Section 50 - POSIX (POS)', '748', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposed Dangerous Method or Function', '749', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in the 2009 CWE/SANS Top 25 Most Dangerous Programming Errors', '750', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('2009 Top 25 - Insecure Interaction Between Components', '751', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('2009 Top 25 - Risky Resource Management', '752', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('2009 Top 25 - Porous Defenses', '753', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Check for Unusual or Exceptional Conditions', '754', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Handling of Exceptional Conditions', '755', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Custom Error Page', '756', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Selection of Less-Secure Algorithm During Negotiation (''Algorithm Downgrade'')', '757', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Undefined, Unspecified, or Implementation-Defined Behavior', '758', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a One-Way Hash without a Salt', '759', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of a One-Way Hash with a Predictable Salt', '760', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Free of Pointer not at Start of Buffer', '761', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Mismatched Memory Management Routines', '762', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Release of Invalid Pointer or Reference', '763', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Multiple Locks of a Critical Resource', '764', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Multiple Unlocks of a Critical Resource', '765', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Critical Variable Declared Public', '766', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access to Critical Private Variable via Public Method', '767', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incorrect Short Circuit Evaluation', '768', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('File Descriptor Exhaustion', '769', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Allocation of Resources Without Limits or Throttling', '770', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Reference to Active Allocated Resource', '771', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Release of Resource after Effective Lifetime', '772', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Reference to Active File Descriptor or Handle', '773', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Allocation of File Descriptors or Handles Without Limits or Throttling', '774', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Missing Release of File Descriptor or Handle after Effective Lifetime', '775', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Unrestricted Recursive Entity References in DTDs (''XML Bomb'')', '776', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Regular Expression without Anchors', '777', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Insufficient Logging', '778', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Logging of Excessive Data', '779', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of RSA Algorithm without OAEP', '780', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code', '781', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Exposed IOCTL with Insufficient Access Control', '782', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Operator Precedence Logic Error', '783', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Cookies without Validation and Integrity Checking in a Security Decision', '784', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Path Manipulation Function without Maximum-sized Buffer', '785', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access of Memory Location Before Start of Buffer', '786', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Out-of-bounds Write', '787', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Access of Memory Location After End of Buffer', '788', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Uncontrolled Memory Allocation', '789', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Filtering of Special Elements', '790', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Filtering of Special Elements', '791', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Filtering of One or More Instances of Special Elements', '792', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Only Filtering One Instance of a Special Element', '793', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Incomplete Filtering of Multiple Instances of Special Elements', '794', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Only Filtering Special Elements at a Specified Location', '795', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Only Filtering Special Elements Relative to a Marker', '796', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Only Filtering Special Elements at an Absolute Position', '797', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Use of Hard-coded Credentials', '798', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Improper Control of Interaction Frequency', '799', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors', '800', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('2010 Top 25 - Insecure Interaction Between Components', '801', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('2010 Top 25 - Risky Resource Management', '802', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('2010 Top 25 - Porous Defenses', '803', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Guessable CAPTCHA', '804', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Access with Incorrect Length Value', '805', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Buffer Access Using Size of Source Buffer', '806', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Reliance on Untrusted Inputs in a Security Decision', '807', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('2010 Top 25 - Weaknesses On the Cusp', '808', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Research Concepts', '1000', @veracode_channel_id);
INSERT INTO ChannelVulnerability (name, code, channelTypeId) VALUES ('Comprehensive CWE Dictionary', '2000', @veracode_channel_id);

-- ------------------------------------
-- INSERT CHANNEL SEVERITY MAPPINGS ---
-- ------------------------------------

-- CAT.NET
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @cat_net_channel_id AND name = 'SQL Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @cat_net_channel_id AND name = 'Process Command Execution'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @cat_net_channel_id AND name = 'File Canonicalization'), @generic_vulnerability_incorrect_behavior_order_validate_before_canonicalize_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @cat_net_channel_id AND name = 'Exception Information'), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @cat_net_channel_id AND name = 'Cross-Site Scripting'), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @cat_net_channel_id AND name = 'Redirection to User Controlled Site'), @generic_vulnerability_url_redirection_to_untrusted_site_open_redirect_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @cat_net_channel_id AND name = 'XPath Injection'), @generic_vulnerability_failure_to_sanitize_data_within_xpath_expressions_xpath_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @cat_net_channel_id AND name = 'LDAP Injection'), @generic_vulnerability_failure_to_sanitize_data_into_ldap_queries_ldap_injection_id);    
 
-- AppScan
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "ApplicationTestScriptDetected"), @generic_vulnerability_information_leak_through_test_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "CompressedDirectoryFound"), @generic_vulnerability_direct_request_forced_browsing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "DirectAccesstoAdministrationPages"), @generic_vulnerability_direct_request_forced_browsing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GD_DirListing"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GD_EmailAddress"), @generic_vulnerability_privacy_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GD_InternalIP"), @generic_vulnerability_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GD_PathDisclosure"), @generic_vulnerability_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GD_SSN"), @generic_vulnerability_privacy_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GD_SourceCodeDisclosure"), @generic_vulnerability_information_leak_through_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GD_flashAllowScriptAccessSetToAlways"), @generic_vulnerability_missing_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GETParamOverSSL"), @generic_vulnerability_information_leak_through_query_strings_in_get_request_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GV_SQLErr"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "GV_StoredXSS"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "IPBXSS"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "LoginErrMsgPossibleBruteForce"), @generic_vulnerability_response_discrepancy_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "MSIISMissingHostHeaderInformationLeakage"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "MacromediaDreamweaverRemoteDatabaseScriptsInformationLeakage"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "MicrosoftASPNETDebuggingEnabled"), );
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "MusicBoxMultipleXSS"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "OracleAppSrvXSS"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "OracleLogFileInformationDisclosure"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "PHPBasedPathDisc"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "PotentialFileUpload"), @generic_vulnerability_unrestricted_upload_of_file_with_dangerous_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "SSL_CertWithBadCN"), @generic_vulnerability_improper_validation_of_host_specific_certificate_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "ScryPathTraversal"), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "SessionFixation"), @generic_vulnerability_session_fixation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "SqlInjectionDeclareCast"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "WebStudioMultipleXSS"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "WordPressPoolThemeXSSinPath"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attAccountLockout"), @generic_vulnerability_improper_restriction_of_excessive_authentication_attempts_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attAlibabaWebServerMultipleVulnerabilities"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attAllaireJRunShowSource"), @generic_vulnerability_information_leak_through_include_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attAltVerDetected"), @generic_vulnerability_direct_request_forced_browsing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attApacheDirListing"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attAuctionWeaverCGIRemoteShellExecutionVulnerability"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attBannerRotating01ExposedPasswordFile"), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attBasiliXWebmailAccessControlBypass"), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attBlindSqlInjectionStrings"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attBugzillaRemoteCommandExecutionVulnerability"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attBytesInteractiveshoppercgiShoppingCartDirectoryTraversalVulnerability"), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attCNCTekBizDBSearchScriptAllowsARemoteAttackerToRunShellCommands"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attCachedLogin"), @generic_vulnerability_information_leak_through_browser_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attCachedSSL"), @generic_vulnerability_information_leak_through_browser_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attCart32MultipleVulnerabilities"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attCodeInjectionInSystemCall"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attConservativesScriptsVulnerableToRemoteShellExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attCrossSiteRequestForgery"), @generic_vulnerability_cross_site_request_forgery_csrf_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attCrossSiteScripting"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attDNewsWebBufferOverflowEnablesRunningExecutablesOnTheServer"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attDirectoryFound"), @generic_vulnerability_direct_request_forced_browsing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attDirectoryGuessing"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attDisclosureOfAdministratorPasswordInPCCSMySQLDatabaseAdminTool"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attEWSForWeb11AdminRights"), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attEmailParameter"), @generic_vulnerability_external_control_of_assumed_immutable_web_parameter_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attExtropiasWebBannerRemoteCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attFileWin32"), @generic_vulnerability_relative_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attFormNowCGIIsVulnerableToShellCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attFrontPageConfigurationInformationLeakage"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attFrontpageServerExtensionsVitalInformationLeakage"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attGBookcgiRemoteCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attGWScriptsNewsPublisherAccessControlBypass"), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attGeorgeBuryansCounterCGIRemoteCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attGossamerThreadsDBManCGIRevealsSensitiveInformation"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attHtDigSearchEngineRevealsInstallationPath"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attIBMWebSphereRevealsTheAbsolutePathToItsInstallationDirectory"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attIISHtimage"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attInfonauticsGetdoccgiMayAllowUnauthorizedAccessToDocuments"), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attJSCookie"), @generic_vulnerability_improper_validation_of_array_index_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attJrunAppendSourceCode"), @generic_vulnerability_information_leak_through_include_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attLarsEllingsensGuestbookSystemIsVulnerableToRemoteCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attLinkInjection"), @generic_vulnerability_failure_to_sanitize_data_into_a_different_plane_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attLoginNotOverSSL"), @generic_vulnerability_unprotected_transport_of_credentials_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attLyrisListManagerAccessControlBypassVulnerability"), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attMSSQLInjectionProbe"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attMailManWebmailCommandExecutionVulnerability"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attMailtocgiRemoteCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attMattKruseCalendarScriptVulnerableToRemoteShellCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attMultiHTMLPoisonNullByteVulnerability"), @generic_vulnerability_null_byte_interaction_error_poison_null_byte_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attMultipleSecurityBreachesInTalentsoftWebPlusApplicationServer"), @generic_vulnerability_information_leak_through_include_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attMultipleVendorTestcgiVulnerability"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attNetauthDirectoryTraversalVulnerability"), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attNetscapePercentage20"), @generic_vulnerability_information_leak_through_include_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attNewsUpdateAccessControlBypass"), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attNphmaillistplRemoteCommandExecutionVulnerability"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attOwaUtilSQLexecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attPHFCGIRemoteCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attPathRetrievalFromNonExistentFiles"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attPostaciWebmailIsVulnerableToSQLQueryModification"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attRemoteAdministrationAuthenticationBypassInTektronixPhaserLinkWebserver"), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attRespCookieNotSecureSSL"), @generic_vulnerability_sensitive_cookie_in_https_session_without_secure_attribute_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attRespCookieSessionNotRam"), @generic_vulnerability_information_leak_through_persistent_cookies_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attRobotsTxt"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attSGIIRIXOnlineDocumentationBrowsingIsVulnerableToRemoteCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attSensitiveInHtmlComments"), @generic_vulnerability_information_leak_through_comments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attSensitiveParamNotOverSSL"), @generic_vulnerability_missing_encryption_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attShellCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attShellinScriptsDir"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attShopcgiShoppingCartDirectoryTraversalVulnerability"), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attSojourncgiDirectoryTraversalVulnerability"), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attSqlInjectionChecks"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attSubscribeMeMailingListManagerPasswordVulnerability"), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attTheFingerServerCGIIsVulnerableToShellCommandExecution"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attTomcatSnoopServletLeaksInformation"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attUndefinedState"), @generic_vulnerability_information_leak_through_server_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attUtilMindMaillistcgi"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attViewStateNotEncrypted"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attWhoisrawcgiRemoteCommandExecutionVulnerability"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attXitamiWebServerInformationLeakage"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "attZendPHPPhpinfophpInformationDisclosureVulnerability"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "authBypassSQLInjection"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "constTransient"), @generic_vulnerability_insufficient_session_expiration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "cwvProbeCfmPathDisc"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "flashAllowsAccessFromAnyDomain"), @generic_vulnerability_missing_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "lucidCMSXSS"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @appscan_channel_id AND code = "phishingInFrames"), @generic_vulnerability_reflection_attack_in_an_authentication_protocol_id);

-- Netsparker
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[High Possibility] SQL Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Low Possibility] SQL Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'SQL Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Possible] Blind SQL Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Blind SQL Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND Code = 'PermanentXSS'), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Basic Authorisation over Clear Text'), @generic_vulnerability_cleartext_transmission_of_sensitive_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Cross-site Scripting'), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Internal Server Error'), @generic_vulnerability_failure_to_handle_exceptional_conditions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Auto Complete Enabled'), @generic_vulnerability_information_leak_through_browser_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'NTLM Authorization Required'), @generic_vulnerability_improper_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Basic Authorization Required'), @generic_vulnerability_improper_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Password Transmitted Over HTTP'), @generic_vulnerability_unprotected_transport_of_credentials_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Critical Form Served Over HTTP'), @generic_vulnerability_missing_encryption_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Possible] Internal IP Address Leakage'), @generic_vulnerability_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Cookie Not Marked As Secure'), @generic_vulnerability_sensitive_cookie_in_https_session_without_secure_attribute_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Cookie Not Marked As HttpOnly'), @generic_vulnerability_protection_mechanism_failure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Boolean Based SQL Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Low Possibility] Boolean Based SQL Injection '), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'HTTP Header Injection'), @generic_vulnerability_failure_to_sanitize_crlf_sequences_in_http_headers_http_response_splitting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Command Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Database User Has Admin Privileges'), @generic_vulnerability_incorrect_user_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[High Possibility] Local File Inclusion'), @generic_vulnerability_improper_control_of_resource_identifiers_resource_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Local File Inclusion'), @generic_vulnerability_improper_control_of_resource_identifiers_resource_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Possible] Local File Inclusion'), @generic_vulnerability_improper_control_of_resource_identifiers_resource_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Directory Listing (Apache)'), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Apache Web Server Identified'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'ASP.NET Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Directory Listing (IIS)'), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Directory Listing (Tomcat)'), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Possible] PHP Source Code Disclosure'), @generic_vulnerability_information_leak_through_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Possible] Generic Source Code Disclosure'), @generic_vulnerability_information_leak_through_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Possible] ASP.NET Source Code Disclosure'), @generic_vulnerability_information_leak_through_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Possible] ASP or JSP Source Code Disclosure'), @generic_vulnerability_information_leak_through_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Possible] Internal Path Leakage (Windows)'), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Possible] Internal Path Leakage (*nix)'), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'MS Office Information Disclosure'), @generic_vulnerability_improper_cross_boundary_removal_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'phpinfo() Information Disclosure'), @generic_vulnerability_information_leak_through_debug_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'E-mail Address Disclosure'), @generic_vulnerability_intended_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Apache Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Tomcat Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'PHP Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'IIS Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Apache Coyote Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'ORACLE Application Server Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'OpenSSL Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Apache Module Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Perl Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Frontpage Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Python Version Disclosure'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Open Policy Crossdomain.xml Identified'), @generic_vulnerability_incorrect_permission_assignment_for_critical_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Robots.txt Identified'), @generic_vulnerability_incorrect_permission_assignment_for_critical_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Apache Server-Status Found'), @generic_vulnerability_configuration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Apache Server-Info Foundpache Server-Info Found'), @generic_vulnerability_configuration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[High Possibility] Boolean SQL Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Database Error Message'), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Programming Error Message'), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Apache MultiViews Enabled'), @generic_vulnerability_configuration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Backup File Found'), @generic_vulnerability_exposure_of_backup_file_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Backup Source Code Found'), @generic_vulnerability_exposure_of_backup_file_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'TRACE / TRACK Identified'), @generic_vulnerability_configuration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Trace.axd File Found'), @generic_vulnerability_configuration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'ASP.NET Debugging Enabled'), @generic_vulnerability_configuration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Code Execution via Local File Inclusion'), @generic_vulnerability_failure_to_sanitize_server_side_includes_ssi_within_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'ASP.NET Stack Trace Disclosure'), @generic_vulnerability_asp_net_misconfiguration_missing_custom_error_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'SVN Disclosure'), @generic_vulnerability_file_and_directory_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'GIT Disclosure'), @generic_vulnerability_file_and_directory_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'CVS Disclosure'), @generic_vulnerability_exposure_of_cvs_repository_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Remote File Inclusion'), @generic_vulnerability_improper_control_of_resource_identifiers_resource_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Low Possibility] Remote File Inclusion'), @generic_vulnerability_improper_control_of_resource_identifiers_resource_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = '[Low Possibility] Command Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'XSS via Remote File Inclusion'), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Remote Code Evaluation (ASP)'), @generic_vulnerability_failure_to_control_generation_of_code_code_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Remote Code Evaluation (PHP)'), @generic_vulnerability_failure_to_control_generation_of_code_code_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'Special Check: Cookie Support Detection'), @generic_vulnerability_cookie_support_detection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'MAC is not Enabled in ViewState'), @generic_vulnerability_configuration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @netsparker_net_channel_id AND name = 'ViewState is not Encrypted'), @generic_vulnerability_configuration_id);

-- Sentinel
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND code = "OS Command Injection"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND code = "Path Traversal"), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND code = "Remote File Inclusion"), @generic_vulnerability_improper_control_of_filename_for_include_require_statement_in_php_program_php_file_inclusion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Cross Site Scripting'), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'SQL Injection'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Directory Traversal'), @generic_vulnerability_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'HTTP Response Splitting'), @generic_vulnerability_failure_to_sanitize_crlf_sequences_in_http_headers_http_response_splitting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'XPath Injection'), @generic_vulnerability_failure_to_sanitize_data_within_xpath_expressions_xpath_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Predictable Resource Location'), @generic_vulnerability_direct_request_forced_browsing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Directory Indexing'), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'LDAP Injection'), @generic_vulnerability_failure_to_sanitize_data_into_ldap_queries_ldap_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'OS Commanding'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'SSI Injection'), @generic_vulnerability_failure_to_sanitize_server_side_includes_ssi_within_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Brute Force'), @generic_vulnerability_improper_restriction_of_excessive_authentication_attempts_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Insufficient Authentication'), @generic_vulnerability_improper_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Weak Password Recovery Validation'), @generic_vulnerability_weak_password_recovery_mechanism_for_forgotten_password_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Credential/Session Prediction'), @generic_vulnerability_predictable_exact_value_from_previous_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Insufficient Session Expiration'), @generic_vulnerability_insufficient_session_expiration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Session Fixation'), @generic_vulnerability_session_fixation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Cross Site Request Forgery'), @generic_vulnerability_owasp_top_ten_2007_category_a5_cross_site_request_forgery_csrf_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Information Leakage'), @generic_vulnerability_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Insufficient Authorization'), @generic_vulnerability_improper_access_control_authorization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Buffer Overflow'), @generic_vulnerability_buffer_copy_without_checking_size_of_input_classic_buffer_overflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Denail of Service'), @generic_vulnerability_uncontrolled_resource_consumption_resource_exhaustion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Content Spoofing'), @generic_vulnerability_authentication_bypass_by_spoofing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Format String Attack'), @generic_vulnerability_uncontrolled_format_string_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Abuse of Functionality'), @generic_vulnerability_intentionally_introduced_weakness_id);
-- INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
--    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Insufficient Anti-automation'), @generic_vulnerability_xxx_id); -- TODO: FIND MATCH IF POSS.
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1,
    (SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @sentinel_channel_id AND name = 'Insufficient Process Validation'), @generic_vulnerability_insufficient_control_flow_management_id);

-- Manual
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Location'), @generic_vulnerability_location_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Environment'), @generic_vulnerability_environment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Technology-specific Environment Issues'), @generic_vulnerability_technology_specific_environment_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'ASP.NET Environment Issues'), @generic_vulnerability_asp_net_environment_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'ASP.NET Misconfiguration: Creating Debug Binary'), @generic_vulnerability_asp_net_misconfiguration_creating_debug_binary_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'ASP.NET Misconfiguration: Missing Custom Error Page'), @generic_vulnerability_asp_net_misconfiguration_missing_custom_error_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'ASP.NET Misconfiguration: Password in Configuration File'), @generic_vulnerability_asp_net_misconfiguration_password_in_configuration_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Compiler Removal of Code to Clear Buffers'), @generic_vulnerability_compiler_removal_of_code_to_clear_buffers_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'External Control of System or Configuration Setting'), @generic_vulnerability_external_control_of_system_or_configuration_setting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Configuration'), @generic_vulnerability_configuration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Code'), @generic_vulnerability_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Source Code'), @generic_vulnerability_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Data Handling'), @generic_vulnerability_data_handling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Input Validation'), @generic_vulnerability_improper_input_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Pathname Traversal and Equivalence Errors'), @generic_vulnerability_pathname_traversal_and_equivalence_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Limitation of a Pathname to a Restricted Directory (''Path Traversal'')'), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Relative Path Traversal'), @generic_vulnerability_relative_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Traversal: ''../filedir'''), @generic_vulnerability_path_traversal_filedir_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Traversal: ''/dir/../filename'''), @generic_vulnerability_path_traversal_dir_filename_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Traversal: ''\..\filename'''), @generic_vulnerability_path_traversal_filename_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Traversal: ''...'' (Triple Dot)'), @generic_vulnerability_path_traversal_triple_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Traversal: ''....'' (Multiple Dot)'), @generic_vulnerability_path_traversal_multiple_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Traversal: ''....//'''), @generic_vulnerability_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Absolute Path Traversal'), @generic_vulnerability_absolute_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Traversal: ''/absolute/pathname/here'''), @generic_vulnerability_path_traversal_absolute_pathname_here_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Traversal: ''C:dirname'''), @generic_vulnerability_path_traversal_c_dirname_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Traversal: ''UNC share name'' (Windows UNC Share)'), @generic_vulnerability_path_traversal_unc_share_name_windows_unc_share_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Resolution of Path Equivalence'), @generic_vulnerability_improper_resolution_of_path_equivalence_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''filename.'' (Trailing Dot)'), @generic_vulnerability_path_equivalence_filename_trailing_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''filename....'' (Multiple Trailing Dot)'), @generic_vulnerability_path_equivalence_filename_multiple_trailing_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''file.name'' (Internal Dot)'), @generic_vulnerability_path_equivalence_file_name_internal_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''file...name'' (Multiple Internal Dot)'), @generic_vulnerability_path_equivalence_file_name_multiple_internal_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''filename '' (Trailing Space)'), @generic_vulnerability_path_equivalence_filename_trailing_space_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: '' filename (Leading Space)'), @generic_vulnerability_path_equivalence_filename_leading_space_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''file name'' (Internal Whitespace)'), @generic_vulnerability_path_equivalence_file_name_internal_whitespace_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''filename/'' (Trailing Slash)'), @generic_vulnerability_path_equivalence_filename_trailing_slash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''//multiple/leading/slash'''), @generic_vulnerability_path_equivalence_multiple_leading_slash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''/multiple//internal/slash'''), @generic_vulnerability_path_equivalence_multiple_internal_slash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''/multiple/trailing/slash//'''), @generic_vulnerability_path_equivalence_multiple_trailing_slash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''\multiple\\internal\backslash'''), @generic_vulnerability_path_equivalence_multiple_internal_backslash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''filedir'' (Trailing Backslash)'), @generic_vulnerability_path_equivalence_filedir_trailing_backslash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''/./'' (Single Dot Directory)'), @generic_vulnerability_path_equivalence_single_dot_directory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''filedir*'' (Wildcard)'), @generic_vulnerability_path_equivalence_filedir_wildcard_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Path Equivalence: ''fakedir/../realdir/filename'''), @generic_vulnerability_path_equivalence_fakedir_realdir_filename_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Link Resolution Before File Access (''Link Following'')'), @generic_vulnerability_improper_link_resolution_before_file_access_link_following_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'UNIX Path Link Problems'), @generic_vulnerability_unix_path_link_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'UNIX Symbolic Link (Symlink) Following'), @generic_vulnerability_unix_symbolic_link_symlink_following_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'UNIX Hard Link'), @generic_vulnerability_unix_hard_link_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Windows Path Link Problems'), @generic_vulnerability_windows_path_link_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Windows Shortcut Following (.LNK)'), @generic_vulnerability_windows_shortcut_following_lnk_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Windows Hard Link'), @generic_vulnerability_windows_hard_link_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of File Names that Identify Virtual Resources'), @generic_vulnerability_improper_handling_of_file_names_that_identify_virtual_resources_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Windows Device Names'), @generic_vulnerability_improper_handling_of_windows_device_names_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Windows Virtual File Problems'), @generic_vulnerability_windows_virtual_file_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Handle Windows ::DATA Alternate Data Stream'), @generic_vulnerability_failure_to_handle_windows_data_alternate_data_stream_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Mac Virtual File Problems'), @generic_vulnerability_mac_virtual_file_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Apple ''.DS_Store'''), @generic_vulnerability_apple_ds_store_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Apple HFS+ Alternate Data Stream Path'), @generic_vulnerability_improper_handling_of_apple_hfs_alternate_data_stream_path_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'External Control of File Name or Path'), @generic_vulnerability_external_control_of_file_name_or_path_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Data into a Different Plane (''Injection'')'), @generic_vulnerability_failure_to_sanitize_data_into_a_different_plane_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Special Elements into a Different Plane (Special Element Injection)'), @generic_vulnerability_failure_to_sanitize_special_elements_into_a_different_plane_special_element_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Resolve Equivalent Special Elements into a Different Plane'), @generic_vulnerability_failure_to_resolve_equivalent_special_elements_into_a_different_plane_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Special Elements used in a Command (''Command Injection'')'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Special Elements used in an OS Command (''OS Command Injection'')'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Preserve Web Page Structure (''Cross-site Scripting'')'), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Script-Related HTML Tags in a Web Page (Basic XSS)'), @generic_vulnerability_improper_sanitization_of_script_related_html_tags_in_a_web_page_basic_xss_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Script in an Error Message Web Page'), @generic_vulnerability_improper_sanitization_of_script_in_an_error_message_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Script in Attributes of IMG Tags in a Web Page'), @generic_vulnerability_improper_sanitization_of_script_in_attributes_of_img_tags_in_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Script in Attributes in a Web Page'), @generic_vulnerability_failure_to_sanitize_script_in_attributes_in_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Resolve Encoded URI Schemes in a Web Page'), @generic_vulnerability_failure_to_resolve_encoded_uri_schemes_in_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Doubled Character XSS Manipulations'), @generic_vulnerability_doubled_character_xss_manipulations_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Invalid Characters in Identifiers in Web Pages'), @generic_vulnerability_failure_to_sanitize_invalid_characters_in_identifiers_in_web_pages_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Alternate XSS Syntax'), @generic_vulnerability_failure_to_sanitize_alternate_xss_syntax_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Argument Injection or Modification'), @generic_vulnerability_argument_injection_or_modification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Special Elements used in an SQL Command (''SQL Injection'')'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Data into LDAP Queries (''LDAP Injection'')'), @generic_vulnerability_failure_to_sanitize_data_into_ldap_queries_ldap_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'XML Injection (aka Blind XPath Injection)'), @generic_vulnerability_xml_injection_aka_blind_xpath_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED: Improper Sanitization of Custom Special Characters'), @generic_vulnerability_deprecated_improper_sanitization_of_custom_special_characters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize CRLF Sequences (''CRLF Injection'')'), @generic_vulnerability_failure_to_sanitize_crlf_sequences_crlf_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Control Generation of Code (''Code Injection'')'), @generic_vulnerability_failure_to_control_generation_of_code_code_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Directives in Dynamically Evaluated Code (''Eval Injection'')'), @generic_vulnerability_improper_sanitization_of_directives_in_dynamically_evaluated_code_eval_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Directives in Statically Saved Code (''Static Code Injection'')'), @generic_vulnerability_improper_sanitization_of_directives_in_statically_saved_code_static_code_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Server-Side Includes (SSI) Within a Web Page'), @generic_vulnerability_failure_to_sanitize_server_side_includes_ssi_within_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Control of Filename for Include/Require Statement in PHP Program (''PHP File Inclusion'')'), @generic_vulnerability_improper_control_of_filename_for_include_require_statement_in_php_program_php_file_inclusion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Control of Resource Identifiers (''Resource Injection'')'), @generic_vulnerability_improper_control_of_resource_identifiers_resource_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Technology-Specific Input Validation Problems'), @generic_vulnerability_technology_specific_input_validation_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts Validation Problems'), @generic_vulnerability_struts_validation_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Duplicate Validation Forms'), @generic_vulnerability_struts_duplicate_validation_forms_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Incomplete validate() Method Definition'), @generic_vulnerability_struts_incomplete_validate_method_definition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Form Bean Does Not Extend Validation Class'), @generic_vulnerability_struts_form_bean_does_not_extend_validation_class_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Form Field Without Validator'), @generic_vulnerability_struts_form_field_without_validator_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Plug-in Framework not in Use'), @generic_vulnerability_struts_plug_in_framework_not_in_use_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Unused Validation Form'), @generic_vulnerability_struts_unused_validation_form_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Unvalidated Action Form'), @generic_vulnerability_struts_unvalidated_action_form_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Validator Turned Off'), @generic_vulnerability_struts_validator_turned_off_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Validator Without Form Field'), @generic_vulnerability_struts_validator_without_form_field_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Direct Use of Unsafe JNI'), @generic_vulnerability_direct_use_of_unsafe_jni_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing XML Validation'), @generic_vulnerability_missing_xml_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize CRLF Sequences in HTTP Headers (''HTTP Response Splitting'')'), @generic_vulnerability_failure_to_sanitize_crlf_sequences_in_http_headers_http_response_splitting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Process Control'), @generic_vulnerability_process_control_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Misinterpretation of Input'), @generic_vulnerability_misinterpretation_of_input_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Encoding or Escaping of Output'), @generic_vulnerability_improper_encoding_or_escaping_of_output_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Output Sanitization for Logs'), @generic_vulnerability_improper_output_sanitization_for_logs_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Access of Indexable Resource (''Range Error'')'), @generic_vulnerability_improper_access_of_indexable_resource_range_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Constrain Operations within the Bounds of a Memory Buffer'), @generic_vulnerability_failure_to_constrain_operations_within_the_bounds_of_a_memory_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Buffer Copy without Checking Size of Input (''Classic Buffer Overflow'')'), @generic_vulnerability_buffer_copy_without_checking_size_of_input_classic_buffer_overflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Stack-based Buffer Overflow'), @generic_vulnerability_stack_based_buffer_overflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Heap-based Buffer Overflow'), @generic_vulnerability_heap_based_buffer_overflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Write-what-where Condition'), @generic_vulnerability_write_what_where_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Buffer Underwrite (''Buffer Underflow'')'), @generic_vulnerability_buffer_underwrite_buffer_underflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Out-of-bounds Read'), @generic_vulnerability_out_of_bounds_read_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Buffer Over-read'), @generic_vulnerability_buffer_over_read_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Buffer Under-read'), @generic_vulnerability_buffer_under_read_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Wrap-around Error'), @generic_vulnerability_wrap_around_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Validation of Array Index'), @generic_vulnerability_improper_validation_of_array_index_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Length Parameter Inconsistency '), @generic_vulnerability_improper_handling_of_length_parameter_inconsistency_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Calculation of Buffer Size'), @generic_vulnerability_incorrect_calculation_of_buffer_size_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED (Duplicate): Miscalculated Null Termination'), @generic_vulnerability_deprecated_duplicate_miscalculated_null_termination_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'String Errors'), @generic_vulnerability_string_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Uncontrolled Format String'), @generic_vulnerability_uncontrolled_format_string_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Calculation of Multi-Byte String Length'), @generic_vulnerability_incorrect_calculation_of_multi_byte_string_length_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Type Errors'), @generic_vulnerability_type_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Representation Errors'), @generic_vulnerability_representation_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Special Elements'), @generic_vulnerability_improper_sanitization_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED: General Special Element Problems'), @generic_vulnerability_deprecated_general_special_element_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Delimiters'), @generic_vulnerability_failure_to_sanitize_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Parameter/Argument Delimiters'), @generic_vulnerability_failure_to_sanitize_parameter_argument_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Value Delimiters'), @generic_vulnerability_failure_to_sanitize_value_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Record Delimiters'), @generic_vulnerability_failure_to_sanitize_record_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Line Delimiters'), @generic_vulnerability_failure_to_sanitize_line_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Section Delimiters'), @generic_vulnerability_failure_to_sanitize_section_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Expression/Command Delimiters'), @generic_vulnerability_failure_to_sanitize_expression_command_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Input Terminators'), @generic_vulnerability_improper_sanitization_of_input_terminators_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Input Leaders'), @generic_vulnerability_failure_to_sanitize_input_leaders_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Quoting Syntax'), @generic_vulnerability_failure_to_sanitize_quoting_syntax_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Escape, Meta, or Control Sequences'), @generic_vulnerability_failure_to_sanitize_escape_meta_or_control_sequences_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Comment Delimiters'), @generic_vulnerability_improper_sanitization_of_comment_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Macro Symbols'), @generic_vulnerability_improper_sanitization_of_macro_symbols_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Substitution Characters'), @generic_vulnerability_improper_sanitization_of_substitution_characters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Variable Name Delimiters'), @generic_vulnerability_improper_sanitization_of_variable_name_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Wildcards or Matching Symbols'), @generic_vulnerability_improper_sanitization_of_wildcards_or_matching_symbols_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Whitespace'), @generic_vulnerability_improper_sanitization_of_whitespace_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Paired Delimiters'), @generic_vulnerability_failure_to_sanitize_paired_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Null Byte or NUL Character'), @generic_vulnerability_failure_to_sanitize_null_byte_or_nul_character_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Special Element'), @generic_vulnerability_failure_to_sanitize_special_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Leading Special Elements'), @generic_vulnerability_improper_sanitization_of_leading_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Multiple Leading Special Elements'), @generic_vulnerability_improper_sanitization_of_multiple_leading_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Trailing Special Elements'), @generic_vulnerability_improper_sanitization_of_trailing_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Multiple Trailing Special Elements'), @generic_vulnerability_improper_sanitization_of_multiple_trailing_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Internal Special Elements'), @generic_vulnerability_improper_sanitization_of_internal_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of Multiple Internal Special Elements'), @generic_vulnerability_improper_sanitization_of_multiple_internal_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Missing Special Element'), @generic_vulnerability_improper_handling_of_missing_special_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Additional Special Element'), @generic_vulnerability_improper_handling_of_additional_special_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Resolve Inconsistent Special Elements'), @generic_vulnerability_failure_to_resolve_inconsistent_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Technology-Specific Special Elements'), @generic_vulnerability_technology_specific_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Null Termination'), @generic_vulnerability_improper_null_termination_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Cleansing, Canonicalization, and Comparison Errors'), @generic_vulnerability_cleansing_canonicalization_and_comparison_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Encoding Error'), @generic_vulnerability_encoding_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Handle Alternate Encoding'), @generic_vulnerability_failure_to_handle_alternate_encoding_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Double Decoding of the Same Data'), @generic_vulnerability_double_decoding_of_the_same_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Handle Mixed Encoding'), @generic_vulnerability_failure_to_handle_mixed_encoding_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Handle Unicode Encoding'), @generic_vulnerability_failure_to_handle_unicode_encoding_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Handle URL Encoding (Hex Encoding)'), @generic_vulnerability_failure_to_handle_url_encoding_hex_encoding_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Resolve Case Sensitivity'), @generic_vulnerability_failure_to_resolve_case_sensitivity_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Behavior Order: Early Validation'), @generic_vulnerability_incorrect_behavior_order_early_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Behavior Order: Validate Before Canonicalize'), @generic_vulnerability_incorrect_behavior_order_validate_before_canonicalize_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Behavior Order: Validate Before Filter'), @generic_vulnerability_incorrect_behavior_order_validate_before_filter_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Collapse of Data Into Unsafe Value'), @generic_vulnerability_collapse_of_data_into_unsafe_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Permissive Whitelist'), @generic_vulnerability_permissive_whitelist_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incomplete Blacklist'), @generic_vulnerability_incomplete_blacklist_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Regular Expression'), @generic_vulnerability_incorrect_regular_expression_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Overly Restrictive Regular Expression'), @generic_vulnerability_overly_restrictive_regular_expression_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Partial Comparison'), @generic_vulnerability_partial_comparison_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on Data/Memory Layout'), @generic_vulnerability_reliance_on_data_memory_layout_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Numeric Errors'), @generic_vulnerability_numeric_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Integer Overflow or Wraparound'), @generic_vulnerability_integer_overflow_or_wraparound_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Integer Underflow (Wrap or Wraparound)'), @generic_vulnerability_integer_underflow_wrap_or_wraparound_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Integer Coercion Error'), @generic_vulnerability_integer_coercion_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Off-by-one Error'), @generic_vulnerability_off_by_one_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unexpected Sign Extension'), @generic_vulnerability_unexpected_sign_extension_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Signed to Unsigned Conversion Error'), @generic_vulnerability_signed_to_unsigned_conversion_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unsigned to Signed Conversion Error'), @generic_vulnerability_unsigned_to_signed_conversion_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Numeric Truncation Error'), @generic_vulnerability_numeric_truncation_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Incorrect Byte Ordering'), @generic_vulnerability_use_of_incorrect_byte_ordering_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Management Errors'), @generic_vulnerability_information_management_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Exposure'), @generic_vulnerability_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Sent Data'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Privacy Leak through Data Queries'), @generic_vulnerability_privacy_leak_through_data_queries_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Exposure Through Discrepancy'), @generic_vulnerability_information_exposure_through_discrepancy_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Response Discrepancy Information Leak'), @generic_vulnerability_response_discrepancy_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Exposure Through Behavioral Discrepancy'), @generic_vulnerability_information_exposure_through_behavioral_discrepancy_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Internal Behavioral Inconsistency Information Leak'), @generic_vulnerability_internal_behavioral_inconsistency_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Exposure Through an External Behavioral Inconsistency'), @generic_vulnerability_information_exposure_through_an_external_behavioral_inconsistency_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Timing Discrepancy Information Leak'), @generic_vulnerability_timing_discrepancy_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Exposure Through an Error Message'), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Product-Generated Error Message Information Leak'), @generic_vulnerability_product_generated_error_message_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Product-External Error Message Information Leak'), @generic_vulnerability_product_external_error_message_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Cross-boundary Removal of Sensitive Data'), @generic_vulnerability_improper_cross_boundary_removal_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Intended Information Leak'), @generic_vulnerability_intended_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Process Environment Information Leak'), @generic_vulnerability_process_environment_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Debug Information'), @generic_vulnerability_information_leak_through_debug_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Containment Errors (Container Errors)'), @generic_vulnerability_containment_errors_container_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED: Failure to Protect Stored Data from Modification'), @generic_vulnerability_deprecated_failure_to_protect_stored_data_from_modification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED (Duplicate): Failure to provide confidentiality for stored data'), @generic_vulnerability_deprecated_duplicate_failure_to_provide_confidentiality_for_stored_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Sensitive Data Under Web Root'), @generic_vulnerability_sensitive_data_under_web_root_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Sensitive Data Under FTP Root'), @generic_vulnerability_sensitive_data_under_ftp_root_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Loss or Omission'), @generic_vulnerability_information_loss_or_omission_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Truncation of Security-relevant Information'), @generic_vulnerability_truncation_of_security_relevant_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Omission of Security-relevant Information'), @generic_vulnerability_omission_of_security_relevant_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Obscured Security-relevant Information by Alternate Name'), @generic_vulnerability_obscured_security_relevant_information_by_alternate_name_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED (Duplicate): General Information Management Problems'), @generic_vulnerability_deprecated_duplicate_general_information_management_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Sensitive Information Uncleared Before Release'), @generic_vulnerability_sensitive_information_uncleared_before_release_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Fulfill API Contract (''API Abuse'')'), @generic_vulnerability_failure_to_fulfill_api_contract_api_abuse_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Syntactically Invalid Structure'), @generic_vulnerability_improper_handling_of_syntactically_invalid_structure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Values'), @generic_vulnerability_improper_handling_of_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Missing Values'), @generic_vulnerability_improper_handling_of_missing_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Extra Values'), @generic_vulnerability_improper_handling_of_extra_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Undefined Values'), @generic_vulnerability_improper_handling_of_undefined_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Parameter Problems'), @generic_vulnerability_parameter_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Handle Missing Parameter'), @generic_vulnerability_failure_to_handle_missing_parameter_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Extra Parameters'), @generic_vulnerability_improper_handling_of_extra_parameters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Undefined Parameters'), @generic_vulnerability_improper_handling_of_undefined_parameters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Structural Elements'), @generic_vulnerability_improper_handling_of_structural_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Incomplete Structural Elements'), @generic_vulnerability_improper_handling_of_incomplete_structural_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Handle Incomplete Element'), @generic_vulnerability_failure_to_handle_incomplete_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Inconsistent Structural Elements'), @generic_vulnerability_improper_handling_of_inconsistent_structural_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Unexpected Data Type'), @generic_vulnerability_improper_handling_of_unexpected_data_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Inherently Dangerous Function'), @generic_vulnerability_use_of_inherently_dangerous_function_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Change Working Directory in chroot Jail'), @generic_vulnerability_failure_to_change_working_directory_in_chroot_jail_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Clear Heap Memory Before Release (''Heap Inspection'')'), @generic_vulnerability_failure_to_clear_heap_memory_before_release_heap_inspection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on DNS Lookups in a Security Decision'), @generic_vulnerability_reliance_on_dns_lookups_in_a_security_decision_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Uncaught Exception'), @generic_vulnerability_uncaught_exception_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED: Often Misused: Path Manipulation'), @generic_vulnerability_deprecated_often_misused_path_manipulation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Execution with Unnecessary Privileges'), @generic_vulnerability_execution_with_unnecessary_privileges_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Often Misused: String Management'), @generic_vulnerability_often_misused_string_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unchecked Return Value'), @generic_vulnerability_unchecked_return_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Check of Function Return Value'), @generic_vulnerability_incorrect_check_of_function_return_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Security Features'), @generic_vulnerability_security_features_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Credentials Management'), @generic_vulnerability_credentials_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Plaintext Storage of a Password'), @generic_vulnerability_plaintext_storage_of_a_password_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Storing Passwords in a Recoverable Format'), @generic_vulnerability_storing_passwords_in_a_recoverable_format_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Empty Password in Configuration File'), @generic_vulnerability_empty_password_in_configuration_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Hard-coded Password'), @generic_vulnerability_use_of_hard_coded_password_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Password in Configuration File'), @generic_vulnerability_password_in_configuration_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weak Cryptography for Passwords'), @generic_vulnerability_weak_cryptography_for_passwords_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Not Using Password Aging'), @generic_vulnerability_not_using_password_aging_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Password Aging with Long Expiration'), @generic_vulnerability_password_aging_with_long_expiration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Permissions, Privileges, and Access Controls'), @generic_vulnerability_permissions_privileges_and_access_controls_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Privilege / Sandbox Issues'), @generic_vulnerability_privilege_sandbox_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Privilege Assignment'), @generic_vulnerability_incorrect_privilege_assignment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Privilege Defined With Unsafe Actions'), @generic_vulnerability_privilege_defined_with_unsafe_actions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Privilege Chaining'), @generic_vulnerability_privilege_chaining_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Privilege Management'), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Privilege Context Switching Error'), @generic_vulnerability_privilege_context_switching_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Privilege Dropping / Lowering Errors'), @generic_vulnerability_privilege_dropping_lowering_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Least Privilege Violation'), @generic_vulnerability_least_privilege_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Check for Dropped Privileges'), @generic_vulnerability_improper_check_for_dropped_privileges_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Insufficient Privileges'), @generic_vulnerability_improper_handling_of_insufficient_privileges_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Permission Issues'), @generic_vulnerability_permission_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Default Permissions'), @generic_vulnerability_incorrect_default_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insecure Inherited Permissions'), @generic_vulnerability_insecure_inherited_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insecure Preserved Inherited Permissions'), @generic_vulnerability_insecure_preserved_inherited_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Execution-Assigned Permissions'), @generic_vulnerability_incorrect_execution_assigned_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Insufficient Permissions or Privileges '), @generic_vulnerability_improper_handling_of_insufficient_permissions_or_privileges_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Preservation of Permissions'), @generic_vulnerability_improper_preservation_of_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Ownership Management'), @generic_vulnerability_improper_ownership_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unverified Ownership'), @generic_vulnerability_unverified_ownership_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Access Control (Authorization) Issues'), @generic_vulnerability_access_control_authorization_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Access Control (Authorization)'), @generic_vulnerability_improper_access_control_authorization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect User Management'), @generic_vulnerability_incorrect_user_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Authentication'), @generic_vulnerability_improper_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Authentication Bypass Using an Alternate Path or Channel'), @generic_vulnerability_authentication_bypass_using_an_alternate_path_or_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Authentication Bypass by Alternate Name'), @generic_vulnerability_authentication_bypass_by_alternate_name_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Authentication Bypass by Spoofing'), @generic_vulnerability_authentication_bypass_by_spoofing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Trusting Self-reported IP Address'), @generic_vulnerability_trusting_self_reported_ip_address_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Trusting Self-reported DNS Name'), @generic_vulnerability_trusting_self_reported_dns_name_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Using Referer Field for Authentication'), @generic_vulnerability_using_referer_field_for_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Authentication Bypass by Capture-replay'), @generic_vulnerability_authentication_bypass_by_capture_replay_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Certificate Issues'), @generic_vulnerability_certificate_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Following of Chain of Trust for Certificate Validation'), @generic_vulnerability_improper_following_of_chain_of_trust_for_certificate_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Validation of Host-specific Certificate Data'), @generic_vulnerability_improper_validation_of_host_specific_certificate_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Validation of Certificate Expiration'), @generic_vulnerability_improper_validation_of_certificate_expiration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Check for Certificate Revocation'), @generic_vulnerability_improper_check_for_certificate_revocation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Channel Accessible by Non-Endpoint (''Man-in-the-Middle'')'), @generic_vulnerability_channel_accessible_by_non_endpoint_man_in_the_middle_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reflection Attack in an Authentication Protocol'), @generic_vulnerability_reflection_attack_in_an_authentication_protocol_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Authentication Bypass by Assumed-Immutable Data'), @generic_vulnerability_authentication_bypass_by_assumed_immutable_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Implementation of Authentication Algorithm'), @generic_vulnerability_incorrect_implementation_of_authentication_algorithm_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Critical Step in Authentication'), @generic_vulnerability_missing_critical_step_in_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Authentication Bypass by Primary Weakness'), @generic_vulnerability_authentication_bypass_by_primary_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Authentication for Critical Function'), @generic_vulnerability_missing_authentication_for_critical_function_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Restriction of Excessive Authentication Attempts'), @generic_vulnerability_improper_restriction_of_excessive_authentication_attempts_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Single-factor Authentication'), @generic_vulnerability_use_of_single_factor_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Password System for Primary Authentication'), @generic_vulnerability_use_of_password_system_for_primary_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Cryptographic Issues'), @generic_vulnerability_cryptographic_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Encryption of Sensitive Data'), @generic_vulnerability_missing_encryption_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Cleartext Storage of Sensitive Information'), @generic_vulnerability_cleartext_storage_of_sensitive_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Plaintext Storage in a File or on Disk'), @generic_vulnerability_plaintext_storage_in_a_file_or_on_disk_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Plaintext Storage in the Registry'), @generic_vulnerability_plaintext_storage_in_the_registry_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Plaintext Storage in a Cookie'), @generic_vulnerability_plaintext_storage_in_a_cookie_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Plaintext Storage in Memory'), @generic_vulnerability_plaintext_storage_in_memory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Plaintext Storage in GUI'), @generic_vulnerability_plaintext_storage_in_gui_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Plaintext Storage in Executable'), @generic_vulnerability_plaintext_storage_in_executable_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Cleartext Transmission of Sensitive Information'), @generic_vulnerability_cleartext_transmission_of_sensitive_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Key Management Errors'), @generic_vulnerability_key_management_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Hard-coded Cryptographic Key'), @generic_vulnerability_use_of_hard_coded_cryptographic_key_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Key Exchange without Entity Authentication'), @generic_vulnerability_key_exchange_without_entity_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reusing a Nonce, Key Pair in Encryption'), @generic_vulnerability_reusing_a_nonce_key_pair_in_encryption_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of a Key Past its Expiration Date'), @generic_vulnerability_use_of_a_key_past_its_expiration_date_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Required Cryptographic Step'), @generic_vulnerability_missing_required_cryptographic_step_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Inadequate Encryption Strength'), @generic_vulnerability_inadequate_encryption_strength_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of a Broken or Risky Cryptographic Algorithm'), @generic_vulnerability_use_of_a_broken_or_risky_cryptographic_algorithm_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reversible One-Way Hash'), @generic_vulnerability_reversible_one_way_hash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Not Using a Random IV with CBC Mode'), @generic_vulnerability_not_using_a_random_iv_with_cbc_mode_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Insufficiently Random Values'), @generic_vulnerability_use_of_insufficiently_random_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Entropy'), @generic_vulnerability_insufficient_entropy_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Entropy in PRNG'), @generic_vulnerability_insufficient_entropy_in_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Insufficient Entropy in TRNG'), @generic_vulnerability_improper_handling_of_insufficient_entropy_in_trng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Small Space of Random Values'), @generic_vulnerability_small_space_of_random_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'PRNG Seed Error'), @generic_vulnerability_prng_seed_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Same Seed in PRNG'), @generic_vulnerability_same_seed_in_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Predictable Seed in PRNG'), @generic_vulnerability_predictable_seed_in_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Cryptographically Weak PRNG'), @generic_vulnerability_use_of_cryptographically_weak_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Small Seed Space in PRNG'), @generic_vulnerability_small_seed_space_in_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Predictability Problems'), @generic_vulnerability_predictability_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Predictable from Observable State'), @generic_vulnerability_predictable_from_observable_state_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Predictable Exact Value from Previous Values'), @generic_vulnerability_predictable_exact_value_from_previous_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Predictable Value Range from Previous Values'), @generic_vulnerability_predictable_value_range_from_previous_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Invariant Value in Dynamically Changing Context'), @generic_vulnerability_use_of_invariant_value_in_dynamically_changing_context_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Verification of Data Authenticity'), @generic_vulnerability_insufficient_verification_of_data_authenticity_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Origin Validation Error'), @generic_vulnerability_origin_validation_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Verification of Cryptographic Signature'), @generic_vulnerability_improper_verification_of_cryptographic_signature_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Less Trusted Source'), @generic_vulnerability_use_of_less_trusted_source_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Acceptance of Extraneous Untrusted Data With Trusted Data'), @generic_vulnerability_acceptance_of_extraneous_untrusted_data_with_trusted_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improperly Trusted Reverse DNS'), @generic_vulnerability_improperly_trusted_reverse_dns_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Type Distinction'), @generic_vulnerability_insufficient_type_distinction_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Cross-Site Request Forgery (CSRF)'), @generic_vulnerability_cross_site_request_forgery_csrf_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Add Integrity Check Value'), @generic_vulnerability_failure_to_add_integrity_check_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Validation of Integrity Check Value'), @generic_vulnerability_improper_validation_of_integrity_check_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'User Interface Security Issues'), @generic_vulnerability_user_interface_security_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Product UI does not Warn User of Unsafe Actions'), @generic_vulnerability_product_ui_does_not_warn_user_of_unsafe_actions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient UI Warning of Dangerous Operations'), @generic_vulnerability_insufficient_ui_warning_of_dangerous_operations_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improperly Implemented Security Check for Standard'), @generic_vulnerability_improperly_implemented_security_check_for_standard_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Privacy Violation'), @generic_vulnerability_privacy_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Trust of System Event Data'), @generic_vulnerability_trust_of_system_event_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Time and State'), @generic_vulnerability_time_and_state_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Race Condition'), @generic_vulnerability_race_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Race Condition Enabling Link Following'), @generic_vulnerability_race_condition_enabling_link_following_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Signal Handler Race Condition'), @generic_vulnerability_signal_handler_race_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Race Condition in Switch'), @generic_vulnerability_race_condition_in_switch_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Race Condition within a Thread'), @generic_vulnerability_race_condition_within_a_thread_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Time-of-check Time-of-use (TOCTOU) Race Condition'), @generic_vulnerability_time_of_check_time_of_use_toctou_race_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Context Switching Race Condition'), @generic_vulnerability_context_switching_race_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Divide By Zero'), @generic_vulnerability_divide_by_zero_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Check for Certificate Revocation after Initial Check'), @generic_vulnerability_missing_check_for_certificate_revocation_after_initial_check_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'State Issues'), @generic_vulnerability_state_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incomplete Internal State Distinction'), @generic_vulnerability_incomplete_internal_state_distinction_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'State Synchronization Error'), @generic_vulnerability_state_synchronization_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Mutable Objects Passed by Reference'), @generic_vulnerability_mutable_objects_passed_by_reference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Passing Mutable Objects to an Untrusted Method'), @generic_vulnerability_passing_mutable_objects_to_an_untrusted_method_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Temporary File Issues'), @generic_vulnerability_temporary_file_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insecure Temporary File'), @generic_vulnerability_insecure_temporary_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Creation of Temporary File With Insecure Permissions'), @generic_vulnerability_creation_of_temporary_file_with_insecure_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Creation of Temporary File in Directory with Incorrect Permissions'), @generic_vulnerability_creation_of_temporary_file_in_directory_with_incorrect_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Technology-Specific Time and State Issues'), @generic_vulnerability_technology_specific_time_and_state_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Session Fixation'), @generic_vulnerability_session_fixation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Covert Timing Channel'), @generic_vulnerability_covert_timing_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Symbolic Name not Mapping to Correct Object'), @generic_vulnerability_symbolic_name_not_mapping_to_correct_object_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Signal Errors'), @generic_vulnerability_signal_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Error Handling'), @generic_vulnerability_error_handling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Error Conditions, Return Values, Status Codes'), @generic_vulnerability_error_conditions_return_values_status_codes_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Detection of Error Condition Without Action'), @generic_vulnerability_detection_of_error_condition_without_action_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unchecked Error Condition'), @generic_vulnerability_unchecked_error_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Report Error in Status Code'), @generic_vulnerability_failure_to_report_error_in_status_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Return of Wrong Status Code'), @generic_vulnerability_return_of_wrong_status_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unexpected Status Code or Return Value'), @generic_vulnerability_unexpected_status_code_or_return_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of NullPointerException Catch to Detect NULL Pointer Dereference'), @generic_vulnerability_use_of_nullpointerexception_catch_to_detect_null_pointer_dereference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Declaration of Catch for Generic Exception'), @generic_vulnerability_declaration_of_catch_for_generic_exception_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Declaration of Throws for Generic Exception'), @generic_vulnerability_declaration_of_throws_for_generic_exception_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Indicator of Poor Code Quality'), @generic_vulnerability_indicator_of_poor_code_quality_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Resource Management Errors'), @generic_vulnerability_resource_management_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Uncontrolled Resource Consumption (''Resource Exhaustion'')'), @generic_vulnerability_uncontrolled_resource_consumption_resource_exhaustion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Release Memory Before Removing Last Reference (''Memory Leak'')'), @generic_vulnerability_failure_to_release_memory_before_removing_last_reference_memory_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Transmission of Private Resources into a New Sphere (''Resource Leak'')'), @generic_vulnerability_transmission_of_private_resources_into_a_new_sphere_resource_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'UNIX File Descriptor Leak'), @generic_vulnerability_unix_file_descriptor_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Resource Shutdown or Release'), @generic_vulnerability_improper_resource_shutdown_or_release_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Asymmetric Resource Consumption (Amplification)'), @generic_vulnerability_asymmetric_resource_consumption_amplification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Control of Network Message Volume (Network Amplification)'), @generic_vulnerability_insufficient_control_of_network_message_volume_network_amplification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Algorithmic Complexity'), @generic_vulnerability_algorithmic_complexity_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Behavior Order: Early Amplification'), @generic_vulnerability_incorrect_behavior_order_early_amplification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Highly Compressed Data (Data Amplification)'), @generic_vulnerability_improper_handling_of_highly_compressed_data_data_amplification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Resource Pool'), @generic_vulnerability_insufficient_resource_pool_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Resource Locking Problems'), @generic_vulnerability_resource_locking_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unrestricted Externally Accessible Lock'), @generic_vulnerability_unrestricted_externally_accessible_lock_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Resource Locking'), @generic_vulnerability_insufficient_resource_locking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Lock Check'), @generic_vulnerability_missing_lock_check_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Double Free'), @generic_vulnerability_double_free_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use After Free'), @generic_vulnerability_use_after_free_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Channel and Path Errors'), @generic_vulnerability_channel_and_path_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Channel Errors'), @generic_vulnerability_channel_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unprotected Primary Channel'), @generic_vulnerability_unprotected_primary_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unprotected Alternate Channel'), @generic_vulnerability_unprotected_alternate_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Race Condition During Access to Alternate Channel'), @generic_vulnerability_race_condition_during_access_to_alternate_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unprotected Windows Messaging Channel (''Shatter'')'), @generic_vulnerability_unprotected_windows_messaging_channel_shatter_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED (Duplicate): Proxied Trusted Channel'), @generic_vulnerability_deprecated_duplicate_proxied_trusted_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Protect Alternate Path'), @generic_vulnerability_failure_to_protect_alternate_path_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Direct Request (''Forced Browsing'')'), @generic_vulnerability_direct_request_forced_browsing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Untrusted Search Path'), @generic_vulnerability_untrusted_search_path_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Uncontrolled Search Path Element'), @generic_vulnerability_uncontrolled_search_path_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unquoted Search Path or Element'), @generic_vulnerability_unquoted_search_path_or_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Handler Errors'), @generic_vulnerability_handler_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Deployment of Wrong Handler'), @generic_vulnerability_deployment_of_wrong_handler_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Handler'), @generic_vulnerability_missing_handler_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Dangerous Handler not Disabled During Sensitive Operations'), @generic_vulnerability_dangerous_handler_not_disabled_during_sensitive_operations_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unparsed Raw Web Content Delivery'), @generic_vulnerability_unparsed_raw_web_content_delivery_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unrestricted Upload of File with Dangerous Type'), @generic_vulnerability_unrestricted_upload_of_file_with_dangerous_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Interaction Error'), @generic_vulnerability_interaction_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Interpretation Conflict'), @generic_vulnerability_interpretation_conflict_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incomplete Model of Endpoint Features'), @generic_vulnerability_incomplete_model_of_endpoint_features_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Behavioral Problems'), @generic_vulnerability_behavioral_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Behavioral Change in New Version or Environment'), @generic_vulnerability_behavioral_change_in_new_version_or_environment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Expected Behavior Violation'), @generic_vulnerability_expected_behavior_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unintended Proxy/Intermediary'), @generic_vulnerability_unintended_proxy_intermediary_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Web Problems'), @generic_vulnerability_web_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED (Duplicate): HTTP response splitting'), @generic_vulnerability_deprecated_duplicate_http_response_splitting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Inconsistent Interpretation of HTTP Requests (''HTTP Request Smuggling'')'), @generic_vulnerability_inconsistent_interpretation_of_http_requests_http_request_smuggling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'User Interface Errors'), @generic_vulnerability_user_interface_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'UI Discrepancy for Security Feature'), @generic_vulnerability_ui_discrepancy_for_security_feature_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unimplemented or Unsupported Feature in UI'), @generic_vulnerability_unimplemented_or_unsupported_feature_in_ui_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Obsolete Feature in UI'), @generic_vulnerability_obsolete_feature_in_ui_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'The UI Performs the Wrong Action'), @generic_vulnerability_the_ui_performs_the_wrong_action_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Multiple Interpretations of UI Input'), @generic_vulnerability_multiple_interpretations_of_ui_input_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'UI Misrepresentation of Critical Information'), @generic_vulnerability_ui_misrepresentation_of_critical_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Initialization and Cleanup Errors'), @generic_vulnerability_initialization_and_cleanup_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insecure Default Variable Initialization'), @generic_vulnerability_insecure_default_variable_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'External Initialization of Trusted Variables or Data Stores'), @generic_vulnerability_external_initialization_of_trusted_variables_or_data_stores_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Non-exit on Failed Initialization'), @generic_vulnerability_non_exit_on_failed_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Initialization'), @generic_vulnerability_missing_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Uninitialized Variable'), @generic_vulnerability_use_of_uninitialized_variable_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED: Incorrect Initialization'), @generic_vulnerability_deprecated_incorrect_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incomplete Cleanup'), @generic_vulnerability_incomplete_cleanup_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Cleanup on Thrown Exception'), @generic_vulnerability_improper_cleanup_on_thrown_exception_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Data Structure Issues'), @generic_vulnerability_data_structure_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Duplicate Key in Associative List (Alist)'), @generic_vulnerability_duplicate_key_in_associative_list_alist_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Deletion of Data Structure Sentinel'), @generic_vulnerability_deletion_of_data_structure_sentinel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Addition of Data Structure Sentinel'), @generic_vulnerability_addition_of_data_structure_sentinel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Pointer Issues'), @generic_vulnerability_pointer_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Return of Pointer Value Outside of Expected Range'), @generic_vulnerability_return_of_pointer_value_outside_of_expected_range_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of sizeof() on a Pointer Type'), @generic_vulnerability_use_of_sizeof_on_a_pointer_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Pointer Scaling'), @generic_vulnerability_incorrect_pointer_scaling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Pointer Subtraction to Determine Size'), @generic_vulnerability_use_of_pointer_subtraction_to_determine_size_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Externally-Controlled Input to Select Classes or Code (''Unsafe Reflection'')'), @generic_vulnerability_use_of_externally_controlled_input_to_select_classes_or_code_unsafe_reflection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Modification of Assumed-Immutable Data (MAID)'), @generic_vulnerability_modification_of_assumed_immutable_data_maid_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'External Control of Assumed-Immutable Web Parameter'), @generic_vulnerability_external_control_of_assumed_immutable_web_parameter_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'PHP External Variable Modification'), @generic_vulnerability_php_external_variable_modification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Function with Inconsistent Implementations'), @generic_vulnerability_use_of_function_with_inconsistent_implementations_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Undefined Behavior for Input to API'), @generic_vulnerability_undefined_behavior_for_input_to_api_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'NULL Pointer Dereference'), @generic_vulnerability_null_pointer_dereference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Obsolete Functions'), @generic_vulnerability_use_of_obsolete_functions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Default Case in Switch Statement'), @generic_vulnerability_missing_default_case_in_switch_statement_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unsafe Function Call from a Signal Handler'), @generic_vulnerability_unsafe_function_call_from_a_signal_handler_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Incorrect Operator'), @generic_vulnerability_use_of_incorrect_operator_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Assigning instead of Comparing'), @generic_vulnerability_assigning_instead_of_comparing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Comparing instead of Assigning'), @generic_vulnerability_comparing_instead_of_assigning_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Block Delimitation'), @generic_vulnerability_incorrect_block_delimitation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Omitted Break Statement in Switch'), @generic_vulnerability_omitted_break_statement_in_switch_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Encapsulation'), @generic_vulnerability_insufficient_encapsulation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Comparison of Classes by Name'), @generic_vulnerability_comparison_of_classes_by_name_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on Package-level Scope'), @generic_vulnerability_reliance_on_package_level_scope_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Data Leak Between Sessions'), @generic_vulnerability_data_leak_between_sessions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Leftover Debug Code'), @generic_vulnerability_leftover_debug_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Mobile Code Issues'), @generic_vulnerability_mobile_code_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Public cloneable() Method Without Final (''Object Hijack'')'), @generic_vulnerability_public_cloneable_method_without_final_object_hijack_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Inner Class Containing Sensitive Data'), @generic_vulnerability_use_of_inner_class_containing_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Critical Public Variable Without Final Modifier'), @generic_vulnerability_critical_public_variable_without_final_modifier_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Download of Code Without Integrity Check'), @generic_vulnerability_download_of_code_without_integrity_check_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Private Array-Typed Field Returned From A Public Method'), @generic_vulnerability_private_array_typed_field_returned_from_a_public_method_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Public Data Assigned to Private Array-Typed Field'), @generic_vulnerability_public_data_assigned_to_private_array_typed_field_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Exposure of System Data to an Unauthorized Control Sphere'), @generic_vulnerability_exposure_of_system_data_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak through Class Cloning'), @generic_vulnerability_information_leak_through_class_cloning_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Serializable Class Containing Sensitive Data'), @generic_vulnerability_serializable_class_containing_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Public Static Field Not Marked Final'), @generic_vulnerability_public_static_field_not_marked_final_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Trust Boundary Violation'), @generic_vulnerability_trust_boundary_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Deserialization of Untrusted Data'), @generic_vulnerability_deserialization_of_untrusted_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Byte/Object Code'), @generic_vulnerability_byte_object_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Motivation/Intent'), @generic_vulnerability_motivation_intent_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Intentionally Introduced Weakness'), @generic_vulnerability_intentionally_introduced_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Embedded Malicious Code'), @generic_vulnerability_embedded_malicious_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Trojan Horse'), @generic_vulnerability_trojan_horse_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Non-Replicating Malicious Code'), @generic_vulnerability_non_replicating_malicious_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Replicating Malicious Code (Virus or Worm)'), @generic_vulnerability_replicating_malicious_code_virus_or_worm_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Trapdoor'), @generic_vulnerability_trapdoor_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Logic/Time Bomb'), @generic_vulnerability_logic_time_bomb_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Spyware'), @generic_vulnerability_spyware_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Intentionally Introduced Nonmalicious Weakness'), @generic_vulnerability_intentionally_introduced_nonmalicious_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Covert Channel'), @generic_vulnerability_covert_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Covert Storage Channel'), @generic_vulnerability_covert_storage_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'DEPRECATED (Duplicate): Covert Timing Channel'), @generic_vulnerability_deprecated_duplicate_covert_timing_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Other Intentional, Nonmalicious Weakness'), @generic_vulnerability_other_intentional_nonmalicious_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Inadvertently Introduced Weakness'), @generic_vulnerability_inadvertently_introduced_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = '.NET Environment Issues'), @generic_vulnerability__net_environment_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = '.NET Misconfiguration: Use of Impersonation'), @generic_vulnerability__net_misconfiguration_use_of_impersonation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weak Password Requirements'), @generic_vulnerability_weak_password_requirements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficiently Protected Credentials'), @generic_vulnerability_insufficiently_protected_credentials_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unprotected Transport of Credentials'), @generic_vulnerability_unprotected_transport_of_credentials_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Caching'), @generic_vulnerability_information_leak_through_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Browser Caching'), @generic_vulnerability_information_leak_through_browser_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Environmental Variables'), @generic_vulnerability_information_leak_through_environmental_variables_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Exposure of CVS Repository to an Unauthorized Control Sphere'), @generic_vulnerability_exposure_of_cvs_repository_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Exposure of Core Dump File to an Unauthorized Control Sphere'), @generic_vulnerability_exposure_of_core_dump_file_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Exposure of Access Control List Files to an Unauthorized Control Sphere'), @generic_vulnerability_exposure_of_access_control_list_files_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Exposure of Backup File to an Unauthorized Control Sphere'), @generic_vulnerability_exposure_of_backup_file_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Test Code'), @generic_vulnerability_information_leak_through_test_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Log Files'), @generic_vulnerability_information_leak_through_log_files_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Server Log Files'), @generic_vulnerability_information_leak_through_server_log_files_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Debug Log Files'), @generic_vulnerability_information_leak_through_debug_log_files_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Shell Error Message'), @generic_vulnerability_information_leak_through_shell_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Servlet Runtime Error Message'), @generic_vulnerability_information_leak_through_servlet_runtime_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Java Runtime Error Message'), @generic_vulnerability_information_leak_through_java_runtime_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'File and Directory Information Exposure'), @generic_vulnerability_file_and_directory_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Persistent Cookies'), @generic_vulnerability_information_leak_through_persistent_cookies_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Source Code'), @generic_vulnerability_information_leak_through_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Include Source Code'), @generic_vulnerability_information_leak_through_include_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Cleanup Log Files'), @generic_vulnerability_information_leak_through_cleanup_log_files_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Singleton Pattern in a Non-thread-safe Manner'), @generic_vulnerability_use_of_singleton_pattern_in_a_non_thread_safe_manner_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Use a Standardized Error Handling Mechanism'), @generic_vulnerability_failure_to_use_a_standardized_error_handling_mechanism_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Dynamic Class Loading'), @generic_vulnerability_use_of_dynamic_class_loading_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Suspicious Comment'), @generic_vulnerability_suspicious_comment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Hard-coded, Security-relevant Constants'), @generic_vulnerability_use_of_hard_coded_security_relevant_constants_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Directory Listing'), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Password Field Masking'), @generic_vulnerability_missing_password_field_masking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Server Error Message'), @generic_vulnerability_information_leak_through_server_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Behavior Order: Authorization Before Parsing and Canonicalization'), @generic_vulnerability_incorrect_behavior_order_authorization_before_parsing_and_canonicalization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Files or Directories Accessible to External Parties'), @generic_vulnerability_files_or_directories_accessible_to_external_parties_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Command Shell in Externally Accessible Directory'), @generic_vulnerability_command_shell_in_externally_accessible_directory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'ASP.NET Misconfiguration: Not Using Input Validation Framework'), @generic_vulnerability_asp_net_misconfiguration_not_using_input_validation_framework_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'ASP.NET Misconfiguration: Use of Identity Impersonation'), @generic_vulnerability_asp_net_misconfiguration_use_of_identity_impersonation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Concurrency Issues'), @generic_vulnerability_concurrency_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of getlogin() in Multithreaded Application'), @generic_vulnerability_use_of_getlogin_in_multithreaded_application_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Often Misused: Arguments and Parameters'), @generic_vulnerability_often_misused_arguments_and_parameters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of umask() with chmod-style Argument'), @generic_vulnerability_use_of_umask_with_chmod_style_argument_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Dead Code'), @generic_vulnerability_dead_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Return of Stack Variable Address'), @generic_vulnerability_return_of_stack_variable_address_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unused Variable'), @generic_vulnerability_unused_variable_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'SQL Injection: Hibernate'), @generic_vulnerability_sql_injection_hibernate_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on Cookies without Validation and Integrity Checking'), @generic_vulnerability_reliance_on_cookies_without_validation_and_integrity_checking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Access Control Bypass Through User-Controlled SQL Primary Key'), @generic_vulnerability_access_control_bypass_through_user_controlled_sql_primary_key_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unsynchronized Access to Shared Data'), @generic_vulnerability_unsynchronized_access_to_shared_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'finalize() Method Without super.finalize()'), @generic_vulnerability_finalize_method_without_super_finalize_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Expression Issues'), @generic_vulnerability_expression_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Expression is Always False'), @generic_vulnerability_expression_is_always_false_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Expression is Always True'), @generic_vulnerability_expression_is_always_true_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Call to Thread run() instead of start()'), @generic_vulnerability_call_to_thread_run_instead_of_start_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Follow Specification'), @generic_vulnerability_failure_to_follow_specification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'EJB Bad Practices: Use of Synchronization Primitives'), @generic_vulnerability_ejb_bad_practices_use_of_synchronization_primitives_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'EJB Bad Practices: Use of AWT Swing'), @generic_vulnerability_ejb_bad_practices_use_of_awt_swing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'EJB Bad Practices: Use of Java I/O'), @generic_vulnerability_ejb_bad_practices_use_of_java_i_o_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'EJB Bad Practices: Use of Sockets'), @generic_vulnerability_ejb_bad_practices_use_of_sockets_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'EJB Bad Practices: Use of Class Loader'), @generic_vulnerability_ejb_bad_practices_use_of_class_loader_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'clone() Method Without super.clone()'), @generic_vulnerability_clone_method_without_super_clone_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Object Model Violation: Just One of Equals and Hashcode Defined'), @generic_vulnerability_object_model_violation_just_one_of_equals_and_hashcode_defined_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Array Declared Public, Final, and Static'), @generic_vulnerability_array_declared_public_final_and_static_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'finalize() Method Declared Public'), @generic_vulnerability_finalize_method_declared_public_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Return Inside Finally Block'), @generic_vulnerability_return_inside_finally_block_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Empty Synchronized Block'), @generic_vulnerability_empty_synchronized_block_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Explicit Call to Finalize()'), @generic_vulnerability_explicit_call_to_finalize_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Assignment of a Fixed Address to a Pointer'), @generic_vulnerability_assignment_of_a_fixed_address_to_a_pointer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Attempt to Access Child of a Non-structure Pointer'), @generic_vulnerability_attempt_to_access_child_of_a_non_structure_pointer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Call to Non-ubiquitous API'), @generic_vulnerability_call_to_non_ubiquitous_api_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Free of Memory not on the Heap'), @generic_vulnerability_free_of_memory_not_on_the_heap_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Sensitive Data Storage in Improperly Locked Memory'), @generic_vulnerability_sensitive_data_storage_in_improperly_locked_memory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Authentication Bypass Issues'), @generic_vulnerability_authentication_bypass_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created'), @generic_vulnerability_authentication_bypass_openssl_ctx_object_modified_after_ssl_objects_are_created_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Comparison of Object References Instead of Object Contents'), @generic_vulnerability_comparison_of_object_references_instead_of_object_contents_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Semantic Object Comparison'), @generic_vulnerability_incorrect_semantic_object_comparison_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Wrong Operator in String Comparison'), @generic_vulnerability_use_of_wrong_operator_in_string_comparison_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Query Strings in GET Request'), @generic_vulnerability_information_leak_through_query_strings_in_get_request_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Trust of OpenSSL Certificate Without Validation'), @generic_vulnerability_trust_of_openssl_certificate_without_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Catch All Exceptions in Servlet '), @generic_vulnerability_failure_to_catch_all_exceptions_in_servlet_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'URL Redirection to Untrusted Site (''Open Redirect'')'), @generic_vulnerability_url_redirection_to_untrusted_site_open_redirect_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Client-Side Enforcement of Server-Side Security'), @generic_vulnerability_client_side_enforcement_of_server_side_security_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Client-Side Authentication'), @generic_vulnerability_use_of_client_side_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Deprecated Entries'), @generic_vulnerability_deprecated_entries_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Multiple Binds to the Same Port'), @generic_vulnerability_multiple_binds_to_the_same_port_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unchecked Input for Loop Condition'), @generic_vulnerability_unchecked_input_for_loop_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Public Static Final Field References Mutable Object'), @generic_vulnerability_public_static_final_field_references_mutable_object_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Struts: Non-private Field in ActionForm Class'), @generic_vulnerability_struts_non_private_field_in_actionform_class_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Double-Checked Locking'), @generic_vulnerability_double_checked_locking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Externally Controlled Reference to a Resource in Another Sphere'), @generic_vulnerability_externally_controlled_reference_to_a_resource_in_another_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through XML External Entity File Disclosure'), @generic_vulnerability_information_leak_through_xml_external_entity_file_disclosure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Indexing of Private Data'), @generic_vulnerability_information_leak_through_indexing_of_private_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Session Expiration'), @generic_vulnerability_insufficient_session_expiration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Sensitive Cookie in HTTPS Session Without ''Secure'' Attribute'), @generic_vulnerability_sensitive_cookie_in_https_session_without_secure_attribute_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak Through Comments'), @generic_vulnerability_information_leak_through_comments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incomplete Identification of Uploaded File Variables (PHP)'), @generic_vulnerability_incomplete_identification_of_uploaded_file_variables_php_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reachable Assertion'), @generic_vulnerability_reachable_assertion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Exposed Unsafe ActiveX Method'), @generic_vulnerability_exposed_unsafe_activex_method_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Dangling Database Cursor (''Cursor Injection'')'), @generic_vulnerability_dangling_database_cursor_cursor_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unverified Password Change'), @generic_vulnerability_unverified_password_change_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Variable Extraction Error'), @generic_vulnerability_variable_extraction_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unvalidated Function Hook Arguments'), @generic_vulnerability_unvalidated_function_hook_arguments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unsafe ActiveX Control Marked Safe For Scripting'), @generic_vulnerability_unsafe_activex_control_marked_safe_for_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Executable Regular Expression Error'), @generic_vulnerability_executable_regular_expression_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Permissive Regular Expression'), @generic_vulnerability_permissive_regular_expression_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Null Byte Interaction Error (Poison Null Byte)'), @generic_vulnerability_null_byte_interaction_error_poison_null_byte_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Dynamic Variable Evaluation'), @generic_vulnerability_dynamic_variable_evaluation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Function Call with Incorrectly Specified Arguments'), @generic_vulnerability_function_call_with_incorrectly_specified_arguments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses Examined by SAMATE'), @generic_vulnerability_weaknesses_examined_by_samate_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Resource-specific Weaknesses'), @generic_vulnerability_resource_specific_weaknesses_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses that Affect Files or Directories'), @generic_vulnerability_weaknesses_that_affect_files_or_directories_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses that Affect Memory'), @generic_vulnerability_weaknesses_that_affect_memory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses that Affect System Processes'), @generic_vulnerability_weaknesses_that_affect_system_processes_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses Used by NVD'), @generic_vulnerability_weaknesses_used_by_nvd_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Not Failing Securely (''Failing Open'')'), @generic_vulnerability_not_failing_securely_failing_open_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Use Economy of Mechanism'), @generic_vulnerability_failure_to_use_economy_of_mechanism_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Use Complete Mediation'), @generic_vulnerability_failure_to_use_complete_mediation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Access Control Bypass Through User-Controlled Key'), @generic_vulnerability_access_control_bypass_through_user_controlled_key_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weak Password Recovery Mechanism for Forgotten Password'), @generic_vulnerability_weak_password_recovery_mechanism_for_forgotten_password_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Filtering of File and Other Resource Names for Executable Content'), @generic_vulnerability_insufficient_filtering_of_file_and_other_resource_names_for_executable_content_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'External Control of Critical State Data'), @generic_vulnerability_external_control_of_critical_state_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Data within XPath Expressions (''XPath injection'')'), @generic_vulnerability_failure_to_sanitize_data_within_xpath_expressions_xpath_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Sanitization of HTTP Headers for Scripting Syntax'), @generic_vulnerability_improper_sanitization_of_http_headers_for_scripting_syntax_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Overly Restrictive Account Lockout Mechanism'), @generic_vulnerability_overly_restrictive_account_lockout_mechanism_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on File Name or Extension of Externally-Supplied File'), @generic_vulnerability_reliance_on_file_name_or_extension_of_externally_supplied_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Non-Canonical URL Paths for Authorization Decisions'), @generic_vulnerability_use_of_non_canonical_url_paths_for_authorization_decisions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Use of Privileged APIs'), @generic_vulnerability_incorrect_use_of_privileged_apis_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking'), @generic_vulnerability_reliance_on_obfuscation_or_encryption_of_security_relevant_inputs_without_integrity_checking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Trusting HTTP Permission Methods on the Server Side'), @generic_vulnerability_trusting_http_permission_methods_on_the_server_side_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Information Leak through WSDL File'), @generic_vulnerability_information_leak_through_wsdl_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Sanitize Data within XQuery Expressions (''XQuery Injection'')'), @generic_vulnerability_failure_to_sanitize_data_within_xquery_expressions_xquery_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Compartmentalization'), @generic_vulnerability_insufficient_compartmentalization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on a Single Factor in a Security Decision'), @generic_vulnerability_reliance_on_a_single_factor_in_a_security_decision_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Psychological Acceptability'), @generic_vulnerability_insufficient_psychological_acceptability_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on Security through Obscurity'), @generic_vulnerability_reliance_on_security_through_obscurity_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Violation of Secure Design Principles'), @generic_vulnerability_violation_of_secure_design_principles_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses in Software Written in C'), @generic_vulnerability_weaknesses_in_software_written_in_c_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses in Software Written in Java'), @generic_vulnerability_weaknesses_in_software_written_in_java_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses in Software Written in PHP'), @generic_vulnerability_weaknesses_in_software_written_in_php_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Synchronization'), @generic_vulnerability_insufficient_synchronization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of a Non-reentrant Function in an Unsynchronized Context'), @generic_vulnerability_use_of_a_non_reentrant_function_in_an_unsynchronized_context_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Control of a Resource Through its Lifetime'), @generic_vulnerability_improper_control_of_a_resource_through_its_lifetime_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Initialization'), @generic_vulnerability_improper_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Operation on Resource in Wrong Phase of Lifetime'), @generic_vulnerability_operation_on_resource_in_wrong_phase_of_lifetime_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Locking'), @generic_vulnerability_insufficient_locking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Exposure of Resource to Wrong Sphere'), @generic_vulnerability_exposure_of_resource_to_wrong_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Resource Transfer Between Spheres'), @generic_vulnerability_incorrect_resource_transfer_between_spheres_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Always-Incorrect Control Flow Implementation'), @generic_vulnerability_always_incorrect_control_flow_implementation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Lack of Administrator Control over Security'), @generic_vulnerability_lack_of_administrator_control_over_security_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Operation on a Resource after Expiration or Release'), @generic_vulnerability_operation_on_a_resource_after_expiration_or_release_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'External Influence of Sphere Definition'), @generic_vulnerability_external_influence_of_sphere_definition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Uncontrolled Recursion'), @generic_vulnerability_uncontrolled_recursion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Duplicate Operations on Resource'), @generic_vulnerability_duplicate_operations_on_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Potentially Dangerous Function'), @generic_vulnerability_use_of_potentially_dangerous_function_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weakness Base Elements'), @generic_vulnerability_weakness_base_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Composites'), @generic_vulnerability_composites_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Chain Elements'), @generic_vulnerability_chain_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Integer Overflow to Buffer Overflow'), @generic_vulnerability_integer_overflow_to_buffer_overflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Conversion between Numeric Types'), @generic_vulnerability_incorrect_conversion_between_numeric_types_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Calculation'), @generic_vulnerability_incorrect_calculation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Function Call With Incorrect Order of Arguments'), @generic_vulnerability_function_call_with_incorrect_order_of_arguments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Provide Specified Functionality'), @generic_vulnerability_failure_to_provide_specified_functionality_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Function Call With Incorrect Number of Arguments'), @generic_vulnerability_function_call_with_incorrect_number_of_arguments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Function Call With Incorrect Argument Type'), @generic_vulnerability_function_call_with_incorrect_argument_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Function Call With Incorrectly Specified Argument Value'), @generic_vulnerability_function_call_with_incorrectly_specified_argument_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Function Call With Incorrect Variable or Reference as Argument'), @generic_vulnerability_function_call_with_incorrect_variable_or_reference_as_argument_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Permission Race Condition During Resource Copy'), @generic_vulnerability_permission_race_condition_during_resource_copy_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unchecked Return Value to NULL Pointer Dereference'), @generic_vulnerability_unchecked_return_value_to_null_pointer_dereference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Control Flow Management'), @generic_vulnerability_insufficient_control_flow_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incomplete Blacklist to Cross-Site Scripting'), @generic_vulnerability_incomplete_blacklist_to_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Protection Mechanism Failure'), @generic_vulnerability_protection_mechanism_failure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Multiple Resources with Duplicate Identifier'), @generic_vulnerability_use_of_multiple_resources_with_duplicate_identifier_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Low-Level Functionality'), @generic_vulnerability_use_of_low_level_functionality_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Behavior Order'), @generic_vulnerability_incorrect_behavior_order_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Comparison'), @generic_vulnerability_insufficient_comparison_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Redirect Without Exit'), @generic_vulnerability_redirect_without_exit_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Development Concepts'), @generic_vulnerability_development_concepts_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Seven Pernicious Kingdoms'), @generic_vulnerability_seven_pernicious_kingdoms_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses Introduced During Design'), @generic_vulnerability_weaknesses_introduced_during_design_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses Introduced During Implementation'), @generic_vulnerability_weaknesses_introduced_during_implementation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Failure to Handle Exceptional Conditions'), @generic_vulnerability_failure_to_handle_exceptional_conditions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Type Conversion or Cast'), @generic_vulnerability_incorrect_type_conversion_or_cast_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Control Flow Scoping'), @generic_vulnerability_incorrect_control_flow_scoping_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Incorrectly-Resolved Name or Reference'), @generic_vulnerability_use_of_incorrectly_resolved_name_or_reference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Enforcement of Message or Data Structure'), @generic_vulnerability_improper_enforcement_of_message_or_data_structure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Ownership Assignment'), @generic_vulnerability_incorrect_ownership_assignment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Named Chains'), @generic_vulnerability_named_chains_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Coding Standards Violation'), @generic_vulnerability_coding_standards_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Permission Assignment for Critical Resource'), @generic_vulnerability_incorrect_permission_assignment_for_critical_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Compiler Optimization Removal or Modification of Security-critical Code'), @generic_vulnerability_compiler_optimization_removal_or_modification_of_security_critical_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Weaknesses Addressed by the CERT C Secure Coding Standard'), @generic_vulnerability_weaknesses_addressed_by_the_cert_c_secure_coding_standard_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Exposed Dangerous Method or Function'), @generic_vulnerability_exposed_dangerous_method_or_function_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Check for Unusual or Exceptional Conditions'), @generic_vulnerability_improper_check_for_unusual_or_exceptional_conditions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Handling of Exceptional Conditions'), @generic_vulnerability_improper_handling_of_exceptional_conditions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Custom Error Page'), @generic_vulnerability_missing_custom_error_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Selection of Less-Secure Algorithm During Negotiation (''Algorithm Downgrade'')'), @generic_vulnerability_selection_of_less_secure_algorithm_during_negotiation_algorithm_downgrade_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on Undefined, Unspecified, or Implementation-Defined Behavior'), @generic_vulnerability_reliance_on_undefined_unspecified_or_implementation_defined_behavior_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of a One-Way Hash without a Salt'), @generic_vulnerability_use_of_a_one_way_hash_without_a_salt_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of a One-Way Hash with a Predictable Salt'), @generic_vulnerability_use_of_a_one_way_hash_with_a_predictable_salt_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Free of Pointer not at Start of Buffer'), @generic_vulnerability_free_of_pointer_not_at_start_of_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Mismatched Memory Management Routines'), @generic_vulnerability_mismatched_memory_management_routines_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Release of Invalid Pointer or Reference'), @generic_vulnerability_release_of_invalid_pointer_or_reference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Multiple Locks of a Critical Resource'), @generic_vulnerability_multiple_locks_of_a_critical_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Multiple Unlocks of a Critical Resource'), @generic_vulnerability_multiple_unlocks_of_a_critical_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Critical Variable Declared Public'), @generic_vulnerability_critical_variable_declared_public_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Access to Critical Private Variable via Public Method'), @generic_vulnerability_access_to_critical_private_variable_via_public_method_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incorrect Short Circuit Evaluation'), @generic_vulnerability_incorrect_short_circuit_evaluation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'File Descriptor Exhaustion'), @generic_vulnerability_file_descriptor_exhaustion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Allocation of Resources Without Limits or Throttling'), @generic_vulnerability_allocation_of_resources_without_limits_or_throttling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Reference to Active Allocated Resource'), @generic_vulnerability_missing_reference_to_active_allocated_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Release of Resource after Effective Lifetime'), @generic_vulnerability_missing_release_of_resource_after_effective_lifetime_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Reference to Active File Descriptor or Handle'), @generic_vulnerability_missing_reference_to_active_file_descriptor_or_handle_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Allocation of File Descriptors or Handles Without Limits or Throttling'), @generic_vulnerability_allocation_of_file_descriptors_or_handles_without_limits_or_throttling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Missing Release of File Descriptor or Handle after Effective Lifetime'), @generic_vulnerability_missing_release_of_file_descriptor_or_handle_after_effective_lifetime_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Unrestricted Recursive Entity References in DTDs (''XML Bomb'')'), @generic_vulnerability_unrestricted_recursive_entity_references_in_dtds_xml_bomb_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Regular Expression without Anchors'), @generic_vulnerability_regular_expression_without_anchors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Insufficient Logging'), @generic_vulnerability_insufficient_logging_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Logging of Excessive Data'), @generic_vulnerability_logging_of_excessive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of RSA Algorithm without OAEP'), @generic_vulnerability_use_of_rsa_algorithm_without_oaep_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code'), @generic_vulnerability_improper_address_validation_in_ioctl_with_method_neither_i_o_control_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Exposed IOCTL with Insufficient Access Control'), @generic_vulnerability_exposed_ioctl_with_insufficient_access_control_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Operator Precedence Logic Error'), @generic_vulnerability_operator_precedence_logic_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on Cookies without Validation and Integrity Checking in a Security Decision'), @generic_vulnerability_reliance_on_cookies_without_validation_and_integrity_checking_in_a_security_decision_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Path Manipulation Function without Maximum-sized Buffer'), @generic_vulnerability_use_of_path_manipulation_function_without_maximum_sized_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Access of Memory Location Before Start of Buffer'), @generic_vulnerability_access_of_memory_location_before_start_of_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Out-of-bounds Write'), @generic_vulnerability_out_of_bounds_write_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Access of Memory Location After End of Buffer'), @generic_vulnerability_access_of_memory_location_after_end_of_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Uncontrolled Memory Allocation'), @generic_vulnerability_uncontrolled_memory_allocation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Filtering of Special Elements'), @generic_vulnerability_improper_filtering_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incomplete Filtering of Special Elements'), @generic_vulnerability_incomplete_filtering_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incomplete Filtering of One or More Instances of Special Elements'), @generic_vulnerability_incomplete_filtering_of_one_or_more_instances_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Only Filtering One Instance of a Special Element'), @generic_vulnerability_only_filtering_one_instance_of_a_special_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Incomplete Filtering of Multiple Instances of Special Elements'), @generic_vulnerability_incomplete_filtering_of_multiple_instances_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Only Filtering Special Elements at a Specified Location'), @generic_vulnerability_only_filtering_special_elements_at_a_specified_location_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Only Filtering Special Elements Relative to a Marker'), @generic_vulnerability_only_filtering_special_elements_relative_to_a_marker_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Only Filtering Special Elements at an Absolute Position'), @generic_vulnerability_only_filtering_special_elements_at_an_absolute_position_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Use of Hard-coded Credentials'), @generic_vulnerability_use_of_hard_coded_credentials_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Improper Control of Interaction Frequency'), @generic_vulnerability_improper_control_of_interaction_frequency_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Guessable CAPTCHA'), @generic_vulnerability_guessable_captcha_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Buffer Access with Incorrect Length Value'), @generic_vulnerability_buffer_access_with_incorrect_length_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Buffer Access Using Size of Source Buffer'), @generic_vulnerability_buffer_access_using_size_of_source_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Reliance on Untrusted Inputs in a Security Decision'), @generic_vulnerability_reliance_on_untrusted_inputs_in_a_security_decision_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Research Concepts'), @generic_vulnerability_research_concepts_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @manual_channel_id AND Code = 'Comprehensive CWE Dictionary'), @generic_vulnerability_comprehensive_cwe_dictionary_id);

-- Skipfish
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '30101'), @generic_vulnerability_insufficiently_protected_credentials_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '30201'), @generic_vulnerability_improper_validation_of_certificate_expiration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '30203'), @generic_vulnerability_improper_validation_of_host_specific_certificate_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '30301'), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '30401'), @generic_vulnerability_url_redirection_to_untrusted_site_open_redirect_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '30402'), @generic_vulnerability_externally_controlled_reference_to_a_resource_in_another_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '30601'), @generic_vulnerability_cross_site_request_forgery_csrf_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '30701'), @generic_vulnerability_information_leak_through_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '40101'), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '40102'), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '40103'), @generic_vulnerability_failure_to_sanitize_crlf_sequences_in_http_headers_http_response_splitting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '40104'), @generic_vulnerability_externally_controlled_reference_to_a_resource_in_another_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '40301'), @generic_vulnerability_improper_handling_of_missing_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '40304'), @generic_vulnerability_improper_handling_of_missing_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND code = "40401"), @generic_vulnerability_direct_request_forced_browsing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND code = "40401 Directory listing"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '40402'), @generic_vulnerability_information_leak_through_server_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND code = "40501"), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '40601'), @generic_vulnerability_information_leak_through_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '40701'), @generic_vulnerability_missing_encryption_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND code = "50101"), @generic_vulnerability_failure_to_sanitize_data_within_xpath_expressions_xpath_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '50102'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '50103'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '50104'), @generic_vulnerability_uncontrolled_format_string_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '50105'), @generic_vulnerability_integer_overflow_or_wraparound_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '50201'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @skipfish_channel_id AND Code = '50301'), @generic_vulnerability_trusting_http_permission_methods_on_the_server_side_id);

-- w3af
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "SQL injection vulnerability"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "Blind SQL injection vulnerability"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "Permanent cross site scripting vulnerability"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "XPATH injection vulnerability"), @generic_vulnerability_failure_to_sanitize_data_within_xpath_expressions_xpath_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "Cross site scripting vulnerability"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "Potentially Interesting File"), @generic_vulnerability_direct_request_forced_browsing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "LDAP injection vulnerability"), @generic_vulnerability_failure_to_sanitize_data_into_ldap_queries_ldap_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "Format string vulnerability"), @generic_vulnerability_uncontrolled_format_string_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "OS commanding vulnerability"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @w3af_channel_id AND code = "eval() input injection vulnerability"), @generic_vulnerability_improper_sanitization_of_directives_in_dynamically_evaluated_code_eval_injection_id);

-- Burp Suite
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @burp_suite_channel_id AND code = "Private IP addresses disclosed"), @generic_vulnerability_improper_cross_boundary_removal_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @burp_suite_channel_id AND code = "Cross-site scripting (reflected)"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @burp_suite_channel_id AND code = "HTML does not specify charset"), @generic_vulnerability_failure_to_handle_alternate_encoding_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @burp_suite_channel_id AND code = "Directory listing"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @burp_suite_channel_id AND code = "SQL injection"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @burp_suite_channel_id AND code = "OS command injection"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
	
-- WebInspect
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "SQL Injection Confirmed (No Data Extraction)"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Hidden Form Value"), @generic_vulnerability_reliance_on_untrusted_inputs_in_a_security_decision_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Universal Arbitrary Command Execution (Pipe/Ampersand/Double Quote)"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Universal Arbitrary Command Execution (Newline)"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Common Include Files (.inc)"), @generic_vulnerability_information_leak_through_include_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Common Documentation Text Files"), @generic_vulnerability_file_and_directory_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "POST Parameters Accepted as GET Parameters"), @generic_vulnerability_cross_site_request_forgery_csrf_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Possible Insecure Cryptographic Hash (MD Family)"), @generic_vulnerability_inadequate_encryption_strength_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Possible Server Path Disclosure (unix)"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "PHP Error Message"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Universal Arbitrary Command Execution (Pipe/Ampersand)"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Password in Query Data"), @generic_vulnerability_missing_encryption_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Subversion Keyword Information Disclosure"), @generic_vulnerability_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "PHP Test Page"), @generic_vulnerability_intended_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Internal IP Disclosure"), @generic_vulnerability_improper_cross_boundary_removal_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "File Open Error Messages Detected"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Database Server Error Message"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Cross-Site Scripting"), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Miscellaneous Product-Specific Directories"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "\"Admin\" Directory"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Form Auto Complete Active"), @generic_vulnerability_information_leak_through_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Possible File Upload Capability"), @generic_vulnerability_unrestricted_upload_of_file_with_dangerous_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Logins Sent Over Unencrypted Connection"), @generic_vulnerability_cleartext_transmission_of_sensitive_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Environmental Variables Disclosure"), @generic_vulnerability_process_environment_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "User supplied data without POST"), @generic_vulnerability_information_leak_through_query_strings_in_get_request_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Set-Cookie does not use HTTPOnly Keyword"), @generic_vulnerability_reliance_on_cookies_without_validation_and_integrity_checking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Potential filename found in comments"), @generic_vulnerability_information_leak_through_comments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Common Web Site Structure Directories"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Persistent Cookies"), @generic_vulnerability_information_leak_through_persistent_cookies_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Phpinfo() Information Disclosure"), @generic_vulnerability_intended_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Server Error Response"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Documentation Directories"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Possible PHP Source Code Disclosure"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Directory Listing"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "CGI and Scripting-Related Directories"), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Local File Inclusion/Reading Vulnerability"), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "OPTIONS Method Supported"), @generic_vulnerability_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Arbitrary Remote File Include"), @generic_vulnerability_improper_control_of_filename_for_include_require_statement_in_php_program_php_file_inclusion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Universal Arbitrary Command Execution (Pipe/Ampersand/Single Quote)"), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Common Application Test Files"), @generic_vulnerability_file_and_directory_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Unencrypted Login Form"), @generic_vulnerability_missing_encryption_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "PHP Invalid Data Type Path Disclosure"), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @webinspect_channel_id AND code = "Script File Extension Disclosure"), @generic_vulnerability_information_exposure_id);
	
-- Veracode
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '1'), @generic_vulnerability_location_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '2'), @generic_vulnerability_environment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '3'), @generic_vulnerability_technology_specific_environment_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '4'), @generic_vulnerability_j2ee_environment_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '5'), @generic_vulnerability_j2ee_misconfiguration_data_transmission_without_encryption_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '6'), @generic_vulnerability_j2ee_misconfiguration_insufficient_session_id_length_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '7'), @generic_vulnerability_j2ee_misconfiguration_missing_custom_error_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '8'), @generic_vulnerability_j2ee_misconfiguration_entity_bean_declared_remote_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '9'), @generic_vulnerability_j2ee_misconfiguration_weak_access_permissions_for_ejb_methods_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '10'), @generic_vulnerability_asp_net_environment_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '11'), @generic_vulnerability_asp_net_misconfiguration_creating_debug_binary_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '12'), @generic_vulnerability_asp_net_misconfiguration_missing_custom_error_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '13'), @generic_vulnerability_asp_net_misconfiguration_password_in_configuration_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '14'), @generic_vulnerability_compiler_removal_of_code_to_clear_buffers_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '15'), @generic_vulnerability_external_control_of_system_or_configuration_setting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '16'), @generic_vulnerability_configuration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '17'), @generic_vulnerability_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '18'), @generic_vulnerability_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '19'), @generic_vulnerability_data_handling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '20'), @generic_vulnerability_improper_input_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '21'), @generic_vulnerability_pathname_traversal_and_equivalence_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '22'), @generic_vulnerability_improper_limitation_of_a_pathname_to_a_restricted_directory_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '23'), @generic_vulnerability_relative_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '24'), @generic_vulnerability_path_traversal_filedir_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '25'), @generic_vulnerability_path_traversal_filedir_25_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '26'), @generic_vulnerability_path_traversal_dir_filename_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '27'), @generic_vulnerability_path_traversal_dir_filename_27_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '28'), @generic_vulnerability_path_traversal_filedir_28_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '29'), @generic_vulnerability_path_traversal_filename_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '30'), @generic_vulnerability_path_traversal_dir_filename_30_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '31'), @generic_vulnerability_path_traversal_dir_filename_31_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '32'), @generic_vulnerability_path_traversal_triple_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '33'), @generic_vulnerability_path_traversal_multiple_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '34'), @generic_vulnerability_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '35'), @generic_vulnerability_path_traversal_35_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '36'), @generic_vulnerability_absolute_path_traversal_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '37'), @generic_vulnerability_path_traversal_absolute_pathname_here_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '38'), @generic_vulnerability_path_traversal_absolute_pathname_here_38_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '39'), @generic_vulnerability_path_traversal_c_dirname_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '40'), @generic_vulnerability_path_traversal_unc_share_name_windows_unc_share_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '41'), @generic_vulnerability_improper_resolution_of_path_equivalence_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '42'), @generic_vulnerability_path_equivalence_filename_trailing_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '43'), @generic_vulnerability_path_equivalence_filename_multiple_trailing_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '44'), @generic_vulnerability_path_equivalence_file_name_internal_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '45'), @generic_vulnerability_path_equivalence_file_name_multiple_internal_dot_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '46'), @generic_vulnerability_path_equivalence_filename_trailing_space_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '47'), @generic_vulnerability_path_equivalence_filename_leading_space_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '48'), @generic_vulnerability_path_equivalence_file_name_internal_whitespace_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '49'), @generic_vulnerability_path_equivalence_filename_trailing_slash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '50'), @generic_vulnerability_path_equivalence_multiple_leading_slash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '51'), @generic_vulnerability_path_equivalence_multiple_internal_slash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '52'), @generic_vulnerability_path_equivalence_multiple_trailing_slash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '53'), @generic_vulnerability_path_equivalence_multiple_internal_backslash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '54'), @generic_vulnerability_path_equivalence_filedir_trailing_backslash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '55'), @generic_vulnerability_path_equivalence_single_dot_directory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '56'), @generic_vulnerability_path_equivalence_filedir_wildcard_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '57'), @generic_vulnerability_path_equivalence_fakedir_realdir_filename_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '58'), @generic_vulnerability_path_equivalence_windows_8_3_filename_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '59'), @generic_vulnerability_improper_link_resolution_before_file_access_link_following_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '60'), @generic_vulnerability_unix_path_link_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '61'), @generic_vulnerability_unix_symbolic_link_symlink_following_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '62'), @generic_vulnerability_unix_hard_link_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '63'), @generic_vulnerability_windows_path_link_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '64'), @generic_vulnerability_windows_shortcut_following_lnk_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '65'), @generic_vulnerability_windows_hard_link_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '66'), @generic_vulnerability_improper_handling_of_file_names_that_identify_virtual_resources_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '67'), @generic_vulnerability_improper_handling_of_windows_device_names_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '68'), @generic_vulnerability_windows_virtual_file_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '69'), @generic_vulnerability_failure_to_handle_windows_data_alternate_data_stream_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '70'), @generic_vulnerability_mac_virtual_file_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '71'), @generic_vulnerability_apple_ds_store_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '72'), @generic_vulnerability_improper_handling_of_apple_hfs_alternate_data_stream_path_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '73'), @generic_vulnerability_external_control_of_file_name_or_path_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '74'), @generic_vulnerability_failure_to_sanitize_data_into_a_different_plane_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '75'), @generic_vulnerability_failure_to_sanitize_special_elements_into_a_different_plane_special_element_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '76'), @generic_vulnerability_failure_to_resolve_equivalent_special_elements_into_a_different_plane_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '77'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_a_command_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '78'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_os_command_os_command_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '79'), @generic_vulnerability_failure_to_preserve_web_page_structure_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '80'), @generic_vulnerability_improper_sanitization_of_script_related_html_tags_in_a_web_page_basic_xss_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '81'), @generic_vulnerability_improper_sanitization_of_script_in_an_error_message_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '82'), @generic_vulnerability_improper_sanitization_of_script_in_attributes_of_img_tags_in_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '83'), @generic_vulnerability_failure_to_sanitize_script_in_attributes_in_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '84'), @generic_vulnerability_failure_to_resolve_encoded_uri_schemes_in_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '85'), @generic_vulnerability_doubled_character_xss_manipulations_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '86'), @generic_vulnerability_failure_to_sanitize_invalid_characters_in_identifiers_in_web_pages_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '87'), @generic_vulnerability_failure_to_sanitize_alternate_xss_syntax_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '88'), @generic_vulnerability_argument_injection_or_modification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '89'), @generic_vulnerability_improper_sanitization_of_special_elements_used_in_an_sql_command_sql_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '90'), @generic_vulnerability_failure_to_sanitize_data_into_ldap_queries_ldap_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '91'), @generic_vulnerability_xml_injection_aka_blind_xpath_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '92'), @generic_vulnerability_deprecated_improper_sanitization_of_custom_special_characters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '93'), @generic_vulnerability_failure_to_sanitize_crlf_sequences_crlf_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '94'), @generic_vulnerability_failure_to_control_generation_of_code_code_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '95'), @generic_vulnerability_improper_sanitization_of_directives_in_dynamically_evaluated_code_eval_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '96'), @generic_vulnerability_improper_sanitization_of_directives_in_statically_saved_code_static_code_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '97'), @generic_vulnerability_failure_to_sanitize_server_side_includes_ssi_within_a_web_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '98'), @generic_vulnerability_improper_control_of_filename_for_include_require_statement_in_php_program_php_file_inclusion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '99'), @generic_vulnerability_improper_control_of_resource_identifiers_resource_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '100'), @generic_vulnerability_technology_specific_input_validation_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '101'), @generic_vulnerability_struts_validation_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '102'), @generic_vulnerability_struts_duplicate_validation_forms_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '103'), @generic_vulnerability_struts_incomplete_validate_method_definition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '104'), @generic_vulnerability_struts_form_bean_does_not_extend_validation_class_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '105'), @generic_vulnerability_struts_form_field_without_validator_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '106'), @generic_vulnerability_struts_plug_in_framework_not_in_use_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '107'), @generic_vulnerability_struts_unused_validation_form_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '108'), @generic_vulnerability_struts_unvalidated_action_form_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '109'), @generic_vulnerability_struts_validator_turned_off_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '110'), @generic_vulnerability_struts_validator_without_form_field_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '111'), @generic_vulnerability_direct_use_of_unsafe_jni_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '112'), @generic_vulnerability_missing_xml_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '113'), @generic_vulnerability_failure_to_sanitize_crlf_sequences_in_http_headers_http_response_splitting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '114'), @generic_vulnerability_process_control_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '115'), @generic_vulnerability_misinterpretation_of_input_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '116'), @generic_vulnerability_improper_encoding_or_escaping_of_output_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '117'), @generic_vulnerability_improper_output_sanitization_for_logs_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '118'), @generic_vulnerability_improper_access_of_indexable_resource_range_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '119'), @generic_vulnerability_failure_to_constrain_operations_within_the_bounds_of_a_memory_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '120'), @generic_vulnerability_buffer_copy_without_checking_size_of_input_classic_buffer_overflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '121'), @generic_vulnerability_stack_based_buffer_overflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '122'), @generic_vulnerability_heap_based_buffer_overflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '123'), @generic_vulnerability_write_what_where_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '124'), @generic_vulnerability_buffer_underwrite_buffer_underflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '125'), @generic_vulnerability_out_of_bounds_read_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '126'), @generic_vulnerability_buffer_over_read_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '127'), @generic_vulnerability_buffer_under_read_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '128'), @generic_vulnerability_wrap_around_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '129'), @generic_vulnerability_improper_validation_of_array_index_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '130'), @generic_vulnerability_improper_handling_of_length_parameter_inconsistency_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '131'), @generic_vulnerability_incorrect_calculation_of_buffer_size_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '132'), @generic_vulnerability_deprecated_duplicate_miscalculated_null_termination_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '133'), @generic_vulnerability_string_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '134'), @generic_vulnerability_uncontrolled_format_string_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '135'), @generic_vulnerability_incorrect_calculation_of_multi_byte_string_length_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '136'), @generic_vulnerability_type_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '137'), @generic_vulnerability_representation_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '138'), @generic_vulnerability_improper_sanitization_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '139'), @generic_vulnerability_deprecated_general_special_element_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '140'), @generic_vulnerability_failure_to_sanitize_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '141'), @generic_vulnerability_failure_to_sanitize_parameter_argument_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '142'), @generic_vulnerability_failure_to_sanitize_value_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '143'), @generic_vulnerability_failure_to_sanitize_record_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '144'), @generic_vulnerability_failure_to_sanitize_line_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '145'), @generic_vulnerability_failure_to_sanitize_section_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '146'), @generic_vulnerability_failure_to_sanitize_expression_command_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '147'), @generic_vulnerability_improper_sanitization_of_input_terminators_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '148'), @generic_vulnerability_failure_to_sanitize_input_leaders_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '149'), @generic_vulnerability_failure_to_sanitize_quoting_syntax_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '150'), @generic_vulnerability_failure_to_sanitize_escape_meta_or_control_sequences_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '151'), @generic_vulnerability_improper_sanitization_of_comment_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '152'), @generic_vulnerability_improper_sanitization_of_macro_symbols_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '153'), @generic_vulnerability_improper_sanitization_of_substitution_characters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '154'), @generic_vulnerability_improper_sanitization_of_variable_name_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '155'), @generic_vulnerability_improper_sanitization_of_wildcards_or_matching_symbols_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '156'), @generic_vulnerability_improper_sanitization_of_whitespace_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '157'), @generic_vulnerability_failure_to_sanitize_paired_delimiters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '158'), @generic_vulnerability_failure_to_sanitize_null_byte_or_nul_character_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '159'), @generic_vulnerability_failure_to_sanitize_special_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '160'), @generic_vulnerability_improper_sanitization_of_leading_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '161'), @generic_vulnerability_improper_sanitization_of_multiple_leading_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '162'), @generic_vulnerability_improper_sanitization_of_trailing_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '163'), @generic_vulnerability_improper_sanitization_of_multiple_trailing_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '164'), @generic_vulnerability_improper_sanitization_of_internal_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '165'), @generic_vulnerability_improper_sanitization_of_multiple_internal_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '166'), @generic_vulnerability_improper_handling_of_missing_special_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '167'), @generic_vulnerability_improper_handling_of_additional_special_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '168'), @generic_vulnerability_failure_to_resolve_inconsistent_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '169'), @generic_vulnerability_technology_specific_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '170'), @generic_vulnerability_improper_null_termination_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '171'), @generic_vulnerability_cleansing_canonicalization_and_comparison_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '172'), @generic_vulnerability_encoding_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '173'), @generic_vulnerability_failure_to_handle_alternate_encoding_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '174'), @generic_vulnerability_double_decoding_of_the_same_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '175'), @generic_vulnerability_failure_to_handle_mixed_encoding_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '176'), @generic_vulnerability_failure_to_handle_unicode_encoding_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '177'), @generic_vulnerability_failure_to_handle_url_encoding_hex_encoding_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '178'), @generic_vulnerability_failure_to_resolve_case_sensitivity_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '179'), @generic_vulnerability_incorrect_behavior_order_early_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '180'), @generic_vulnerability_incorrect_behavior_order_validate_before_canonicalize_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '181'), @generic_vulnerability_incorrect_behavior_order_validate_before_filter_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '182'), @generic_vulnerability_collapse_of_data_into_unsafe_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '183'), @generic_vulnerability_permissive_whitelist_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '184'), @generic_vulnerability_incomplete_blacklist_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '185'), @generic_vulnerability_incorrect_regular_expression_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '186'), @generic_vulnerability_overly_restrictive_regular_expression_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '187'), @generic_vulnerability_partial_comparison_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '188'), @generic_vulnerability_reliance_on_data_memory_layout_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '189'), @generic_vulnerability_numeric_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '190'), @generic_vulnerability_integer_overflow_or_wraparound_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '191'), @generic_vulnerability_integer_underflow_wrap_or_wraparound_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '192'), @generic_vulnerability_integer_coercion_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '193'), @generic_vulnerability_off_by_one_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '194'), @generic_vulnerability_unexpected_sign_extension_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '195'), @generic_vulnerability_signed_to_unsigned_conversion_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '196'), @generic_vulnerability_unsigned_to_signed_conversion_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '197'), @generic_vulnerability_numeric_truncation_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '198'), @generic_vulnerability_use_of_incorrect_byte_ordering_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '199'), @generic_vulnerability_information_management_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '200'), @generic_vulnerability_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '201'), @generic_vulnerability_information_leak_through_sent_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '202'), @generic_vulnerability_privacy_leak_through_data_queries_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '203'), @generic_vulnerability_information_exposure_through_discrepancy_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '204'), @generic_vulnerability_response_discrepancy_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '205'), @generic_vulnerability_information_exposure_through_behavioral_discrepancy_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '206'), @generic_vulnerability_internal_behavioral_inconsistency_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '207'), @generic_vulnerability_information_exposure_through_an_external_behavioral_inconsistency_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '208'), @generic_vulnerability_timing_discrepancy_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '209'), @generic_vulnerability_information_exposure_through_an_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '210'), @generic_vulnerability_product_generated_error_message_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '211'), @generic_vulnerability_product_external_error_message_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '212'), @generic_vulnerability_improper_cross_boundary_removal_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '213'), @generic_vulnerability_intended_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '214'), @generic_vulnerability_process_environment_information_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '215'), @generic_vulnerability_information_leak_through_debug_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '216'), @generic_vulnerability_containment_errors_container_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '217'), @generic_vulnerability_deprecated_failure_to_protect_stored_data_from_modification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '218'), @generic_vulnerability_deprecated_duplicate_failure_to_provide_confidentiality_for_stored_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '219'), @generic_vulnerability_sensitive_data_under_web_root_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '220'), @generic_vulnerability_sensitive_data_under_ftp_root_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '221'), @generic_vulnerability_information_loss_or_omission_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '222'), @generic_vulnerability_truncation_of_security_relevant_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '223'), @generic_vulnerability_omission_of_security_relevant_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '224'), @generic_vulnerability_obscured_security_relevant_information_by_alternate_name_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '225'), @generic_vulnerability_deprecated_duplicate_general_information_management_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '226'), @generic_vulnerability_sensitive_information_uncleared_before_release_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '227'), @generic_vulnerability_failure_to_fulfill_api_contract_api_abuse_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '228'), @generic_vulnerability_improper_handling_of_syntactically_invalid_structure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '229'), @generic_vulnerability_improper_handling_of_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '230'), @generic_vulnerability_improper_handling_of_missing_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '231'), @generic_vulnerability_improper_handling_of_extra_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '232'), @generic_vulnerability_improper_handling_of_undefined_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '233'), @generic_vulnerability_parameter_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '234'), @generic_vulnerability_failure_to_handle_missing_parameter_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '235'), @generic_vulnerability_improper_handling_of_extra_parameters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '236'), @generic_vulnerability_improper_handling_of_undefined_parameters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '237'), @generic_vulnerability_improper_handling_of_structural_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '238'), @generic_vulnerability_improper_handling_of_incomplete_structural_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '239'), @generic_vulnerability_failure_to_handle_incomplete_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '240'), @generic_vulnerability_improper_handling_of_inconsistent_structural_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '241'), @generic_vulnerability_improper_handling_of_unexpected_data_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '242'), @generic_vulnerability_use_of_inherently_dangerous_function_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '243'), @generic_vulnerability_failure_to_change_working_directory_in_chroot_jail_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '244'), @generic_vulnerability_failure_to_clear_heap_memory_before_release_heap_inspection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '245'), @generic_vulnerability_j2ee_bad_practices_direct_management_of_connections_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '246'), @generic_vulnerability_j2ee_bad_practices_direct_use_of_sockets_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '247'), @generic_vulnerability_reliance_on_dns_lookups_in_a_security_decision_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '248'), @generic_vulnerability_uncaught_exception_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '249'), @generic_vulnerability_deprecated_often_misused_path_manipulation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '250'), @generic_vulnerability_execution_with_unnecessary_privileges_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '251'), @generic_vulnerability_often_misused_string_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '252'), @generic_vulnerability_unchecked_return_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '253'), @generic_vulnerability_incorrect_check_of_function_return_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '254'), @generic_vulnerability_security_features_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '255'), @generic_vulnerability_credentials_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '256'), @generic_vulnerability_plaintext_storage_of_a_password_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '257'), @generic_vulnerability_storing_passwords_in_a_recoverable_format_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '258'), @generic_vulnerability_empty_password_in_configuration_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '259'), @generic_vulnerability_use_of_hard_coded_password_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '260'), @generic_vulnerability_password_in_configuration_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '261'), @generic_vulnerability_weak_cryptography_for_passwords_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '262'), @generic_vulnerability_not_using_password_aging_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '263'), @generic_vulnerability_password_aging_with_long_expiration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '264'), @generic_vulnerability_permissions_privileges_and_access_controls_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '265'), @generic_vulnerability_privilege_sandbox_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '266'), @generic_vulnerability_incorrect_privilege_assignment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '267'), @generic_vulnerability_privilege_defined_with_unsafe_actions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '268'), @generic_vulnerability_privilege_chaining_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '269'), @generic_vulnerability_improper_privilege_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '270'), @generic_vulnerability_privilege_context_switching_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '271'), @generic_vulnerability_privilege_dropping_lowering_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '272'), @generic_vulnerability_least_privilege_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '273'), @generic_vulnerability_improper_check_for_dropped_privileges_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '274'), @generic_vulnerability_improper_handling_of_insufficient_privileges_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '275'), @generic_vulnerability_permission_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '276'), @generic_vulnerability_incorrect_default_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '277'), @generic_vulnerability_insecure_inherited_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '278'), @generic_vulnerability_insecure_preserved_inherited_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '279'), @generic_vulnerability_incorrect_execution_assigned_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '280'), @generic_vulnerability_improper_handling_of_insufficient_permissions_or_privileges_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '281'), @generic_vulnerability_improper_preservation_of_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '282'), @generic_vulnerability_improper_ownership_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '283'), @generic_vulnerability_unverified_ownership_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '284'), @generic_vulnerability_access_control_authorization_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '285'), @generic_vulnerability_improper_access_control_authorization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '286'), @generic_vulnerability_incorrect_user_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '287'), @generic_vulnerability_improper_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '288'), @generic_vulnerability_authentication_bypass_using_an_alternate_path_or_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '289'), @generic_vulnerability_authentication_bypass_by_alternate_name_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '290'), @generic_vulnerability_authentication_bypass_by_spoofing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '291'), @generic_vulnerability_trusting_self_reported_ip_address_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '292'), @generic_vulnerability_trusting_self_reported_dns_name_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '293'), @generic_vulnerability_using_referer_field_for_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '294'), @generic_vulnerability_authentication_bypass_by_capture_replay_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '295'), @generic_vulnerability_certificate_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '296'), @generic_vulnerability_improper_following_of_chain_of_trust_for_certificate_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '297'), @generic_vulnerability_improper_validation_of_host_specific_certificate_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '298'), @generic_vulnerability_improper_validation_of_certificate_expiration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '299'), @generic_vulnerability_improper_check_for_certificate_revocation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '300'), @generic_vulnerability_channel_accessible_by_non_endpoint_man_in_the_middle_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '301'), @generic_vulnerability_reflection_attack_in_an_authentication_protocol_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '302'), @generic_vulnerability_authentication_bypass_by_assumed_immutable_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '303'), @generic_vulnerability_incorrect_implementation_of_authentication_algorithm_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '304'), @generic_vulnerability_missing_critical_step_in_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '305'), @generic_vulnerability_authentication_bypass_by_primary_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '306'), @generic_vulnerability_missing_authentication_for_critical_function_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '307'), @generic_vulnerability_improper_restriction_of_excessive_authentication_attempts_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '308'), @generic_vulnerability_use_of_single_factor_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '309'), @generic_vulnerability_use_of_password_system_for_primary_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '310'), @generic_vulnerability_cryptographic_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '311'), @generic_vulnerability_missing_encryption_of_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '312'), @generic_vulnerability_cleartext_storage_of_sensitive_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '313'), @generic_vulnerability_plaintext_storage_in_a_file_or_on_disk_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '314'), @generic_vulnerability_plaintext_storage_in_the_registry_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '315'), @generic_vulnerability_plaintext_storage_in_a_cookie_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '316'), @generic_vulnerability_plaintext_storage_in_memory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '317'), @generic_vulnerability_plaintext_storage_in_gui_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '318'), @generic_vulnerability_plaintext_storage_in_executable_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '319'), @generic_vulnerability_cleartext_transmission_of_sensitive_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '320'), @generic_vulnerability_key_management_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '321'), @generic_vulnerability_use_of_hard_coded_cryptographic_key_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '322'), @generic_vulnerability_key_exchange_without_entity_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '323'), @generic_vulnerability_reusing_a_nonce_key_pair_in_encryption_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '324'), @generic_vulnerability_use_of_a_key_past_its_expiration_date_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '325'), @generic_vulnerability_missing_required_cryptographic_step_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '326'), @generic_vulnerability_inadequate_encryption_strength_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '327'), @generic_vulnerability_use_of_a_broken_or_risky_cryptographic_algorithm_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '328'), @generic_vulnerability_reversible_one_way_hash_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '329'), @generic_vulnerability_not_using_a_random_iv_with_cbc_mode_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '330'), @generic_vulnerability_use_of_insufficiently_random_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '331'), @generic_vulnerability_insufficient_entropy_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '332'), @generic_vulnerability_insufficient_entropy_in_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '333'), @generic_vulnerability_improper_handling_of_insufficient_entropy_in_trng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '334'), @generic_vulnerability_small_space_of_random_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '335'), @generic_vulnerability_prng_seed_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '336'), @generic_vulnerability_same_seed_in_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '337'), @generic_vulnerability_predictable_seed_in_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '338'), @generic_vulnerability_use_of_cryptographically_weak_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '339'), @generic_vulnerability_small_seed_space_in_prng_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '340'), @generic_vulnerability_predictability_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '341'), @generic_vulnerability_predictable_from_observable_state_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '342'), @generic_vulnerability_predictable_exact_value_from_previous_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '343'), @generic_vulnerability_predictable_value_range_from_previous_values_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '344'), @generic_vulnerability_use_of_invariant_value_in_dynamically_changing_context_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '345'), @generic_vulnerability_insufficient_verification_of_data_authenticity_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '346'), @generic_vulnerability_origin_validation_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '347'), @generic_vulnerability_improper_verification_of_cryptographic_signature_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '348'), @generic_vulnerability_use_of_less_trusted_source_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '349'), @generic_vulnerability_acceptance_of_extraneous_untrusted_data_with_trusted_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '350'), @generic_vulnerability_improperly_trusted_reverse_dns_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '351'), @generic_vulnerability_insufficient_type_distinction_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '352'), @generic_vulnerability_cross_site_request_forgery_csrf_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '353'), @generic_vulnerability_failure_to_add_integrity_check_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '354'), @generic_vulnerability_improper_validation_of_integrity_check_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '355'), @generic_vulnerability_user_interface_security_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '356'), @generic_vulnerability_product_ui_does_not_warn_user_of_unsafe_actions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '357'), @generic_vulnerability_insufficient_ui_warning_of_dangerous_operations_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '358'), @generic_vulnerability_improperly_implemented_security_check_for_standard_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '359'), @generic_vulnerability_privacy_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '360'), @generic_vulnerability_trust_of_system_event_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '361'), @generic_vulnerability_time_and_state_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '362'), @generic_vulnerability_race_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '363'), @generic_vulnerability_race_condition_enabling_link_following_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '364'), @generic_vulnerability_signal_handler_race_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '365'), @generic_vulnerability_race_condition_in_switch_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '366'), @generic_vulnerability_race_condition_within_a_thread_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '367'), @generic_vulnerability_time_of_check_time_of_use_toctou_race_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '368'), @generic_vulnerability_context_switching_race_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '369'), @generic_vulnerability_divide_by_zero_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '370'), @generic_vulnerability_missing_check_for_certificate_revocation_after_initial_check_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '371'), @generic_vulnerability_state_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '372'), @generic_vulnerability_incomplete_internal_state_distinction_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '373'), @generic_vulnerability_state_synchronization_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '374'), @generic_vulnerability_mutable_objects_passed_by_reference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '375'), @generic_vulnerability_passing_mutable_objects_to_an_untrusted_method_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '376'), @generic_vulnerability_temporary_file_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '377'), @generic_vulnerability_insecure_temporary_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '378'), @generic_vulnerability_creation_of_temporary_file_with_insecure_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '379'), @generic_vulnerability_creation_of_temporary_file_in_directory_with_incorrect_permissions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '380'), @generic_vulnerability_technology_specific_time_and_state_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '381'), @generic_vulnerability_j2ee_time_and_state_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '382'), @generic_vulnerability_j2ee_bad_practices_use_of_system_exit_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '383'), @generic_vulnerability_j2ee_bad_practices_direct_use_of_threads_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '384'), @generic_vulnerability_session_fixation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '385'), @generic_vulnerability_covert_timing_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '386'), @generic_vulnerability_symbolic_name_not_mapping_to_correct_object_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '387'), @generic_vulnerability_signal_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '388'), @generic_vulnerability_error_handling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '389'), @generic_vulnerability_error_conditions_return_values_status_codes_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '390'), @generic_vulnerability_detection_of_error_condition_without_action_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '391'), @generic_vulnerability_unchecked_error_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '392'), @generic_vulnerability_failure_to_report_error_in_status_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '393'), @generic_vulnerability_return_of_wrong_status_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '394'), @generic_vulnerability_unexpected_status_code_or_return_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '395'), @generic_vulnerability_use_of_nullpointerexception_catch_to_detect_null_pointer_dereference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '396'), @generic_vulnerability_declaration_of_catch_for_generic_exception_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '397'), @generic_vulnerability_declaration_of_throws_for_generic_exception_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '398'), @generic_vulnerability_indicator_of_poor_code_quality_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '399'), @generic_vulnerability_resource_management_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '400'), @generic_vulnerability_uncontrolled_resource_consumption_resource_exhaustion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '401'), @generic_vulnerability_failure_to_release_memory_before_removing_last_reference_memory_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '402'), @generic_vulnerability_transmission_of_private_resources_into_a_new_sphere_resource_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '403'), @generic_vulnerability_unix_file_descriptor_leak_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '404'), @generic_vulnerability_improper_resource_shutdown_or_release_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '405'), @generic_vulnerability_asymmetric_resource_consumption_amplification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '406'), @generic_vulnerability_insufficient_control_of_network_message_volume_network_amplification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '407'), @generic_vulnerability_algorithmic_complexity_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '408'), @generic_vulnerability_incorrect_behavior_order_early_amplification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '409'), @generic_vulnerability_improper_handling_of_highly_compressed_data_data_amplification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '410'), @generic_vulnerability_insufficient_resource_pool_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '411'), @generic_vulnerability_resource_locking_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '412'), @generic_vulnerability_unrestricted_externally_accessible_lock_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '413'), @generic_vulnerability_insufficient_resource_locking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '414'), @generic_vulnerability_missing_lock_check_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '415'), @generic_vulnerability_double_free_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '416'), @generic_vulnerability_use_after_free_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '417'), @generic_vulnerability_channel_and_path_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '418'), @generic_vulnerability_channel_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '419'), @generic_vulnerability_unprotected_primary_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '420'), @generic_vulnerability_unprotected_alternate_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '421'), @generic_vulnerability_race_condition_during_access_to_alternate_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '422'), @generic_vulnerability_unprotected_windows_messaging_channel_shatter_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '423'), @generic_vulnerability_deprecated_duplicate_proxied_trusted_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '424'), @generic_vulnerability_failure_to_protect_alternate_path_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '425'), @generic_vulnerability_direct_request_forced_browsing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '426'), @generic_vulnerability_untrusted_search_path_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '427'), @generic_vulnerability_uncontrolled_search_path_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '428'), @generic_vulnerability_unquoted_search_path_or_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '429'), @generic_vulnerability_handler_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '430'), @generic_vulnerability_deployment_of_wrong_handler_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '431'), @generic_vulnerability_missing_handler_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '432'), @generic_vulnerability_dangerous_handler_not_disabled_during_sensitive_operations_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '433'), @generic_vulnerability_unparsed_raw_web_content_delivery_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '434'), @generic_vulnerability_unrestricted_upload_of_file_with_dangerous_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '435'), @generic_vulnerability_interaction_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '436'), @generic_vulnerability_interpretation_conflict_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '437'), @generic_vulnerability_incomplete_model_of_endpoint_features_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '438'), @generic_vulnerability_behavioral_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '439'), @generic_vulnerability_behavioral_change_in_new_version_or_environment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '440'), @generic_vulnerability_expected_behavior_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '441'), @generic_vulnerability_unintended_proxy_intermediary_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '442'), @generic_vulnerability_web_problems_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '443'), @generic_vulnerability_deprecated_duplicate_http_response_splitting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '444'), @generic_vulnerability_inconsistent_interpretation_of_http_requests_http_request_smuggling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '445'), @generic_vulnerability_user_interface_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '446'), @generic_vulnerability_ui_discrepancy_for_security_feature_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '447'), @generic_vulnerability_unimplemented_or_unsupported_feature_in_ui_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '448'), @generic_vulnerability_obsolete_feature_in_ui_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '449'), @generic_vulnerability_the_ui_performs_the_wrong_action_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '450'), @generic_vulnerability_multiple_interpretations_of_ui_input_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '451'), @generic_vulnerability_ui_misrepresentation_of_critical_information_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '452'), @generic_vulnerability_initialization_and_cleanup_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '453'), @generic_vulnerability_insecure_default_variable_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '454'), @generic_vulnerability_external_initialization_of_trusted_variables_or_data_stores_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '455'), @generic_vulnerability_non_exit_on_failed_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '456'), @generic_vulnerability_missing_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '457'), @generic_vulnerability_use_of_uninitialized_variable_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '458'), @generic_vulnerability_deprecated_incorrect_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '459'), @generic_vulnerability_incomplete_cleanup_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '460'), @generic_vulnerability_improper_cleanup_on_thrown_exception_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '461'), @generic_vulnerability_data_structure_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '462'), @generic_vulnerability_duplicate_key_in_associative_list_alist_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '463'), @generic_vulnerability_deletion_of_data_structure_sentinel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '464'), @generic_vulnerability_addition_of_data_structure_sentinel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '465'), @generic_vulnerability_pointer_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '466'), @generic_vulnerability_return_of_pointer_value_outside_of_expected_range_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '467'), @generic_vulnerability_use_of_sizeof_on_a_pointer_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '468'), @generic_vulnerability_incorrect_pointer_scaling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '469'), @generic_vulnerability_use_of_pointer_subtraction_to_determine_size_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '470'), @generic_vulnerability_use_of_externally_controlled_input_to_select_classes_or_code_unsafe_reflection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '471'), @generic_vulnerability_modification_of_assumed_immutable_data_maid_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '472'), @generic_vulnerability_external_control_of_assumed_immutable_web_parameter_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '473'), @generic_vulnerability_php_external_variable_modification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '474'), @generic_vulnerability_use_of_function_with_inconsistent_implementations_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '475'), @generic_vulnerability_undefined_behavior_for_input_to_api_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '476'), @generic_vulnerability_null_pointer_dereference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '477'), @generic_vulnerability_use_of_obsolete_functions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '478'), @generic_vulnerability_missing_default_case_in_switch_statement_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '479'), @generic_vulnerability_unsafe_function_call_from_a_signal_handler_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '480'), @generic_vulnerability_use_of_incorrect_operator_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '481'), @generic_vulnerability_assigning_instead_of_comparing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '482'), @generic_vulnerability_comparing_instead_of_assigning_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '483'), @generic_vulnerability_incorrect_block_delimitation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '484'), @generic_vulnerability_omitted_break_statement_in_switch_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '485'), @generic_vulnerability_insufficient_encapsulation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '486'), @generic_vulnerability_comparison_of_classes_by_name_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '487'), @generic_vulnerability_reliance_on_package_level_scope_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '488'), @generic_vulnerability_data_leak_between_sessions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '489'), @generic_vulnerability_leftover_debug_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '490'), @generic_vulnerability_mobile_code_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '491'), @generic_vulnerability_public_cloneable_method_without_final_object_hijack_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '492'), @generic_vulnerability_use_of_inner_class_containing_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '493'), @generic_vulnerability_critical_public_variable_without_final_modifier_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '494'), @generic_vulnerability_download_of_code_without_integrity_check_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '495'), @generic_vulnerability_private_array_typed_field_returned_from_a_public_method_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '496'), @generic_vulnerability_public_data_assigned_to_private_array_typed_field_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '497'), @generic_vulnerability_exposure_of_system_data_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '498'), @generic_vulnerability_information_leak_through_class_cloning_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '499'), @generic_vulnerability_serializable_class_containing_sensitive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '500'), @generic_vulnerability_public_static_field_not_marked_final_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '501'), @generic_vulnerability_trust_boundary_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '502'), @generic_vulnerability_deserialization_of_untrusted_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '503'), @generic_vulnerability_byte_object_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '504'), @generic_vulnerability_motivation_intent_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '505'), @generic_vulnerability_intentionally_introduced_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '506'), @generic_vulnerability_embedded_malicious_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '507'), @generic_vulnerability_trojan_horse_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '508'), @generic_vulnerability_non_replicating_malicious_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '509'), @generic_vulnerability_replicating_malicious_code_virus_or_worm_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '510'), @generic_vulnerability_trapdoor_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '511'), @generic_vulnerability_logic_time_bomb_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '512'), @generic_vulnerability_spyware_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '513'), @generic_vulnerability_intentionally_introduced_nonmalicious_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '514'), @generic_vulnerability_covert_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '515'), @generic_vulnerability_covert_storage_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '516'), @generic_vulnerability_deprecated_duplicate_covert_timing_channel_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '517'), @generic_vulnerability_other_intentional_nonmalicious_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '518'), @generic_vulnerability_inadvertently_introduced_weakness_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '519'), @generic_vulnerability__net_environment_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '520'), @generic_vulnerability__net_misconfiguration_use_of_impersonation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '521'), @generic_vulnerability_weak_password_requirements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '522'), @generic_vulnerability_insufficiently_protected_credentials_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '523'), @generic_vulnerability_unprotected_transport_of_credentials_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '524'), @generic_vulnerability_information_leak_through_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '525'), @generic_vulnerability_information_leak_through_browser_caching_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '526'), @generic_vulnerability_information_leak_through_environmental_variables_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '527'), @generic_vulnerability_exposure_of_cvs_repository_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '528'), @generic_vulnerability_exposure_of_core_dump_file_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '529'), @generic_vulnerability_exposure_of_access_control_list_files_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '530'), @generic_vulnerability_exposure_of_backup_file_to_an_unauthorized_control_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '531'), @generic_vulnerability_information_leak_through_test_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '532'), @generic_vulnerability_information_leak_through_log_files_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '533'), @generic_vulnerability_information_leak_through_server_log_files_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '534'), @generic_vulnerability_information_leak_through_debug_log_files_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '535'), @generic_vulnerability_information_leak_through_shell_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '536'), @generic_vulnerability_information_leak_through_servlet_runtime_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '537'), @generic_vulnerability_information_leak_through_java_runtime_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '538'), @generic_vulnerability_file_and_directory_information_exposure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '539'), @generic_vulnerability_information_leak_through_persistent_cookies_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '540'), @generic_vulnerability_information_leak_through_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '541'), @generic_vulnerability_information_leak_through_include_source_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '542'), @generic_vulnerability_information_leak_through_cleanup_log_files_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '543'), @generic_vulnerability_use_of_singleton_pattern_in_a_non_thread_safe_manner_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '544'), @generic_vulnerability_failure_to_use_a_standardized_error_handling_mechanism_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '545'), @generic_vulnerability_use_of_dynamic_class_loading_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '546'), @generic_vulnerability_suspicious_comment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '547'), @generic_vulnerability_use_of_hard_coded_security_relevant_constants_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '548'), @generic_vulnerability_information_leak_through_directory_listing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '549'), @generic_vulnerability_missing_password_field_masking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '550'), @generic_vulnerability_information_leak_through_server_error_message_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '551'), @generic_vulnerability_incorrect_behavior_order_authorization_before_parsing_and_canonicalization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '552'), @generic_vulnerability_files_or_directories_accessible_to_external_parties_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '553'), @generic_vulnerability_command_shell_in_externally_accessible_directory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '554'), @generic_vulnerability_asp_net_misconfiguration_not_using_input_validation_framework_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '555'), @generic_vulnerability_j2ee_misconfiguration_plaintext_password_in_configuration_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '556'), @generic_vulnerability_asp_net_misconfiguration_use_of_identity_impersonation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '557'), @generic_vulnerability_concurrency_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '558'), @generic_vulnerability_use_of_getlogin_in_multithreaded_application_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '559'), @generic_vulnerability_often_misused_arguments_and_parameters_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '560'), @generic_vulnerability_use_of_umask_with_chmod_style_argument_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '561'), @generic_vulnerability_dead_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '562'), @generic_vulnerability_return_of_stack_variable_address_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '563'), @generic_vulnerability_unused_variable_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '564'), @generic_vulnerability_sql_injection_hibernate_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '565'), @generic_vulnerability_reliance_on_cookies_without_validation_and_integrity_checking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '566'), @generic_vulnerability_access_control_bypass_through_user_controlled_sql_primary_key_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '567'), @generic_vulnerability_unsynchronized_access_to_shared_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '568'), @generic_vulnerability_finalize_method_without_super_finalize_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '569'), @generic_vulnerability_expression_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '570'), @generic_vulnerability_expression_is_always_false_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '571'), @generic_vulnerability_expression_is_always_true_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '572'), @generic_vulnerability_call_to_thread_run_instead_of_start_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '573'), @generic_vulnerability_failure_to_follow_specification_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '574'), @generic_vulnerability_ejb_bad_practices_use_of_synchronization_primitives_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '575'), @generic_vulnerability_ejb_bad_practices_use_of_awt_swing_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '576'), @generic_vulnerability_ejb_bad_practices_use_of_java_i_o_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '577'), @generic_vulnerability_ejb_bad_practices_use_of_sockets_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '578'), @generic_vulnerability_ejb_bad_practices_use_of_class_loader_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '579'), @generic_vulnerability_j2ee_bad_practices_non_serializable_object_stored_in_session_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '580'), @generic_vulnerability_clone_method_without_super_clone_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '581'), @generic_vulnerability_object_model_violation_just_one_of_equals_and_hashcode_defined_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '582'), @generic_vulnerability_array_declared_public_final_and_static_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '583'), @generic_vulnerability_finalize_method_declared_public_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '584'), @generic_vulnerability_return_inside_finally_block_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '585'), @generic_vulnerability_empty_synchronized_block_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '586'), @generic_vulnerability_explicit_call_to_finalize_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '587'), @generic_vulnerability_assignment_of_a_fixed_address_to_a_pointer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '588'), @generic_vulnerability_attempt_to_access_child_of_a_non_structure_pointer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '589'), @generic_vulnerability_call_to_non_ubiquitous_api_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '590'), @generic_vulnerability_free_of_memory_not_on_the_heap_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '591'), @generic_vulnerability_sensitive_data_storage_in_improperly_locked_memory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '592'), @generic_vulnerability_authentication_bypass_issues_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '593'), @generic_vulnerability_authentication_bypass_openssl_ctx_object_modified_after_ssl_objects_are_created_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '594'), @generic_vulnerability_j2ee_framework_saving_unserializable_objects_to_disk_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '595'), @generic_vulnerability_comparison_of_object_references_instead_of_object_contents_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '596'), @generic_vulnerability_incorrect_semantic_object_comparison_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '597'), @generic_vulnerability_use_of_wrong_operator_in_string_comparison_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '598'), @generic_vulnerability_information_leak_through_query_strings_in_get_request_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '599'), @generic_vulnerability_trust_of_openssl_certificate_without_validation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '600'), @generic_vulnerability_failure_to_catch_all_exceptions_in_servlet_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '601'), @generic_vulnerability_url_redirection_to_untrusted_site_open_redirect_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '602'), @generic_vulnerability_client_side_enforcement_of_server_side_security_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '603'), @generic_vulnerability_use_of_client_side_authentication_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '604'), @generic_vulnerability_deprecated_entries_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '605'), @generic_vulnerability_multiple_binds_to_the_same_port_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '606'), @generic_vulnerability_unchecked_input_for_loop_condition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '607'), @generic_vulnerability_public_static_final_field_references_mutable_object_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '608'), @generic_vulnerability_struts_non_private_field_in_actionform_class_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '609'), @generic_vulnerability_double_checked_locking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '610'), @generic_vulnerability_externally_controlled_reference_to_a_resource_in_another_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '611'), @generic_vulnerability_information_leak_through_xml_external_entity_file_disclosure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '612'), @generic_vulnerability_information_leak_through_indexing_of_private_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '613'), @generic_vulnerability_insufficient_session_expiration_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '614'), @generic_vulnerability_sensitive_cookie_in_https_session_without_secure_attribute_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '615'), @generic_vulnerability_information_leak_through_comments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '616'), @generic_vulnerability_incomplete_identification_of_uploaded_file_variables_php_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '617'), @generic_vulnerability_reachable_assertion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '618'), @generic_vulnerability_exposed_unsafe_activex_method_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '619'), @generic_vulnerability_dangling_database_cursor_cursor_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '620'), @generic_vulnerability_unverified_password_change_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '621'), @generic_vulnerability_variable_extraction_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '622'), @generic_vulnerability_unvalidated_function_hook_arguments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '623'), @generic_vulnerability_unsafe_activex_control_marked_safe_for_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '624'), @generic_vulnerability_executable_regular_expression_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '625'), @generic_vulnerability_permissive_regular_expression_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '626'), @generic_vulnerability_null_byte_interaction_error_poison_null_byte_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '627'), @generic_vulnerability_dynamic_variable_evaluation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '628'), @generic_vulnerability_function_call_with_incorrectly_specified_arguments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '629'), @generic_vulnerability_weaknesses_in_owasp_top_ten_2007_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '630'), @generic_vulnerability_weaknesses_examined_by_samate_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '631'), @generic_vulnerability_resource_specific_weaknesses_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '632'), @generic_vulnerability_weaknesses_that_affect_files_or_directories_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '633'), @generic_vulnerability_weaknesses_that_affect_memory_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '634'), @generic_vulnerability_weaknesses_that_affect_system_processes_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '635'), @generic_vulnerability_weaknesses_used_by_nvd_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '636'), @generic_vulnerability_not_failing_securely_failing_open_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '637'), @generic_vulnerability_failure_to_use_economy_of_mechanism_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '638'), @generic_vulnerability_failure_to_use_complete_mediation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '639'), @generic_vulnerability_access_control_bypass_through_user_controlled_key_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '640'), @generic_vulnerability_weak_password_recovery_mechanism_for_forgotten_password_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '641'), @generic_vulnerability_insufficient_filtering_of_file_and_other_resource_names_for_executable_content_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '642'), @generic_vulnerability_external_control_of_critical_state_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '643'), @generic_vulnerability_failure_to_sanitize_data_within_xpath_expressions_xpath_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '644'), @generic_vulnerability_improper_sanitization_of_http_headers_for_scripting_syntax_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '645'), @generic_vulnerability_overly_restrictive_account_lockout_mechanism_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '646'), @generic_vulnerability_reliance_on_file_name_or_extension_of_externally_supplied_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '647'), @generic_vulnerability_use_of_non_canonical_url_paths_for_authorization_decisions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '648'), @generic_vulnerability_incorrect_use_of_privileged_apis_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '649'), @generic_vulnerability_reliance_on_obfuscation_or_encryption_of_security_relevant_inputs_without_integrity_checking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '650'), @generic_vulnerability_trusting_http_permission_methods_on_the_server_side_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '651'), @generic_vulnerability_information_leak_through_wsdl_file_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '652'), @generic_vulnerability_failure_to_sanitize_data_within_xquery_expressions_xquery_injection_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '653'), @generic_vulnerability_insufficient_compartmentalization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '654'), @generic_vulnerability_reliance_on_a_single_factor_in_a_security_decision_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '655'), @generic_vulnerability_insufficient_psychological_acceptability_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '656'), @generic_vulnerability_reliance_on_security_through_obscurity_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '657'), @generic_vulnerability_violation_of_secure_design_principles_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '658'), @generic_vulnerability_weaknesses_in_software_written_in_c_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '659'), @generic_vulnerability_weaknesses_in_software_written_in_c_659_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '660'), @generic_vulnerability_weaknesses_in_software_written_in_java_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '661'), @generic_vulnerability_weaknesses_in_software_written_in_php_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '662'), @generic_vulnerability_insufficient_synchronization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '663'), @generic_vulnerability_use_of_a_non_reentrant_function_in_an_unsynchronized_context_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '664'), @generic_vulnerability_improper_control_of_a_resource_through_its_lifetime_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '665'), @generic_vulnerability_improper_initialization_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '666'), @generic_vulnerability_operation_on_resource_in_wrong_phase_of_lifetime_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '667'), @generic_vulnerability_insufficient_locking_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '668'), @generic_vulnerability_exposure_of_resource_to_wrong_sphere_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '669'), @generic_vulnerability_incorrect_resource_transfer_between_spheres_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '670'), @generic_vulnerability_always_incorrect_control_flow_implementation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '671'), @generic_vulnerability_lack_of_administrator_control_over_security_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '672'), @generic_vulnerability_operation_on_a_resource_after_expiration_or_release_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '673'), @generic_vulnerability_external_influence_of_sphere_definition_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '674'), @generic_vulnerability_uncontrolled_recursion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '675'), @generic_vulnerability_duplicate_operations_on_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '676'), @generic_vulnerability_use_of_potentially_dangerous_function_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '677'), @generic_vulnerability_weakness_base_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '678'), @generic_vulnerability_composites_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '679'), @generic_vulnerability_chain_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '680'), @generic_vulnerability_integer_overflow_to_buffer_overflow_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '681'), @generic_vulnerability_incorrect_conversion_between_numeric_types_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '682'), @generic_vulnerability_incorrect_calculation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '683'), @generic_vulnerability_function_call_with_incorrect_order_of_arguments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '684'), @generic_vulnerability_failure_to_provide_specified_functionality_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '685'), @generic_vulnerability_function_call_with_incorrect_number_of_arguments_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '686'), @generic_vulnerability_function_call_with_incorrect_argument_type_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '687'), @generic_vulnerability_function_call_with_incorrectly_specified_argument_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '688'), @generic_vulnerability_function_call_with_incorrect_variable_or_reference_as_argument_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '689'), @generic_vulnerability_permission_race_condition_during_resource_copy_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '690'), @generic_vulnerability_unchecked_return_value_to_null_pointer_dereference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '691'), @generic_vulnerability_insufficient_control_flow_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '692'), @generic_vulnerability_incomplete_blacklist_to_cross_site_scripting_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '693'), @generic_vulnerability_protection_mechanism_failure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '694'), @generic_vulnerability_use_of_multiple_resources_with_duplicate_identifier_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '695'), @generic_vulnerability_use_of_low_level_functionality_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '696'), @generic_vulnerability_incorrect_behavior_order_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '697'), @generic_vulnerability_insufficient_comparison_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '698'), @generic_vulnerability_redirect_without_exit_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '699'), @generic_vulnerability_development_concepts_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '700'), @generic_vulnerability_seven_pernicious_kingdoms_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '701'), @generic_vulnerability_weaknesses_introduced_during_design_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '702'), @generic_vulnerability_weaknesses_introduced_during_implementation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '703'), @generic_vulnerability_failure_to_handle_exceptional_conditions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '704'), @generic_vulnerability_incorrect_type_conversion_or_cast_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '705'), @generic_vulnerability_incorrect_control_flow_scoping_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '706'), @generic_vulnerability_use_of_incorrectly_resolved_name_or_reference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '707'), @generic_vulnerability_improper_enforcement_of_message_or_data_structure_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '708'), @generic_vulnerability_incorrect_ownership_assignment_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '709'), @generic_vulnerability_named_chains_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '710'), @generic_vulnerability_coding_standards_violation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '711'), @generic_vulnerability_weaknesses_in_owasp_top_ten_2004_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '712'), @generic_vulnerability_owasp_top_ten_2007_category_a1_cross_site_scripting_xss_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '713'), @generic_vulnerability_owasp_top_ten_2007_category_a2_injection_flaws_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '714'), @generic_vulnerability_owasp_top_ten_2007_category_a3_malicious_file_execution_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '715'), @generic_vulnerability_owasp_top_ten_2007_category_a4_insecure_direct_object_reference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '716'), @generic_vulnerability_owasp_top_ten_2007_category_a5_cross_site_request_forgery_csrf_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '717'), @generic_vulnerability_owasp_top_ten_2007_category_a6_information_leakage_and_improper_error_handling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '718'), @generic_vulnerability_owasp_top_ten_2007_category_a7_broken_authentication_and_session_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '719'), @generic_vulnerability_owasp_top_ten_2007_category_a8_insecure_cryptographic_storage_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '720'), @generic_vulnerability_owasp_top_ten_2007_category_a9_insecure_communications_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '721'), @generic_vulnerability_owasp_top_ten_2007_category_a10_failure_to_restrict_url_access_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '722'), @generic_vulnerability_owasp_top_ten_2004_category_a1_unvalidated_input_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '723'), @generic_vulnerability_owasp_top_ten_2004_category_a2_broken_access_control_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '724'), @generic_vulnerability_owasp_top_ten_2004_category_a3_broken_authentication_and_session_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '725'), @generic_vulnerability_owasp_top_ten_2004_category_a4_cross_site_scripting_xss_flaws_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '726'), @generic_vulnerability_owasp_top_ten_2004_category_a5_buffer_overflows_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '727'), @generic_vulnerability_owasp_top_ten_2004_category_a6_injection_flaws_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '728'), @generic_vulnerability_owasp_top_ten_2004_category_a7_improper_error_handling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '729'), @generic_vulnerability_owasp_top_ten_2004_category_a8_insecure_storage_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '730'), @generic_vulnerability_owasp_top_ten_2004_category_a9_denial_of_service_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '731'), @generic_vulnerability_owasp_top_ten_2004_category_a10_insecure_configuration_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '732'), @generic_vulnerability_incorrect_permission_assignment_for_critical_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '733'), @generic_vulnerability_compiler_optimization_removal_or_modification_of_security_critical_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '734'), @generic_vulnerability_weaknesses_addressed_by_the_cert_c_secure_coding_standard_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '735'), @generic_vulnerability_cert_c_secure_coding_section_01_preprocessor_pre_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '736'), @generic_vulnerability_cert_c_secure_coding_section_02_declarations_and_initialization_dcl_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '737'), @generic_vulnerability_cert_c_secure_coding_section_03_expressions_exp_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '738'), @generic_vulnerability_cert_c_secure_coding_section_04_integers_int_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '739'), @generic_vulnerability_cert_c_secure_coding_section_05_floating_point_flp_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '740'), @generic_vulnerability_cert_c_secure_coding_section_06_arrays_arr_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '741'), @generic_vulnerability_cert_c_secure_coding_section_07_characters_and_strings_str_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '742'), @generic_vulnerability_cert_c_secure_coding_section_08_memory_management_mem_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '743'), @generic_vulnerability_cert_c_secure_coding_section_09_input_output_fio_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '744'), @generic_vulnerability_cert_c_secure_coding_section_10_environment_env_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '745'), @generic_vulnerability_cert_c_secure_coding_section_11_signals_sig_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '746'), @generic_vulnerability_cert_c_secure_coding_section_12_error_handling_err_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '747'), @generic_vulnerability_cert_c_secure_coding_section_49_miscellaneous_msc_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '748'), @generic_vulnerability_cert_c_secure_coding_section_50_posix_pos_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '749'), @generic_vulnerability_exposed_dangerous_method_or_function_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '750'), @generic_vulnerability_weaknesses_in_the_2009_cwe_sans_top_25_most_dangerous_programming_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '751'), @generic_vulnerability_2009_top_25_insecure_interaction_between_components_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '752'), @generic_vulnerability_2009_top_25_risky_resource_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '753'), @generic_vulnerability_2009_top_25_porous_defenses_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '754'), @generic_vulnerability_improper_check_for_unusual_or_exceptional_conditions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '755'), @generic_vulnerability_improper_handling_of_exceptional_conditions_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '756'), @generic_vulnerability_missing_custom_error_page_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '757'), @generic_vulnerability_selection_of_less_secure_algorithm_during_negotiation_algorithm_downgrade_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '758'), @generic_vulnerability_reliance_on_undefined_unspecified_or_implementation_defined_behavior_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '759'), @generic_vulnerability_use_of_a_one_way_hash_without_a_salt_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '760'), @generic_vulnerability_use_of_a_one_way_hash_with_a_predictable_salt_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '761'), @generic_vulnerability_free_of_pointer_not_at_start_of_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '762'), @generic_vulnerability_mismatched_memory_management_routines_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '763'), @generic_vulnerability_release_of_invalid_pointer_or_reference_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '764'), @generic_vulnerability_multiple_locks_of_a_critical_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '765'), @generic_vulnerability_multiple_unlocks_of_a_critical_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '766'), @generic_vulnerability_critical_variable_declared_public_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '767'), @generic_vulnerability_access_to_critical_private_variable_via_public_method_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '768'), @generic_vulnerability_incorrect_short_circuit_evaluation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '769'), @generic_vulnerability_file_descriptor_exhaustion_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '770'), @generic_vulnerability_allocation_of_resources_without_limits_or_throttling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '771'), @generic_vulnerability_missing_reference_to_active_allocated_resource_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '772'), @generic_vulnerability_missing_release_of_resource_after_effective_lifetime_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '773'), @generic_vulnerability_missing_reference_to_active_file_descriptor_or_handle_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '774'), @generic_vulnerability_allocation_of_file_descriptors_or_handles_without_limits_or_throttling_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '775'), @generic_vulnerability_missing_release_of_file_descriptor_or_handle_after_effective_lifetime_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '776'), @generic_vulnerability_unrestricted_recursive_entity_references_in_dtds_xml_bomb_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '777'), @generic_vulnerability_regular_expression_without_anchors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '778'), @generic_vulnerability_insufficient_logging_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '779'), @generic_vulnerability_logging_of_excessive_data_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '780'), @generic_vulnerability_use_of_rsa_algorithm_without_oaep_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '781'), @generic_vulnerability_improper_address_validation_in_ioctl_with_method_neither_i_o_control_code_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '782'), @generic_vulnerability_exposed_ioctl_with_insufficient_access_control_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '783'), @generic_vulnerability_operator_precedence_logic_error_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '784'), @generic_vulnerability_reliance_on_cookies_without_validation_and_integrity_checking_in_a_security_decision_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '785'), @generic_vulnerability_use_of_path_manipulation_function_without_maximum_sized_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '786'), @generic_vulnerability_access_of_memory_location_before_start_of_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '787'), @generic_vulnerability_out_of_bounds_write_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '788'), @generic_vulnerability_access_of_memory_location_after_end_of_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '789'), @generic_vulnerability_uncontrolled_memory_allocation_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '790'), @generic_vulnerability_improper_filtering_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '791'), @generic_vulnerability_incomplete_filtering_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '792'), @generic_vulnerability_incomplete_filtering_of_one_or_more_instances_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '793'), @generic_vulnerability_only_filtering_one_instance_of_a_special_element_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '794'), @generic_vulnerability_incomplete_filtering_of_multiple_instances_of_special_elements_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '795'), @generic_vulnerability_only_filtering_special_elements_at_a_specified_location_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '796'), @generic_vulnerability_only_filtering_special_elements_relative_to_a_marker_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '797'), @generic_vulnerability_only_filtering_special_elements_at_an_absolute_position_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '798'), @generic_vulnerability_use_of_hard_coded_credentials_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '799'), @generic_vulnerability_improper_control_of_interaction_frequency_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '800'), @generic_vulnerability_weaknesses_in_the_2010_cwe_sans_top_25_most_dangerous_programming_errors_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '801'), @generic_vulnerability_2010_top_25_insecure_interaction_between_components_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '802'), @generic_vulnerability_2010_top_25_risky_resource_management_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '803'), @generic_vulnerability_2010_top_25_porous_defenses_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '804'), @generic_vulnerability_guessable_captcha_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '805'), @generic_vulnerability_buffer_access_with_incorrect_length_value_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '806'), @generic_vulnerability_buffer_access_using_size_of_source_buffer_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '807'), @generic_vulnerability_reliance_on_untrusted_inputs_in_a_security_decision_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '808'), @generic_vulnerability_2010_top_25_weaknesses_on_the_cusp_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '1000'), @generic_vulnerability_research_concepts_id);
INSERT INTO VulnerabilityMap (mappable, ChannelVulnerabilityId, GenericVulnerabilityId) VALUES (1, 
	(SELECT id FROM ChannelVulnerability WHERE ChannelTypeId = @veracode_channel_id AND code = '2000'), @generic_vulnerability_comprehensive_cwe_dictionary_id);
	
	
-- ------------------------------------
-- INSERT CHANNEL SEVERITIES ----------
-- ------------------------------------
-- INSERT GENERIC MAPPINGS
INSERT INTO GenericSeverity (Name) VALUES ('Critical');
INSERT INTO GenericSeverity (Name) VALUES ('High');
INSERT INTO GenericSeverity (Name) VALUES ('Medium');
INSERT INTO GenericSeverity (Name) VALUES ('Low');
INSERT INTO GenericSeverity (Name) VALUES ('Info');

SET @generic_severity_critical_id := (SELECT id FROM GenericSeverity WHERE name = 'Critical');
SET @generic_severity_high_id := (SELECT id FROM GenericSeverity WHERE name = 'High');
SET @generic_severity_medium_id := (SELECT id FROM GenericSeverity WHERE name = 'Medium');
SET @generic_severity_low_id := (SELECT id FROM GenericSeverity WHERE name = 'Low');
SET @generic_severity_info_id := (SELECT id FROM GenericSeverity WHERE name = 'Info');

-- CAT.NET
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Critical', 'Critical', @cat_net_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('High', 'High', @cat_net_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Medium', 'Medium', @cat_net_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Low', 'Low', @cat_net_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Info', 'Info', @cat_net_channel_id);

-- IBM Rational AppScan
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('High', 'High', @appscan_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Medium', 'Medium', @appscan_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Low', 'Low', @appscan_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Informational', 'Informational', @appscan_channel_id);

-- Skipfish
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('0', '0', @skipfish_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('1', '1', @skipfish_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('2', '2', @skipfish_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('3', '3', @skipfish_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('4', '4', @skipfish_channel_id);

-- w3af
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Medium', 'Medium', @w3af_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('High', 'High', @w3af_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Info', 'Info', @w3af_channel_id);

-- WebInspect
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('0', '0', @webinspect_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('1', '1', @webinspect_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('2', '2', @webinspect_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('3', '3', @webinspect_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('4', '4', @webinspect_channel_id);

-- Veracode
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('1', '1', @veracode_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('2', '2', @veracode_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('3', '3', @veracode_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('4', '4', @veracode_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('5', '5', @veracode_channel_id);

-- Burp Suite
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Information', 'Information', @burp_suite_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Medium', 'Medium', @burp_suite_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('High', 'High', @burp_suite_channel_id);

-- Mavituna Security Netsparker
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Information', 'Information', @netsparker_net_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Medium', 'Medium', @netsparker_net_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Important', 'Important', @netsparker_net_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Low', 'Low', @netsparker_net_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Critical', 'Critical', @netsparker_net_channel_id);

-- WhiteHat Sentinel
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('5', '5', @sentinel_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('4', '4', @sentinel_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('3', '3', @sentinel_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('2', '2', @sentinel_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('1', '1', @sentinel_channel_id);

-- Manual
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Critical', 'Critical', @manual_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('High', 'High', @manual_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Medium', 'Medium', @manual_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Low', 'Low', @manual_channel_id);
INSERT INTO ChannelSeverity (name, code, channelTypeId) VALUES ('Info', 'Info', @manual_channel_id);

-- CAT.NET
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @cat_net_channel_id AND name = 'Critical'), @generic_severity_critical_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @cat_net_channel_id AND name = 'High'), @generic_severity_high_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @cat_net_channel_id AND name = 'Medium'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @cat_net_channel_id AND name = 'Low'), @generic_severity_low_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @cat_net_channel_id AND name = 'Low'), @generic_severity_info_id);
    
-- IBM Rational AppScan
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @appscan_channel_id AND name = 'High'), @generic_severity_critical_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @appscan_channel_id AND name = 'Medium'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @appscan_channel_id AND name = 'Low'), @generic_severity_low_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @appscan_channel_id AND name = 'Informational'), @generic_severity_info_id);
    
-- Skipfish
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @skipfish_channel_id AND code = '0'), @generic_severity_info_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @skipfish_channel_id AND code = '1'), @generic_severity_low_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @skipfish_channel_id AND code = '2'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @skipfish_channel_id AND code = '3'), @generic_severity_high_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @skipfish_channel_id AND code = '4'), @generic_severity_critical_id);
  
-- w3af
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @w3af_channel_id AND code = 'Medium'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @w3af_channel_id AND code = 'High'), @generic_severity_high_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @w3af_channel_id AND code = 'Info'), @generic_severity_info_id);
 
-- WebInspect
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @webinspect_channel_id AND code = '0'), @generic_severity_info_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @webinspect_channel_id AND code = '1'), @generic_severity_low_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @webinspect_channel_id AND code = '2'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @webinspect_channel_id AND code = '3'), @generic_severity_high_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @webinspect_channel_id AND code = '4'), @generic_severity_critical_id);

-- Burp Suite
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @burp_suite_channel_id AND code = 'Information'), @generic_severity_info_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @burp_suite_channel_id AND code = 'Medium'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @burp_suite_channel_id AND code = 'High'), @generic_severity_high_id);
	
-- Mavituna Security Netsparker
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @netsparker_net_channel_id AND code = 'Information'), @generic_severity_info_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @netsparker_net_channel_id AND code = 'Medium'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @netsparker_net_channel_id AND code = 'Important'), @generic_severity_high_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @netsparker_net_channel_id AND code = 'Low'), @generic_severity_low_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @netsparker_net_channel_id AND code = 'Critical'), @generic_severity_critical_id);

-- WhiteHat Sentinel
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @sentinel_channel_id AND name = '5'), @generic_severity_critical_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @sentinel_channel_id AND name = '4'), @generic_severity_high_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @sentinel_channel_id AND name = '3'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @sentinel_channel_id AND name = '2'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @sentinel_channel_id AND name = '1'), @generic_severity_low_id); 

-- Manual
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @manual_channel_id AND name = 'Critical'), @generic_severity_critical_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @manual_channel_id AND name = 'High'), @generic_severity_high_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @manual_channel_id AND name = 'Medium'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @manual_channel_id AND name = 'Low'), @generic_severity_low_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
    (SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @manual_channel_id AND name = 'Info'), @generic_severity_info_id);

-- Veracode
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @veracode_channel_id AND code = '1'), @generic_severity_info_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @veracode_channel_id AND code = '2'), @generic_severity_low_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @veracode_channel_id AND code = '3'), @generic_severity_medium_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @veracode_channel_id AND code = '4'), @generic_severity_high_id);
INSERT INTO SeverityMap (ChannelSeverityId, GenericSeverityId) VALUES (
	(SELECT id FROM ChannelSeverity WHERE ChannelTypeId = @veracode_channel_id AND code = '5'), @generic_severity_critical_id);
	
-- ------------------------------------
-- INSERT SURVEY OPENSAMM -------------
-- NOTE: Order is Important for -------
--       foreign key restraints. ------
-- ------------------------------------
-- [1]Survey
INSERT INTO survey (id, name, createdDate, modifiedDate, active) VALUES (1,'OpenSAMM Maturity Survey', now(), now(), 1);

-- [2]SurveySection
INSERT INTO surveysection VALUES (1,'#0B5679','#E5ECF4','Governance',1);
INSERT INTO surveysection VALUES (2,'#7F350E','#F6E6DA','Construction',1);
INSERT INTO surveysection VALUES (3,'#007C3A','#EAF6EA','Verification',1);
INSERT INTO surveysection VALUES (4,'#83000D','#F7E0D8','Deployment',1);

-- [3]SurveyPractic
INSERT INTO surveypractice VALUES (1,'Strategy & Metrics',NULL,1);
INSERT INTO surveypractice VALUES (2,'Policy & Compliance',NULL,1);
INSERT INTO surveypractice VALUES (3,'Education & Guidance',NULL,1);
INSERT INTO surveypractice VALUES (4,'Threat Assessment',NULL,2);
INSERT INTO surveypractice VALUES (5,'Security Requirements',NULL,2);
INSERT INTO surveypractice VALUES (6,'Secure Architecture',NULL,2);
INSERT INTO surveypractice VALUES (7,'Design Review',NULL,3);
INSERT INTO surveypractice VALUES (8,'Code Review',NULL,3);
INSERT INTO surveypractice VALUES (9,'Security Testing',NULL,3);
INSERT INTO surveypractice VALUES (10,'Vulnerability Management',NULL,4);
INSERT INTO surveypractice VALUES (11,'Environment Hardening',NULL,4);
INSERT INTO surveypractice VALUES (12,'Operational Enablement',NULL,4);

-- [4]SurveyObjectiv
INSERT INTO surveyobjective VALUES (1,'Establish unified strategic roadmap for software security within the organization',1,1);
INSERT INTO surveyobjective VALUES (2,'Measure relative value of data and software assets and choose risk tolerance',2,1);
INSERT INTO surveyobjective VALUES (3,'Align security expenditure with relevant business indicators and asset value',3,1);
INSERT INTO surveyobjective VALUES (4,'Understand relevant governance and compliance drivers to the organization',1,2);
INSERT INTO surveyobjective VALUES (5,'Establish security and compliance baseline and understand per-project risks',2,2);
INSERT INTO surveyobjective VALUES (6,'Require compliance and measure projects against organization-wide policies and standards',3,2);
INSERT INTO surveyobjective VALUES (7,'Offer development staff access to resources around the topics of secure programming and deployment',1,3);
INSERT INTO surveyobjective VALUES (8,'Educate all personnel in the software life-cycle with role-specific guidance on secure development',2,3);
INSERT INTO surveyobjective VALUES (9,'Mandate comprehensive security training and certify personnel for baseline knowledge',3,3);
INSERT INTO surveyobjective VALUES (10,'Identify and understand high-level threats to the organization and individual projects',1,4);
INSERT INTO surveyobjective VALUES (11,'Increase accuracy of threat assessment and improve granularity of perproject understanding',2,4);
INSERT INTO surveyobjective VALUES (12,'Concretely tie compensating controls to each threat against internal and third-party software',3,4);
INSERT INTO surveyobjective VALUES (13,'Consider security explicitly during the software requirements process',1,5);
INSERT INTO surveyobjective VALUES (14,'Increase granularity of security requirements derived from business logic and known risks',2,5);
INSERT INTO surveyobjective VALUES (15,'Mandate security requirements process for all software projects and third-party dependencies',3,5);
INSERT INTO surveyobjective VALUES (16,'Insert consideration of proactive security guidance into the software design process',1,6);
INSERT INTO surveyobjective VALUES (17,'Direct the software design process toward knownsecure services and secureby-default designs',2,6);
INSERT INTO surveyobjective VALUES (18,'Formally control the software design process and validate utilization of secure components',3,6);
INSERT INTO surveyobjective VALUES (19,'Support ad hoc reviews of software design to ensure baseline mitigations for known risks',1,7);
INSERT INTO surveyobjective VALUES (20,'Offer assessment services to review software design against comprehensive best practices for security',2,7);
INSERT INTO surveyobjective VALUES (21,'Require assessments and validate artifacts to develop detailed understanding of protection mechanisms',3,7);
INSERT INTO surveyobjective VALUES (22,'Opportunistically find basic code-level vulnerabilities and other high-risk security issues',1,8);
INSERT INTO surveyobjective VALUES (23,'Make code review during development more accurate and efficient through automation',2,8);
INSERT INTO surveyobjective VALUES (24,'Mandate comprehensive code review process to discover language-level and application-specific risks',3,8);
INSERT INTO surveyobjective VALUES (25,'Establish process to perform basic security tests based on implementation and software requirements',1,9);
INSERT INTO surveyobjective VALUES (26,'Make security testing during development more complete and efficient through automation',2,9);
INSERT INTO surveyobjective VALUES (27,'Require application-specific security testing to ensure baseline security before deployment',3,9);
INSERT INTO surveyobjective VALUES (28,'Understand high-level plan for responding to vulnerability reports or incidents',1,10);
INSERT INTO surveyobjective VALUES (29,'Elaborate expectations for response process to improve consistency and communications',2,10);
INSERT INTO surveyobjective VALUES (30,'Improve analysis and data gathering within response process for feedback into proactive planning',3,10);
INSERT INTO surveyobjective VALUES (31,'Understand baseline operational environment for applications and software components',1,11);
INSERT INTO surveyobjective VALUES (32,'Improve confidence in application operations by hardening the operating environment',2,11);
INSERT INTO surveyobjective VALUES (33,'Validate application health and status of operational environment against known best practices',3,11);
INSERT INTO surveyobjective VALUES (34,'Enable communications between development teams and operators for critical security-relevant data',1,12);
INSERT INTO surveyobjective VALUES (35,'Improve expectations for continuous secure operations through provision of detailed procedures',2,12);
INSERT INTO surveyobjective VALUES (36,'Mandate communication of security information and validate artifact for completeness',3,12);

-- [5]SurveyLevel
INSERT INTO surveylevel VALUES (1,'Initial understanding and ad hoc provision of Security Practice',1,1);
INSERT INTO surveylevel VALUES (2,'Increase efficiency and/or effectiveness of the Security Practice',2,1);
INSERT INTO surveylevel VALUES (3,'Comprehensive mastery of the Security Practice at scale',3,1);

-- [6]SurveyQuestion
INSERT INTO surveyquestion VALUES (1,'Is there a software security assurance program already in place?',1);
INSERT INTO surveyquestion VALUES (2,'Is most of your development staff aware of future plans for the assurance program?',1);
INSERT INTO surveyquestion VALUES (3,'Do most of the business stakeholders understand your organization''s risk profile?',1);
INSERT INTO surveyquestion VALUES (4,'Are most of your applications and resources categorized by risk?',2);
INSERT INTO surveyquestion VALUES (5,'Are risk ratings used to tailor the required assurance activities?',2);
INSERT INTO surveyquestion VALUES (6,'Does most of the organization know about what''s required based on risk ratings?',2);
INSERT INTO surveyquestion VALUES (7,'Is per-project data for cost of assurance activities collected?',3);
INSERT INTO surveyquestion VALUES (8,'Does your organization regularly compare your security spending with other organizations?',3);
INSERT INTO surveyquestion VALUES (9,'Do most project stakeholders know their project''s compliance status?',4);
INSERT INTO surveyquestion VALUES (10,'Are compliance requirements specifically considered by project teams?',4);
INSERT INTO surveyquestion VALUES (11,'Does the organization utilize a set of policies and standards to control software development?',5);
INSERT INTO surveyquestion VALUES (12,'Are project teams able to request an audit for compliance with policies and standards?',5);
INSERT INTO surveyquestion VALUES (13,'Are projects periodically audited to ensure a baseline of compliance with policies and standards?',6);
INSERT INTO surveyquestion VALUES (14,'Does the organization systematically use audits to collect and control compliance evidence?',6);
INSERT INTO surveyquestion VALUES (15,'Have most developers been given high-level security awareness training?',7);
INSERT INTO surveyquestion VALUES (16,'Does each project team have access to secure development best practices and guidance?',7);
INSERT INTO surveyquestion VALUES (17,'Are most roles in the development process given role-specific training and guidance?',8);
INSERT INTO surveyquestion VALUES (18,'Are most roles in the development process given role-specific training and guidance?',8);
INSERT INTO surveyquestion VALUES (19,'Is security-related guidance centrally controlled and consistently distributed throughout the organization?',9);
INSERT INTO surveyquestion VALUES (20,'Are most people tested to ensure a baseline skillset for secure development practices?',9);
INSERT INTO surveyquestion VALUES (21,'Do most projects in your organization consider and document likely threats?',10);
INSERT INTO surveyquestion VALUES (22,'Does your organization understand and document the types of attackers it faces?',10);
INSERT INTO surveyquestion VALUES (23,'Do project teams regularly analyze functional requirements for likely abuses?',11);
INSERT INTO surveyquestion VALUES (24,'Do project teams use a method of rating threats for relative comparison?',11);
INSERT INTO surveyquestion VALUES (25,'Are stakeholders aware of relevant threats and ratings?',11);
INSERT INTO surveyquestion VALUES (26,'Do project teams specifically consider risk from external software?',12);
INSERT INTO surveyquestion VALUES (27,'Are all protection mechanisms and controls captured and mapped back to threats?',12);
INSERT INTO surveyquestion VALUES (28,'Do most project teams specify some security requirements during development?',13);
INSERT INTO surveyquestion VALUES (29,'Do project teams pull requirements from best practices and compliance guidance?',13);
INSERT INTO surveyquestion VALUES (30,'Are most stakeholders reviewing access control matrices for relevant projects?',14);
INSERT INTO surveyquestion VALUES (31,'Are project teams specifying requirements based on feedback from other security activities?',14);
INSERT INTO surveyquestion VALUES (32,'Are most stakeholders reviewing vendor agreements for security requirements?',15);
INSERT INTO surveyquestion VALUES (33,'Are the security requirements specified by project teams being audited?',15);
INSERT INTO surveyquestion VALUES (34,'Are project teams provided with a list of recommended third-party components?',16);
INSERT INTO surveyquestion VALUES (35,'Are most project teams aware of secure design principles and applying them?',16);
INSERT INTO surveyquestion VALUES (36,'Do you advertise shared security services with guidance for project teams?',17);
INSERT INTO surveyquestion VALUES (37,'Are project teams provided with prescriptive design patterns based on their application architecture?',17);
INSERT INTO surveyquestion VALUES (38,'Are project teams building software from centrally controlled platforms and frameworks?',18);
INSERT INTO surveyquestion VALUES (39,'Are project teams being audited for usage of secure architecture components?',18);
INSERT INTO surveyquestion VALUES (40,'Do project teams document the attack perimeter of software designs?',19);
INSERT INTO surveyquestion VALUES (41,'Do project teams check software designs against known security risks?',19);
INSERT INTO surveyquestion VALUES (42,'Do most project teams specifically analyze design elements for security mechanisms?',20);
INSERT INTO surveyquestion VALUES (43,'Are most project stakeholders aware of how to obtain a formal design review?',20);
INSERT INTO surveyquestion VALUES (44,'Does the design review process incorporate detailed data-level analysis?',21);
INSERT INTO surveyquestion VALUES (45,'Does routine project audit require a baseline for design review results?',21);
INSERT INTO surveyquestion VALUES (46,'Do most project teams have review checklists based on common problems?',22);
INSERT INTO surveyquestion VALUES (47,'Are project teams generally performing review of selected high-risk code?',22);
INSERT INTO surveyquestion VALUES (48,'Can most project teams access automated code analysis tools to find security problems?',23);
INSERT INTO surveyquestion VALUES (49,'Do most stakeholders consistently require and review results from code reviews?',23);
INSERT INTO surveyquestion VALUES (50,'Do project teams utilize automation to check code against application-specific coding standards?',24);
INSERT INTO surveyquestion VALUES (51,'Does routine project audit require a baseline for code review results prior to release?',24);
INSERT INTO surveyquestion VALUES (52,'Are projects specifying some security tests based on requirements?',25);
INSERT INTO surveyquestion VALUES (53,'Do most projects perform penetration tests prior to release?',25);
INSERT INTO surveyquestion VALUES (54,'Are most stakeholders aware of the security test status prior to release?',25);
INSERT INTO surveyquestion VALUES (55,'Are projects using automation to evaluate security test cases?',26);
INSERT INTO surveyquestion VALUES (56,'Do most projects follow a consistent process to evaluate and report on security tests to stakeholders?',26);
INSERT INTO surveyquestion VALUES (57,'Are security test cases comprehensively generated for application-specific logic?',27);
INSERT INTO surveyquestion VALUES (58,'Do routine project audits demand minimum standard results from security testing?',27);
INSERT INTO surveyquestion VALUES (59,'Do most projects have a point of contact for security issues?',28);
INSERT INTO surveyquestion VALUES (60,'Does your organization have an assigned security response team?',28);
INSERT INTO surveyquestion VALUES (61,'Are most project teams aware of their security point(s) of contact and response team(s)?',28);
INSERT INTO surveyquestion VALUES (62,'Does the organization utilize a consistent process for incident reporting and handling?',29);
INSERT INTO surveyquestion VALUES (63,'Are most project stakeholders aware of relevant security disclosures related to their software projects?',29);
INSERT INTO surveyquestion VALUES (64,'Are most incidents inspected for root causes to generate further recommendations?',30);
INSERT INTO surveyquestion VALUES (65,'Do most projects consistently collect and report data and metrics related to incidents?',30);
INSERT INTO surveyquestion VALUES (66,'Do the majority of projects document some requirements for the operational environment?',31);
INSERT INTO surveyquestion VALUES (67,'Do most projects check for security updates to third-party software components?',31);
INSERT INTO surveyquestion VALUES (68,'Is a consistent process used to apply upgrades and patches to critical dependencies?',32);
INSERT INTO surveyquestion VALUES (69,'Do most project leverage automation to check application and environment health?',32);
INSERT INTO surveyquestion VALUES (70,'Are stakeholders aware of options for additional tools to protect software while running in operations?',33);
INSERT INTO surveyquestion VALUES (71,'Does routine audit check most projects for baseline environment health?',33);
INSERT INTO surveyquestion VALUES (72,'Do you deliver security notes with the majority of software releases?',34);
INSERT INTO surveyquestion VALUES (73,'Are security-related alerts and error conditions documented for most projects?',34);
INSERT INTO surveyquestion VALUES (74,'Are most project utilizing a change management process that''s well understood?',35);
INSERT INTO surveyquestion VALUES (75,'Do project teams deliver an operational security guide with each product release?',35);
INSERT INTO surveyquestion VALUES (76,'Are most projects being audited to check each release for appropriate operational security information?',36);
INSERT INTO surveyquestion VALUES (77,'Is code signing routinely performed on software components using a consistent process?',36);

-- [7]SurveyAssertion
INSERT INTO surveyassertion VALUES (1,'Assurance program is documented and accessible to staff.',NULL,1);
INSERT INTO surveyassertion VALUES (2,'Assurance program has been used in recent development efforts.',NULL,1);
INSERT INTO surveyassertion VALUES (3,'Staff receives training against assurance program and responsibilities.',NULL,1);
INSERT INTO surveyassertion VALUES (4,'Assurance program goals are documented and accessible to staff.',NULL,2);
INSERT INTO surveyassertion VALUES (5,'Assurance program goals have been presented to staff.',NULL,2);
INSERT INTO surveyassertion VALUES (6,'A plan has been put in place to reach those goals in a specific period of time.',NULL,2);
INSERT INTO surveyassertion VALUES (7,'Organization has documented motivation behind creating a software security assurance program.',NULL,3);
INSERT INTO surveyassertion VALUES (8,'Assurance program has been customized to align with the organization''s motivation and goals.',NULL,3);
INSERT INTO surveyassertion VALUES (9,'Worst-case scenarios for organization''s application and data assets have been collected and documented.',NULL,3);
INSERT INTO surveyassertion VALUES (10,'Scenarios, contributing factors, and mitigating factors have been reviewed with business owners and other stakeholders.',NULL,3);
INSERT INTO surveyassertion VALUES (11,'A data and application risk classification system has been documented.',NULL,4);
INSERT INTO surveyassertion VALUES (12,'An evaluation criteria has been created to apply the classification system to data and applications.',NULL,4);
INSERT INTO surveyassertion VALUES (13,'Staff receives training in how to apply evaluation criteria to application and data assets.',NULL,4);
INSERT INTO surveyassertion VALUES (14,'Most applications and data have been categorized using this evaluation criteria.',NULL,4);
INSERT INTO surveyassertion VALUES (15,'The assurance program is customized based on data and application risk classification.',NULL,5);
INSERT INTO surveyassertion VALUES (16,'Staff receives training according to documented assurance program and risk classifications.',NULL,6);
INSERT INTO surveyassertion VALUES (17,'Statistics are collect for spending related to security incidents or breaches.',NULL,7);
INSERT INTO surveyassertion VALUES (18,'Baseline security costs are estimated based on each project based on it''s assigned security assurance road map and risk category.',NULL,7);
INSERT INTO surveyassertion VALUES (19,'Actual security spending is tracked for each project.',NULL,7);
INSERT INTO surveyassertion VALUES (20,'Actual spending vs. estimated spending is evaluated on a quarterly basis.',NULL,7);
INSERT INTO surveyassertion VALUES (21,'Spending statistics and historical data are used to make case-by-case decisions on security expenditures.',NULL,7);
INSERT INTO surveyassertion VALUES (22,'Security spending decisions are made on a per project basis with consideration for expense versus loss potential.',NULL,7);
INSERT INTO surveyassertion VALUES (23,'Statistics regarding similar organization''s security spending is collected regularly.',NULL,8);
INSERT INTO surveyassertion VALUES (24,'Compare potential cost savings by purchasing products or switching vendors for security tools.',NULL,8);
INSERT INTO surveyassertion VALUES (25,'Security cost-comparison exercises are conducted at least annually.',NULL,8);
INSERT INTO surveyassertion VALUES (26,'Project stakeholders review project''s compliance status biannually.',NULL,9);
INSERT INTO surveyassertion VALUES (27,'External, third-party regulatory or compliance requirements have been identified.',NULL,10);
INSERT INTO surveyassertion VALUES (28,'A consolidated list of regulatory and compliance requirements has been mapped to security requirements.',NULL,10);
INSERT INTO surveyassertion VALUES (29,'Control statements or responses have been created for each security requirement indicating how the organization will meet the requirement.',NULL,10);
INSERT INTO surveyassertion VALUES (30,'Security requirements are added to each project based on applicable regulatory and compliance standards.',NULL,10);
INSERT INTO surveyassertion VALUES (31,'The organization researches and updates regulatory or compliance requirements biannually.',NULL,10);
INSERT INTO surveyassertion VALUES (32,'A set of security policies has been created based on compliance drivers.',NULL,11);
INSERT INTO surveyassertion VALUES (33,'Optional or recommended compliance items have been added to security policies.',NULL,11);
INSERT INTO surveyassertion VALUES (34,'Requirements based on known business drivers for security have been added to security policies.',NULL,11);
INSERT INTO surveyassertion VALUES (35,'Common or similar policies have been grouped, generalized, and rewritten to satisfy compliance and security requirements.',NULL,11);
INSERT INTO surveyassertion VALUES (36,'Security policies do not include requirements that are too costly or difficult for project teams to comply.',NULL,11);
INSERT INTO surveyassertion VALUES (37,'Awareness programs have been created to advertise and spread awareness of security policies.',NULL,11);
INSERT INTO surveyassertion VALUES (38,'A process has been created for project teams to request an audit against security policies and compliance requirements.',NULL,12);
INSERT INTO surveyassertion VALUES (39,'Internal audits are prioritized based on business risk indicators.',NULL,12);
INSERT INTO surveyassertion VALUES (40,'Each project undergoes an audit at least biannually.',NULL,12);
INSERT INTO surveyassertion VALUES (41,'Awareness programs have been created to advertise and spread awareness of the organization''s audit process.',NULL,12);
INSERT INTO surveyassertion VALUES (42,'Audit results are reviewed by project stakeholders including per requirement pass/fail status, impact, and remediation.',NULL,12);
INSERT INTO surveyassertion VALUES (43,'Compliance and security gates are established throughout the development process.',NULL,13);
INSERT INTO surveyassertion VALUES (44,'An exception approval process has been created for legacy or other specialized projects.',NULL,13);
INSERT INTO surveyassertion VALUES (45,'Automated tools (code review, penetration testing, etc) are used to assist in identifying non-compliance prior to the audit process.',NULL,13);
INSERT INTO surveyassertion VALUES (46,'An automated system is used to capture, organize, and display audit data and documentation.',NULL,14);
INSERT INTO surveyassertion VALUES (47,'Access to audit data is controlled based on a need to know',NULL,14);
INSERT INTO surveyassertion VALUES (48,'Instructions and procedures for accessing audit data are published and advertised to project groups.',NULL,14);
INSERT INTO surveyassertion VALUES (49,'Application security awareness training is provided to all developers.',NULL,15);
INSERT INTO surveyassertion VALUES (50,'Training covers topics such as common vulnerabilities and best practice recommendations for eliminating vulnerabilities.',NULL,15);
INSERT INTO surveyassertion VALUES (51,'Training is conducted at least annually as well as on demand based on need.',NULL,15);
INSERT INTO surveyassertion VALUES (52,'Resources regarding secure development practices have been assembled and made available to developers.',NULL,16);
INSERT INTO surveyassertion VALUES (53,'Management informs development groups that they are expected to utilize secure development resources.',NULL,16);
INSERT INTO surveyassertion VALUES (54,'A checklist based on the secure development resources has been created to ensure guidelines are met during development.',NULL,16);
INSERT INTO surveyassertion VALUES (55,'Role specific application security training is given to developers, architects, QA, etc.',NULL,17);
INSERT INTO surveyassertion VALUES (56,'Managers and requirements specifiers receive training in security requirements planning, vulnerability and incident management, threat modeling, and misuse/abuse case design.',NULL,17);
INSERT INTO surveyassertion VALUES (57,'Testers and auditors receive training in code review, architecture and design analysis, runtime analysis, and effective security test planning.',NULL,17);
INSERT INTO surveyassertion VALUES (58,'Developer training includes security design patterns, tool-specific training, threat modeling and software assessment techniques.',NULL,17);
INSERT INTO surveyassertion VALUES (59,'Role specific training is provided at least annually as well as on demand based on need.',NULL,17);
INSERT INTO surveyassertion VALUES (60,'Internal or external security experts are available to project teams for consultation.',NULL,18);
INSERT INTO surveyassertion VALUES (61,'The process for requesting these experts is advertised to project teams.',NULL,18);
INSERT INTO surveyassertion VALUES (62,'A set security analysts or security-savvy developers have been selected as security coaches.',NULL,18);
INSERT INTO surveyassertion VALUES (63,'A centralized repository has been created to organize secure development information, resources, and processes.',NULL,19);
INSERT INTO surveyassertion VALUES (64,'An approval board and change control management process is in place to control modification of information in this repository.',NULL,19);
INSERT INTO surveyassertion VALUES (65,'A method for collaboration and communication of secure development topics has been provided.',NULL,19);
INSERT INTO surveyassertion VALUES (66,'Content is searchable based on common factors like platform, language, library, life-cycle stage, etc.',NULL,19);
INSERT INTO surveyassertion VALUES (67,'Exams are used to verify retention of security knowledge in a per training module or per role context.',NULL,20);
INSERT INTO surveyassertion VALUES (68,'Exams are given to staff at least biannually.',NULL,20);
INSERT INTO surveyassertion VALUES (69,'Staff are organized or ranked based on exam scores.',NULL,20);
INSERT INTO surveyassertion VALUES (70,'Some security activities or gates require staff of a certain rank to sign off before the item is marked as complete.',NULL,20);
INSERT INTO surveyassertion VALUES (71,'Likely worst-case scenarios are documented for each project based on its business risk profile.',NULL,21);
INSERT INTO surveyassertion VALUES (72,'Attack trees or a threat model is created for each project tracing the preconditions necessary for a worst-case scenario to be realized.',NULL,21);
INSERT INTO surveyassertion VALUES (73,'Attack trees or threat models are expanded to include potential security failures in current and historical functional requirements.',NULL,21);
INSERT INTO surveyassertion VALUES (74,'When new features are added to a project, attack trees or threat models are updated.',NULL,21);
INSERT INTO surveyassertion VALUES (75,'Potential external threat agents and their motivations are documented for each project.',NULL,22);
INSERT INTO surveyassertion VALUES (76,'Potential internal threat agents, their associated roles, and damage potential are documented for each project or architecture type.',NULL,22);
INSERT INTO surveyassertion VALUES (77,'A common set of threat agents, motivations, and other information is collected at the organization level and re-used within projects.',NULL,22);
INSERT INTO surveyassertion VALUES (78,'Each project derives abuse-cases from its use-cases.',NULL,23);
INSERT INTO surveyassertion VALUES (79,'As project requirements or features are added, abuse-cases are updated.',NULL,23);
INSERT INTO surveyassertion VALUES (80,'A documented weighting system based on documented threat agents, exploit value, technical difficulty, and other factors is used to rank threats.',NULL,24);
INSERT INTO surveyassertion VALUES (81,'Remediation of vulnerabilities is prioritized based on the weighting system.',NULL,24);
INSERT INTO surveyassertion VALUES (82,'Potential threats and ratings are reviewed with project stakeholders.',NULL,25);
INSERT INTO surveyassertion VALUES (83,'Third-party, external libraries and code used in each project are clearly identified and documented for each project.',NULL,26);
INSERT INTO surveyassertion VALUES (84,'Project threat models are updated based on identified threat agents and motivations for third party libraries and code.',NULL,26);
INSERT INTO surveyassertion VALUES (85,'An assessment for each project has been conducted to identify mitigating controls that prevent preconditions identified in attack trees or threat models.',NULL,27);
INSERT INTO surveyassertion VALUES (86,'This assessment is updated each time new features or requirements are introduced or the attack tree is modified.',NULL,27);
INSERT INTO surveyassertion VALUES (87,'Mitigating controls have been documented within the attack tree or threat model.',NULL,27);
INSERT INTO surveyassertion VALUES (88,'Mitigating controls or security requirements have been added to each project to address any preconditions that still lead to a successful attack within attack trees.',NULL,27);
INSERT INTO surveyassertion VALUES (89,'Security requirements are derived from functional requirements and customer/organization concerns.',NULL,28);
INSERT INTO surveyassertion VALUES (90,'A security auditor leads specification of security requirements within each project.',NULL,28);
INSERT INTO surveyassertion VALUES (91,'Security requirements are specific, measurable, and reasonable.',NULL,28);
INSERT INTO surveyassertion VALUES (92,'Security requirements are documented for each project.',NULL,28);
INSERT INTO surveyassertion VALUES (93,'Industry best practices are used to derive additional security requirements.',NULL,29);
INSERT INTO surveyassertion VALUES (94,'Existing code bases are analyzed by a security auditor for opportunities to add security requirements.',NULL,29);
INSERT INTO surveyassertion VALUES (95,'Plans to refactor existing code to implement security requirements are prioritized by project stakeholders including risk management, senior developers, and architects.',NULL,29);
INSERT INTO surveyassertion VALUES (96,'Users, roles, and privileges are identified in each project.',NULL,30);
INSERT INTO surveyassertion VALUES (97,'Resources and capabilities are identified in each project.',NULL,30);
INSERT INTO surveyassertion VALUES (98,'A matrix of roles and capabilities is documented for each project.',NULL,30);
INSERT INTO surveyassertion VALUES (99,'As new features are introduced, the matrix documentation is updated.',NULL,30);
INSERT INTO surveyassertion VALUES (100,'The matrix is reviewed with project stakeholders prior to release.',NULL,30);
INSERT INTO surveyassertion VALUES (101,'Additional security requirements are created based on feedback from code reviews, penetration tests, risk assessments, or other security activities.',NULL,31);
INSERT INTO surveyassertion VALUES (102,'During the creation of third-party agreements, specific security requirements, activities, and processes are considered for inclusion.',NULL,32);
INSERT INTO surveyassertion VALUES (103,'Audits are routinely performed to ensure security requirements have been specified for all functional requirements.',NULL,33);
INSERT INTO surveyassertion VALUES (104,'Audits also verify attack trees are constructed and mitigating controls are annotated.',NULL,33);
INSERT INTO surveyassertion VALUES (105,'A list of unfulfilled security requirements and their projected implementation date is documented.',NULL,33);
INSERT INTO surveyassertion VALUES (106,'Security requirement audits is performed on every development iteration prior to the implementation of code.',NULL,33);
INSERT INTO surveyassertion VALUES (107,'A weighted list of commonly used third-party libraries and code is collected and documented across the organization.',NULL,34);
INSERT INTO surveyassertion VALUES (108,'The libraries are informally evaluated for security based on past incidents, responses to identified issues, complexity, and appropriateness to the organization. Risk associated with these components are documented.',NULL,34);
INSERT INTO surveyassertion VALUES (109,'A list of approved third-party libraries for use within development projects is published.',NULL,34);
INSERT INTO surveyassertion VALUES (110,'A list of secure design principles (such as defense in depth) have been collected and documented.',NULL,35);
INSERT INTO surveyassertion VALUES (111,'These principles are used as a checklist during the design phase of each project.',NULL,35);
INSERT INTO surveyassertion VALUES (112,'A list of reusable resources is collected and categorized based on the security mechanisms they fulfill (LDAP server, single sign-on server, etc.).',NULL,36);
INSERT INTO surveyassertion VALUES (113,'The organization has selected a set of reusable resources to standardize on.',NULL,36);
INSERT INTO surveyassertion VALUES (114,'These resources have been thoroughly audited for security issues.',NULL,36);
INSERT INTO surveyassertion VALUES (115,'Design guidance has been created for secure integration of each component within a project.',NULL,36);
INSERT INTO surveyassertion VALUES (116,'Project groups receive training regarding the proper use and integration of these components.',NULL,36);
INSERT INTO surveyassertion VALUES (117,'Each project is categorized based on architecture (client-server, web application, thick client, etc.).',NULL,37);
INSERT INTO surveyassertion VALUES (118,'A set of design patterns is documented for each architecture (Risk-based authentication system, single sign-on, centralized logging, etc.).',NULL,37);
INSERT INTO surveyassertion VALUES (119,'Architects, senior developers, or other project stakeholders identify applicable and appropriate patterns for each project during the design phase.',NULL,37);
INSERT INTO surveyassertion VALUES (120,'Reusable code components based on established design patterns and shared security services have been created for used within projects across the organization.',NULL,38);
INSERT INTO surveyassertion VALUES (121,'Reusable code components are regularly maintained, updated, and assessed for risk.',NULL,38);
INSERT INTO surveyassertion VALUES (122,'Audits include evaluation of usage of recommended frameworks, design patterns, shared security services, and reference platforms.',NULL,39);
INSERT INTO surveyassertion VALUES (123,'Results are used to determine if additional frameworks, resources, or guidance need to be specified as well as the quality of guidance provided to project teams.',NULL,39);
INSERT INTO surveyassertion VALUES (124,'Each project group creates a simplified one-page architecture diagram representing high-level modules.',NULL,40);
INSERT INTO surveyassertion VALUES (125,'Each component in the diagram is analyzed in terms of accessibility of the interface from authorized users, anonymous users, operators, application-specific roles, etc.',NULL,40);
INSERT INTO surveyassertion VALUES (126,'Interfaces and components with similar accessibility profiles are grouped and documented as the software attack surface.',NULL,40);
INSERT INTO surveyassertion VALUES (127,'One-page architecture diagram is annotated with security-related functionality.',NULL,40);
INSERT INTO surveyassertion VALUES (128,'Grouped interface designs are evaluated to determine whether security-related functionality is applied consistently.',NULL,40);
INSERT INTO surveyassertion VALUES (129,'Architecture diagrams and attack surface analysis is updated when an application''s design is altered.',NULL,40);
INSERT INTO surveyassertion VALUES (130,'Each project group documents a list of assumptions the software relies on for safe execution.',NULL,41);
INSERT INTO surveyassertion VALUES (131,'Each project group documents a list of security requirements for the application.',NULL,41);
INSERT INTO surveyassertion VALUES (132,'Each project''s one-page architecture diagram is evaluated for security requirements and assumptions. Missing items are documented as findings.',NULL,41);
INSERT INTO surveyassertion VALUES (133,'Evaluations are repeated when security requirements are added or the high-level system design changes occur within a project.',NULL,41);
INSERT INTO surveyassertion VALUES (134,'Each interface within the high-level architecture diagram is formally inspected for security mechanisms (includes internal and external application tiers).',NULL,42);
INSERT INTO surveyassertion VALUES (135,'Analysis includes the following minimum categories: authentication, authorization, input validation, output encoding, error handling, logging, cryptography, and session management.',NULL,42);
INSERT INTO surveyassertion VALUES (136,'Each software release is required to undergo a design review.',NULL,42);
INSERT INTO surveyassertion VALUES (137,'A process for requesting a formal design review is created and advertised to project stakeholders.',NULL,43);
INSERT INTO surveyassertion VALUES (138,'The design review process is centralized and requests are prioritized based on the organization''s business risk profile.',NULL,43);
INSERT INTO surveyassertion VALUES (139,'Design reviews include verification of software''s attack surface, security requirements, and security mechanisms within module interfaces.',NULL,43);
INSERT INTO surveyassertion VALUES (140,'Project teams identify details on system behavior around high-risk functionality (such as CRUD of sensitive data).',NULL,44);
INSERT INTO surveyassertion VALUES (141,'Project teams document relevant software modules, data sources, actors, and messages that flow between data sources or business functions.',NULL,44);
INSERT INTO surveyassertion VALUES (142,'Utilizing the data flow diagram, project teams identify software modules that handle data or functionality with differing sensitivity levels.',NULL,44);
INSERT INTO surveyassertion VALUES (143,'A consistent design review program has been established.',NULL,45);
INSERT INTO surveyassertion VALUES (144,'A criteria is created to determine whether a project passes the design review process (for example no high-risk findings).',NULL,45);
INSERT INTO surveyassertion VALUES (145,'Release gates are used within the development process to ensure projects cannot advance to the next step until the project succesfully completes a design review.',NULL,45);
INSERT INTO surveyassertion VALUES (146,'A process is established for handling design review results in legacy projects, including a requirement to establish a time frame for successfully completing the design review process.',NULL,45);
INSERT INTO surveyassertion VALUES (147,'The organization has derived a light-weight code review checklist based on previously identified security requirements.',NULL,46);
INSERT INTO surveyassertion VALUES (148,'Developers receive training regarding their role and the goals of the checklist.',NULL,46);
INSERT INTO surveyassertion VALUES (149,'High-risk software components are prioritized above other code during the review process.',NULL,47);
INSERT INTO surveyassertion VALUES (150,'Security auditors or code review tools are utilized to perform the checklist based code review.',NULL,47);
INSERT INTO surveyassertion VALUES (151,'Remediation of findings in high-risk components are prioritized appropriately.',NULL,47);
INSERT INTO surveyassertion VALUES (152,'The organization has reviewed open source, commercial, and other solution for performing automated code reviews and selected a solution that will best fit the organization.',NULL,48);
INSERT INTO surveyassertion VALUES (153,'Automated code analysis has been integrated within the development process (at code check-in for example).',NULL,48);
INSERT INTO surveyassertion VALUES (154,'Project stakeholders review and accept any risks that they choose not to address.',NULL,49);
INSERT INTO surveyassertion VALUES (155,'Project stakeholders have created a plan for addressing findings in legacy code.',NULL,49);
INSERT INTO surveyassertion VALUES (156,'Automated code review tools are customized to perform additional API checks, verify organization coding standards, etc. (including the addition of custom rules).',NULL,50);
INSERT INTO surveyassertion VALUES (157,'Each project contains a checkpoint in the development process that requires a specific level of code review results to be met before release.',NULL,51);
INSERT INTO surveyassertion VALUES (158,'The organization has established an exception process for legacy code, which requires a certain level of assurance to be met within a specific time period.',NULL,51);
INSERT INTO surveyassertion VALUES (159,'The organization has documented general test cases based on security requirements and common vulnerabilities.',NULL,52);
INSERT INTO surveyassertion VALUES (160,'Each project has documented test cases for security requirements specific to that project.',NULL,52);
INSERT INTO surveyassertion VALUES (161,'Staff ensures test cases are applicable, feasible, and can be executed by relevant development, security, and quality assurance staff.',NULL,52);
INSERT INTO surveyassertion VALUES (162,'Project teams engage security auditors to perform penetration testing.',NULL,53);
INSERT INTO surveyassertion VALUES (163,'Penetration testing covers security requirements and test cases at a minimum.',NULL,53);
INSERT INTO surveyassertion VALUES (164,'Penetration testing issues are resolved to an acceptable level of risk prior to release.',NULL,53);
INSERT INTO surveyassertion VALUES (165,'Penetration testing issues are reviewed with project stakeholders.',NULL,54);
INSERT INTO surveyassertion VALUES (166,'Project stakeholders select issues to remediate prior to release.',NULL,54);
INSERT INTO surveyassertion VALUES (167,'Project stakeholders set a time line for addressing identified issues or accept outstanding risks.',NULL,54);
INSERT INTO surveyassertion VALUES (168,'The organization has reviewed open source, commercial, and other solution for performing automated security testing and selected a solution that will best fit the organization.',NULL,55);
INSERT INTO surveyassertion VALUES (169,'Automated security testing has been integrated within the development process.',NULL,55);
INSERT INTO surveyassertion VALUES (170,'Automated security testing occurs across projects on a regular, scheduled basis.',NULL,56);
INSERT INTO surveyassertion VALUES (171,'A process has been created for reviewing security testing results with project stakeholders and remediating risk.',NULL,56);
INSERT INTO surveyassertion VALUES (172,'Using automated tools, unit tests, or other similar methods, a comprehensive set of security test cases is constructed and evaluated for each project.',NULL,57);
INSERT INTO surveyassertion VALUES (173,'Each project contains a checkpoint in the development process that requires a specific level of security testing results to be met before release.',NULL,58);
INSERT INTO surveyassertion VALUES (174,'The organization has established an exception process for handling security testing results in legacy projects, which requires a certain level of assurance to be met within a specific time period',NULL,58);
INSERT INTO surveyassertion VALUES (175,'Each project or development group has assigned a security-savvy developer to be the point of contact for security issues.',NULL,59);
INSERT INTO surveyassertion VALUES (176,'The organization maintains a centralized list of applications, projects, and points of contact regarding security issues.',NULL,59);
INSERT INTO surveyassertion VALUES (177,'The organization has defined a centralized security response team responsible for managing incidents, vulnerability reports, remediation, and reporting.',NULL,60);
INSERT INTO surveyassertion VALUES (178,'During an incident, the security response team provides briefings and upward communication.',NULL,60);
INSERT INTO surveyassertion VALUES (179,'The security response team meets with project groups at least annually to brief individuals on the incident response process.',NULL,61);
INSERT INTO surveyassertion VALUES (180,'The organization has a documented process for incident handling and reporting, including team members'' roles and responsibilities.',NULL,62);
INSERT INTO surveyassertion VALUES (181,'The incident response team receives training at least annually.',NULL,62);
INSERT INTO surveyassertion VALUES (182,'The incident response process includes items such as triage to prevent additional damage, change management and patch application, managing project personnel and others involved in the incident, forensic evidence collection and preservation, limiting communication about the incident to stakeholders, well-defined reporting to stakeholders and/or communications trees, etc.',NULL,62);
INSERT INTO surveyassertion VALUES (183,'The organization has adopted and documented a security issue disclosure process.',NULL,62);
INSERT INTO surveyassertion VALUES (184,'The organization has adopted and documented a patch release process.',NULL,62);
INSERT INTO surveyassertion VALUES (185,'The organization has adopted and documented a process for collaborating with individuals exercising responsible disclosure.',NULL,62);
INSERT INTO surveyassertion VALUES (186,'The organization advertises a process for handling issues disclosed responsibly by third-parties.',NULL,62);
INSERT INTO surveyassertion VALUES (187,'The organization has adopted and documented a practice for disclosing incidents to the public (if necessary and in compliance of state and federal laws).',NULL,62);
INSERT INTO surveyassertion VALUES (188,'A formal, documented process has been established for tracking, handling, and communicating incidents internally.',NULL,63);
INSERT INTO surveyassertion VALUES (189,'Incident response teams investigate root causes of security failures leading to an incident or security issue.',NULL,64);
INSERT INTO surveyassertion VALUES (190,'The root cause is used to analyze the project or software for additional potential failures.',NULL,64);
INSERT INTO surveyassertion VALUES (191,'The root cause is compared to security requirements and existing processes to determine how to improve security assurance efforts.',NULL,64);
INSERT INTO surveyassertion VALUES (192,'The root cause is reviewed with project stakeholders and management to determine a mitigation process and time frame.',NULL,64);
INSERT INTO surveyassertion VALUES (193,'The organization''s centralized incident response process is expanded to collect and record metrics.',NULL,65);
INSERT INTO surveyassertion VALUES (194,'Metrics such as frequency of software projects affected by incidents, system downtime and cost from loss of use, human resources taken in handling and cleanup of the incident, estimates of long-term costs such as regulatory fines or brand damage, etc. are collected.',NULL,65);
INSERT INTO surveyassertion VALUES (195,'Past security incidents are recorded and reviewed every six months and recommendations to improve the organization or software assurance process are made.',NULL,65);
INSERT INTO surveyassertion VALUES (196,'The organization documents and maintains a set of baseline operating platforms.',NULL,66);
INSERT INTO surveyassertion VALUES (197,'project teams expand on existing, approved baseline operating platforms to meet project requirements.',NULL,66);
INSERT INTO surveyassertion VALUES (198,'Project teams document assumptions made about operating environments during development.',NULL,66);
INSERT INTO surveyassertion VALUES (199,'Organization and project operating platforms are reviewed at least every six months.',NULL,66);
INSERT INTO surveyassertion VALUES (200,'Project teams or the operations team regularly monitors software components for security updates.',NULL,67);
INSERT INTO surveyassertion VALUES (201,'Project teams or the operations team apply critical software component updates once identified.',NULL,67);
INSERT INTO surveyassertion VALUES (202,'A documented ongoing process has been created at the organization level to consistently identify and apply security patches.',NULL,68);
INSERT INTO surveyassertion VALUES (203,'The patch management process requires security patches to be applied within a specific time window based on risk.',NULL,68);
INSERT INTO surveyassertion VALUES (204,'Project teams share a list of third-party components and a source for updates with the operations team.',NULL,68);
INSERT INTO surveyassertion VALUES (205,'The organization has reviewed open source, commercial, and other solution for performing automated monitoring and patch management and has selected a solution that will best fit the organization.',NULL,69);
INSERT INTO surveyassertion VALUES (206,'Automated monitoring and patch management tools and processes has been integrated within the organization''s operational environments.',NULL,69);
INSERT INTO surveyassertion VALUES (207,'Project teams and the operations team document and implement application-level heath checks.',NULL,69);
INSERT INTO surveyassertion VALUES (208,'The automated monitoring and patch management tools generate alerts and a documented process for handling and responding to these alerts has been established.',NULL,69);
INSERT INTO surveyassertion VALUES (209,'Project teams and the operations team reviews configuration changes and alerts at least quarterly in order to improve current processes.',NULL,69);
INSERT INTO surveyassertion VALUES (210,'The security team or operations team reviews optional tools for protecting software with project stakeholders.',NULL,70);
INSERT INTO surveyassertion VALUES (211,'Appropriate solutions such as a WAF, IPS, HIDS, etc. are adopted for each project''s operational environment.',NULL,70);
INSERT INTO surveyassertion VALUES (212,'Project-level audits include analysis and testing of the operational environment in which the software resides.',NULL,71);
INSERT INTO surveyassertion VALUES (213,'Audits include verification of compliance with the organization''s patch management process.',NULL,71);
INSERT INTO surveyassertion VALUES (214,'Operational environment audits occur at least every six months.',NULL,71);
INSERT INTO surveyassertion VALUES (215,'The organization has established an exception process for legacy operational environments, which requires a certain level of assurance to be met within a specific time period.',NULL,71);
INSERT INTO surveyassertion VALUES (216,'Project teams document security-relevant configuration and operations information and provide documentation to users and operators.',NULL,72);
INSERT INTO surveyassertion VALUES (217,'Project teams document a list of security features built into the software, options for configuration, security impacts, and include a secure default.',NULL,72);
INSERT INTO surveyassertion VALUES (218,'Project stakeholders review security documentation prior to release.',NULL,72);
INSERT INTO surveyassertion VALUES (219,'Project teams update security documentation at least every six months.',NULL,72);
INSERT INTO surveyassertion VALUES (220,'Project teams document important security-related alerts and error conditions and provide the documentation to the operations team.',NULL,73);
INSERT INTO surveyassertion VALUES (221,'Project teams update alerts and error conditions documentation at least every six months.',NULL,73);
INSERT INTO surveyassertion VALUES (222,'Project teams document an automated or manual process for monitoring and responding to application alerts and errors.',NULL,73);
INSERT INTO surveyassertion VALUES (223,'Operations team regularly monitors and responds to application alerts and errors based on provided documentation.',NULL,73);
INSERT INTO surveyassertion VALUES (224,'The organization has documented and implemented a change management process.',NULL,74);
INSERT INTO surveyassertion VALUES (225,'The development process includes steps intended to collect installation or upgrade related information.',NULL,74);
INSERT INTO surveyassertion VALUES (226,'Project teams document first-time installation and upgrade instructions.',NULL,74);
INSERT INTO surveyassertion VALUES (227,'Project teams review installation and upgrade instructions for completeness and accuracy prior to release.',NULL,74);
INSERT INTO surveyassertion VALUES (228,'Project teams communicate Installation and upgrade instructions to the operations team during for release cycle.',NULL,74);
INSERT INTO surveyassertion VALUES (229,'Project teams develop an operational security guide starting with information documented about security-related alerts and errors.',NULL,75);
INSERT INTO surveyassertion VALUES (230,'Guides include all security information needed by users and operators.',NULL,75);
INSERT INTO surveyassertion VALUES (231,'Guides include items such as: security-related configuration options, event handling procedures, installation and upgrade guides, operational environment specifications, security-related assumptions about the deployment environment, etc.',NULL,75);
INSERT INTO surveyassertion VALUES (232,'Project teams work with project stakeholders to determine an appropriate level of detail for the operational security guide.',NULL,75);
INSERT INTO surveyassertion VALUES (233,'Project teams update the operational security guide with each release.',NULL,75);
INSERT INTO surveyassertion VALUES (234,'The audit process includes verification that projects'' operational security guides are complete, contain sufficient details, and are up-to-date.',NULL,76);
INSERT INTO surveyassertion VALUES (235,'The organization has established an exception process for legacy projects, which requires a certain level of assurance within the software''s operational environment to be met within a specific time period.',NULL,76);
INSERT INTO surveyassertion VALUES (236,'Code signing is used to ensure and verify the authenticity of developed code.',NULL,77);
INSERT INTO surveyassertion VALUES (237,'A code signing and key management process has been documented for the organization.',NULL,77);
INSERT INTO surveyassertion VALUES (238,'Project teams work with security auditors to determine which components warrant including within the code signing process.',NULL,77);
INSERT INTO surveyassertion VALUES (239,'List of included code components is reviewed and updated regularly.',NULL,77);
